// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k_conv2D_read_kernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        I_ITER,
        I,
        o_iter_dout,
        o_iter_empty_n,
        o_iter_read,
        o_iter_first,
        ptr_kernel_dout,
        ptr_kernel_empty_n,
        ptr_kernel_read,
        out_read_kernel_din,
        out_read_kernel_full_n,
        out_read_kernel_write
);

parameter    ap_ST_fsm_state1 = 78'd1;
parameter    ap_ST_fsm_state2 = 78'd2;
parameter    ap_ST_fsm_state3 = 78'd4;
parameter    ap_ST_fsm_state4 = 78'd8;
parameter    ap_ST_fsm_state5 = 78'd16;
parameter    ap_ST_fsm_state6 = 78'd32;
parameter    ap_ST_fsm_state7 = 78'd64;
parameter    ap_ST_fsm_state8 = 78'd128;
parameter    ap_ST_fsm_state9 = 78'd256;
parameter    ap_ST_fsm_state10 = 78'd512;
parameter    ap_ST_fsm_state11 = 78'd1024;
parameter    ap_ST_fsm_state12 = 78'd2048;
parameter    ap_ST_fsm_state13 = 78'd4096;
parameter    ap_ST_fsm_state14 = 78'd8192;
parameter    ap_ST_fsm_state15 = 78'd16384;
parameter    ap_ST_fsm_state16 = 78'd32768;
parameter    ap_ST_fsm_state17 = 78'd65536;
parameter    ap_ST_fsm_state18 = 78'd131072;
parameter    ap_ST_fsm_state19 = 78'd262144;
parameter    ap_ST_fsm_state20 = 78'd524288;
parameter    ap_ST_fsm_state21 = 78'd1048576;
parameter    ap_ST_fsm_state22 = 78'd2097152;
parameter    ap_ST_fsm_state23 = 78'd4194304;
parameter    ap_ST_fsm_state24 = 78'd8388608;
parameter    ap_ST_fsm_state25 = 78'd16777216;
parameter    ap_ST_fsm_state26 = 78'd33554432;
parameter    ap_ST_fsm_state27 = 78'd67108864;
parameter    ap_ST_fsm_state28 = 78'd134217728;
parameter    ap_ST_fsm_state29 = 78'd268435456;
parameter    ap_ST_fsm_state30 = 78'd536870912;
parameter    ap_ST_fsm_state31 = 78'd1073741824;
parameter    ap_ST_fsm_state32 = 78'd2147483648;
parameter    ap_ST_fsm_state33 = 78'd4294967296;
parameter    ap_ST_fsm_state34 = 78'd8589934592;
parameter    ap_ST_fsm_state35 = 78'd17179869184;
parameter    ap_ST_fsm_state36 = 78'd34359738368;
parameter    ap_ST_fsm_state37 = 78'd68719476736;
parameter    ap_ST_fsm_state38 = 78'd137438953472;
parameter    ap_ST_fsm_state39 = 78'd274877906944;
parameter    ap_ST_fsm_state40 = 78'd549755813888;
parameter    ap_ST_fsm_state41 = 78'd1099511627776;
parameter    ap_ST_fsm_state42 = 78'd2199023255552;
parameter    ap_ST_fsm_state43 = 78'd4398046511104;
parameter    ap_ST_fsm_state44 = 78'd8796093022208;
parameter    ap_ST_fsm_state45 = 78'd17592186044416;
parameter    ap_ST_fsm_state46 = 78'd35184372088832;
parameter    ap_ST_fsm_state47 = 78'd70368744177664;
parameter    ap_ST_fsm_state48 = 78'd140737488355328;
parameter    ap_ST_fsm_state49 = 78'd281474976710656;
parameter    ap_ST_fsm_state50 = 78'd562949953421312;
parameter    ap_ST_fsm_state51 = 78'd1125899906842624;
parameter    ap_ST_fsm_state52 = 78'd2251799813685248;
parameter    ap_ST_fsm_state53 = 78'd4503599627370496;
parameter    ap_ST_fsm_state54 = 78'd9007199254740992;
parameter    ap_ST_fsm_state55 = 78'd18014398509481984;
parameter    ap_ST_fsm_state56 = 78'd36028797018963968;
parameter    ap_ST_fsm_state57 = 78'd72057594037927936;
parameter    ap_ST_fsm_state58 = 78'd144115188075855872;
parameter    ap_ST_fsm_state59 = 78'd288230376151711744;
parameter    ap_ST_fsm_state60 = 78'd576460752303423488;
parameter    ap_ST_fsm_state61 = 78'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 78'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 78'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 78'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 78'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 78'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 78'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 78'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 78'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 78'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 78'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 78'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 78'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 78'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 78'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 78'd37778931862957161709568;
parameter    ap_ST_fsm_pp0_stage0 = 78'd75557863725914323419136;
parameter    ap_ST_fsm_state79 = 78'd151115727451828646838272;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [31:0] m_axi_gmem1_WDATA;
output  [3:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [31:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [31:0] I_ITER;
input  [31:0] I;
input  [30:0] o_iter_dout;
input   o_iter_empty_n;
output   o_iter_read;
input  [31:0] o_iter_first;
input  [63:0] ptr_kernel_dout;
input   ptr_kernel_empty_n;
output   ptr_kernel_read;
output  [4607:0] out_read_kernel_din;
input   out_read_kernel_full_n;
output   out_read_kernel_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem1_ARVALID;
reg m_axi_gmem1_RREADY;
reg o_iter_read;
reg ptr_kernel_read;
reg out_read_kernel_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [77:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem1_blk_n_AR;
wire    ap_CS_fsm_state6;
reg    gmem1_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln65_reg_4110;
reg    o_iter_blk_n;
wire    ap_CS_fsm_state2;
reg    ptr_kernel_blk_n;
reg    out_read_kernel_blk_n;
wire    ap_CS_fsm_state79;
reg   [7:0] indvar_flatten301_reg_791;
reg   [2:0] cpo_reg_802;
reg   [6:0] indvar_flatten_reg_813;
reg   [2:0] cpi_reg_824;
reg   [3:0] p_reg_835;
wire   [27:0] div57_i_fu_902_p3;
wire   [24:0] trunc_ln208_fu_910_p1;
reg   [63:0] ptr_kernel_read_reg_3192;
wire  signed [31:0] add_ln94_fu_938_p2;
reg  signed [31:0] add_ln94_reg_3202;
wire   [31:0] grp_fu_944_p2;
reg   [31:0] mul_ln208_reg_3207;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln61_fu_948_p2;
reg   [63:0] gmem1_addr_reg_4090;
wire   [30:0] i_1_fu_1008_p2;
reg   [30:0] i_1_reg_4096;
wire    ap_CS_fsm_state76;
wire   [0:0] icmp_ln61_1_fu_1018_p2;
wire   [7:0] add_ln65_fu_1023_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state77_pp0_stage0_iter0;
reg    ap_block_state78_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln65_fu_1029_p2;
wire   [2:0] select_ln65_1_fu_1055_p3;
reg   [2:0] select_ln65_1_reg_4114;
wire   [1:0] trunc_ln65_fu_1063_p1;
reg   [1:0] trunc_ln65_reg_4119;
wire   [3:0] select_ln66_fu_1109_p3;
reg   [3:0] select_ln66_reg_4123;
wire   [1:0] select_ln66_1_fu_1121_p3;
reg   [1:0] select_ln66_1_reg_4127;
wire   [2:0] select_ln66_2_fu_1129_p3;
wire   [3:0] add_ln67_fu_1137_p2;
wire   [6:0] select_ln66_3_fu_1149_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state77;
reg   [30:0] i_reg_780;
wire    ap_CS_fsm_state75;
reg   [2:0] ap_phi_mux_cpo_phi_fu_806_p4;
wire  signed [63:0] sext_ln61_1_fu_998_p1;
reg   [31:0] k_pixel_3_3_8_fu_156;
wire   [31:0] k_pixel_3_3_0_fu_1157_p1;
reg   [31:0] k_pixel_3_3_8_1_fu_160;
reg   [31:0] k_pixel_3_3_8_2_fu_164;
reg   [31:0] k_pixel_3_3_8_3_fu_168;
reg   [31:0] k_pixel_3_3_8_4_fu_172;
reg   [31:0] k_pixel_3_3_8_5_fu_176;
reg   [31:0] k_pixel_3_3_8_6_fu_180;
reg   [31:0] k_pixel_3_3_8_7_fu_184;
reg   [31:0] k_pixel_3_3_8_8_fu_188;
reg   [31:0] k_pixel_3_3_8_9_fu_192;
reg   [31:0] k_pixel_3_3_8_10_fu_196;
reg   [31:0] k_pixel_3_3_8_11_fu_200;
reg   [31:0] k_pixel_3_3_8_12_fu_204;
reg   [31:0] k_pixel_3_3_8_13_fu_208;
reg   [31:0] k_pixel_3_3_8_14_fu_212;
reg   [31:0] k_pixel_3_3_8_15_fu_216;
reg   [31:0] k_pixel_3_3_8_16_fu_220;
reg   [31:0] k_pixel_3_3_8_17_fu_224;
reg   [31:0] k_pixel_3_3_8_18_fu_228;
reg   [31:0] k_pixel_3_3_8_19_fu_232;
reg   [31:0] k_pixel_3_3_8_20_fu_236;
reg   [31:0] k_pixel_3_3_8_21_fu_240;
reg   [31:0] k_pixel_3_3_8_22_fu_244;
reg   [31:0] k_pixel_3_3_8_23_fu_248;
reg   [31:0] k_pixel_3_3_8_24_fu_252;
reg   [31:0] k_pixel_3_3_8_25_fu_256;
reg   [31:0] k_pixel_3_3_8_26_fu_260;
reg   [31:0] k_pixel_3_3_8_27_fu_264;
reg   [31:0] k_pixel_3_3_8_28_fu_268;
reg   [31:0] k_pixel_3_3_8_29_fu_272;
reg   [31:0] k_pixel_3_3_8_30_fu_276;
reg   [31:0] k_pixel_3_3_8_31_fu_280;
reg   [31:0] k_pixel_3_3_8_32_fu_284;
reg   [31:0] k_pixel_3_3_8_33_fu_288;
reg   [31:0] k_pixel_3_3_8_34_fu_292;
reg   [31:0] k_pixel_3_3_8_35_fu_296;
reg   [31:0] k_pixel_3_3_8_36_fu_300;
reg   [31:0] k_pixel_3_3_8_37_fu_304;
reg   [31:0] k_pixel_3_3_8_38_fu_308;
reg   [31:0] k_pixel_3_3_8_39_fu_312;
reg   [31:0] k_pixel_3_3_8_40_fu_316;
reg   [31:0] k_pixel_3_3_8_41_fu_320;
reg   [31:0] k_pixel_3_3_8_42_fu_324;
reg   [31:0] k_pixel_3_3_8_43_fu_328;
reg   [31:0] k_pixel_3_3_8_44_fu_332;
reg   [31:0] k_pixel_3_3_8_45_fu_336;
reg   [31:0] k_pixel_3_3_8_46_fu_340;
reg   [31:0] k_pixel_3_3_8_47_fu_344;
reg   [31:0] k_pixel_3_3_8_48_fu_348;
reg   [31:0] k_pixel_3_3_8_49_fu_352;
reg   [31:0] k_pixel_3_3_8_50_fu_356;
reg   [31:0] k_pixel_3_3_8_51_fu_360;
reg   [31:0] k_pixel_3_3_8_52_fu_364;
reg   [31:0] k_pixel_3_3_8_53_fu_368;
reg   [31:0] k_pixel_3_3_8_54_fu_372;
reg   [31:0] k_pixel_3_3_8_55_fu_376;
reg   [31:0] k_pixel_3_3_8_56_fu_380;
reg   [31:0] k_pixel_3_3_8_57_fu_384;
reg   [31:0] k_pixel_3_3_8_58_fu_388;
reg   [31:0] k_pixel_3_3_8_59_fu_392;
reg   [31:0] k_pixel_3_3_8_60_fu_396;
reg   [31:0] k_pixel_3_3_8_61_fu_400;
reg   [31:0] k_pixel_3_3_8_62_fu_404;
reg   [31:0] k_pixel_3_3_8_63_fu_408;
reg   [31:0] k_pixel_3_3_8_64_fu_412;
reg   [31:0] k_pixel_3_3_8_65_fu_416;
reg   [31:0] k_pixel_3_3_8_66_fu_420;
reg   [31:0] k_pixel_3_3_8_67_fu_424;
reg   [31:0] k_pixel_3_3_8_68_fu_428;
reg   [31:0] k_pixel_3_3_8_69_fu_432;
reg   [31:0] k_pixel_3_3_8_70_fu_436;
reg   [31:0] k_pixel_3_3_8_71_fu_440;
reg   [31:0] k_pixel_3_3_8_72_fu_444;
reg   [31:0] k_pixel_3_3_8_73_fu_448;
reg   [31:0] k_pixel_3_3_8_74_fu_452;
reg   [31:0] k_pixel_3_3_8_75_fu_456;
reg   [31:0] k_pixel_3_3_8_76_fu_460;
reg   [31:0] k_pixel_3_3_8_77_fu_464;
reg   [31:0] k_pixel_3_3_8_78_fu_468;
reg   [31:0] k_pixel_3_3_8_79_fu_472;
reg   [31:0] k_pixel_3_3_8_80_fu_476;
reg   [31:0] k_pixel_3_3_8_81_fu_480;
reg   [31:0] k_pixel_3_3_8_82_fu_484;
reg   [31:0] k_pixel_3_3_8_83_fu_488;
reg   [31:0] k_pixel_3_3_8_84_fu_492;
reg   [31:0] k_pixel_3_3_8_85_fu_496;
reg   [31:0] k_pixel_3_3_8_86_fu_500;
reg   [31:0] k_pixel_3_3_8_87_fu_504;
reg   [31:0] k_pixel_3_3_8_88_fu_508;
reg   [31:0] k_pixel_3_3_8_89_fu_512;
reg   [31:0] k_pixel_3_3_8_90_fu_516;
reg   [31:0] k_pixel_3_3_8_91_fu_520;
reg   [31:0] k_pixel_3_3_8_92_fu_524;
reg   [31:0] k_pixel_3_3_8_93_fu_528;
reg   [31:0] k_pixel_3_3_8_94_fu_532;
reg   [31:0] k_pixel_3_3_8_95_fu_536;
reg   [31:0] k_pixel_3_3_8_96_fu_540;
reg   [31:0] k_pixel_3_3_8_97_fu_544;
reg   [31:0] k_pixel_3_3_8_98_fu_548;
reg   [31:0] k_pixel_3_3_8_99_fu_552;
reg   [31:0] k_pixel_3_3_8_100_fu_556;
reg   [31:0] k_pixel_3_3_8_101_fu_560;
reg   [31:0] k_pixel_3_3_8_102_fu_564;
reg   [31:0] k_pixel_3_3_8_103_fu_568;
reg   [31:0] k_pixel_3_3_8_104_fu_572;
reg   [31:0] k_pixel_3_3_8_105_fu_576;
reg   [31:0] k_pixel_3_3_8_106_fu_580;
reg   [31:0] k_pixel_3_3_8_107_fu_584;
reg   [31:0] k_pixel_3_3_8_108_fu_588;
reg   [31:0] k_pixel_3_3_8_109_fu_592;
reg   [31:0] k_pixel_3_3_8_110_fu_596;
reg   [31:0] k_pixel_3_3_8_111_fu_600;
reg   [31:0] k_pixel_3_3_8_112_fu_604;
reg   [31:0] k_pixel_3_3_8_113_fu_608;
reg   [31:0] k_pixel_3_3_8_114_fu_612;
reg   [31:0] k_pixel_3_3_8_115_fu_616;
reg   [31:0] k_pixel_3_3_8_116_fu_620;
reg   [31:0] k_pixel_3_3_8_117_fu_624;
reg   [31:0] k_pixel_3_3_8_118_fu_628;
reg   [31:0] k_pixel_3_3_8_119_fu_632;
reg   [31:0] k_pixel_3_3_8_120_fu_636;
reg   [31:0] k_pixel_3_3_8_121_fu_640;
reg   [31:0] k_pixel_3_3_8_122_fu_644;
reg   [31:0] k_pixel_3_3_8_123_fu_648;
reg   [31:0] k_pixel_3_3_8_124_fu_652;
reg   [31:0] k_pixel_3_3_8_125_fu_656;
reg   [31:0] k_pixel_3_3_8_126_fu_660;
reg   [31:0] k_pixel_3_3_8_127_fu_664;
reg   [31:0] k_pixel_3_3_8_128_fu_668;
reg   [31:0] k_pixel_3_3_8_129_fu_672;
reg   [31:0] k_pixel_3_3_8_130_fu_676;
reg   [31:0] k_pixel_3_3_8_131_fu_680;
reg   [31:0] k_pixel_3_3_8_132_fu_684;
reg   [31:0] k_pixel_3_3_8_133_fu_688;
reg   [31:0] k_pixel_3_3_8_134_fu_692;
reg   [31:0] k_pixel_3_3_8_135_fu_696;
reg   [31:0] k_pixel_3_3_8_136_fu_700;
reg   [31:0] k_pixel_3_3_8_137_fu_704;
reg   [31:0] k_pixel_3_3_8_138_fu_708;
reg   [31:0] k_pixel_3_3_8_139_fu_712;
reg   [31:0] k_pixel_3_3_8_140_fu_716;
reg   [31:0] k_pixel_3_3_8_141_fu_720;
reg   [31:0] k_pixel_3_3_8_142_fu_724;
reg   [31:0] k_pixel_3_3_8_143_fu_728;
reg    ap_block_state1;
reg    ap_block_state2;
wire   [31:0] sub56_i_fu_846_p2;
wire   [29:0] empty_fu_860_p1;
wire   [29:0] p_neg_i_fu_864_p2;
wire   [27:0] p_lshr_cast_i_fu_870_p4;
wire   [29:0] sub56_cast_i_fu_886_p2;
wire   [0:0] tmp_fu_852_p3;
wire   [27:0] p_neg_t_i_fu_880_p2;
wire   [27:0] p_lshr_f_cast_i_fu_892_p4;
wire   [31:0] shl_ln_fu_914_p3;
wire   [31:0] shl_ln208_1_fu_921_p3;
wire   [31:0] zext_ln90_fu_934_p1;
wire  signed [31:0] grp_fu_944_p0;
wire    ap_CS_fsm_state3;
wire   [33:0] shl_ln1_fu_954_p3;
wire  signed [63:0] sext_ln61_fu_961_p1;
wire   [31:0] shl_ln61_fu_970_p2;
wire   [31:0] shl_ln61_1_fu_976_p2;
wire   [63:0] add_ln61_fu_965_p2;
wire   [61:0] trunc_ln_fu_988_p4;
wire   [31:0] zext_ln61_fu_1014_p1;
wire   [0:0] icmp_ln66_fu_1035_p2;
wire   [2:0] add_ln65_1_fu_1049_p2;
wire   [1:0] trunc_ln69_fu_1067_p1;
wire   [0:0] icmp_ln67_fu_1085_p2;
wire   [0:0] xor_ln65_fu_1079_p2;
wire   [2:0] select_ln65_fu_1041_p3;
wire   [0:0] and_ln65_fu_1091_p2;
wire   [0:0] or_ln66_fu_1103_p2;
wire   [2:0] add_ln66_fu_1097_p2;
wire   [1:0] trunc_ln69_1_fu_1117_p1;
wire   [1:0] select_ln65_2_fu_1071_p3;
wire   [6:0] add_ln66_1_fu_1143_p2;
wire   [31:0] bitcast_ln174_143_fu_2885_p1;
wire   [31:0] bitcast_ln174_142_fu_2881_p1;
wire   [31:0] bitcast_ln174_141_fu_2877_p1;
wire   [31:0] bitcast_ln174_140_fu_2873_p1;
wire   [31:0] bitcast_ln174_139_fu_2869_p1;
wire   [31:0] bitcast_ln174_138_fu_2865_p1;
wire   [31:0] bitcast_ln174_137_fu_2861_p1;
wire   [31:0] bitcast_ln174_136_fu_2857_p1;
wire   [31:0] bitcast_ln174_135_fu_2853_p1;
wire   [31:0] bitcast_ln174_134_fu_2849_p1;
wire   [31:0] bitcast_ln174_133_fu_2845_p1;
wire   [31:0] bitcast_ln174_132_fu_2841_p1;
wire   [31:0] bitcast_ln174_131_fu_2837_p1;
wire   [31:0] bitcast_ln174_130_fu_2833_p1;
wire   [31:0] bitcast_ln174_129_fu_2829_p1;
wire   [31:0] bitcast_ln174_128_fu_2825_p1;
wire   [31:0] bitcast_ln174_127_fu_2821_p1;
wire   [31:0] bitcast_ln174_126_fu_2817_p1;
wire   [31:0] bitcast_ln174_125_fu_2813_p1;
wire   [31:0] bitcast_ln174_124_fu_2809_p1;
wire   [31:0] bitcast_ln174_123_fu_2805_p1;
wire   [31:0] bitcast_ln174_122_fu_2801_p1;
wire   [31:0] bitcast_ln174_121_fu_2797_p1;
wire   [31:0] bitcast_ln174_120_fu_2793_p1;
wire   [31:0] bitcast_ln174_119_fu_2789_p1;
wire   [31:0] bitcast_ln174_118_fu_2785_p1;
wire   [31:0] bitcast_ln174_117_fu_2781_p1;
wire   [31:0] bitcast_ln174_116_fu_2777_p1;
wire   [31:0] bitcast_ln174_115_fu_2773_p1;
wire   [31:0] bitcast_ln174_114_fu_2769_p1;
wire   [31:0] bitcast_ln174_113_fu_2765_p1;
wire   [31:0] bitcast_ln174_112_fu_2761_p1;
wire   [31:0] bitcast_ln174_111_fu_2757_p1;
wire   [31:0] bitcast_ln174_110_fu_2753_p1;
wire   [31:0] bitcast_ln174_109_fu_2749_p1;
wire   [31:0] bitcast_ln174_108_fu_2745_p1;
wire   [31:0] bitcast_ln174_107_fu_2741_p1;
wire   [31:0] bitcast_ln174_106_fu_2737_p1;
wire   [31:0] bitcast_ln174_105_fu_2733_p1;
wire   [31:0] bitcast_ln174_104_fu_2729_p1;
wire   [31:0] bitcast_ln174_103_fu_2725_p1;
wire   [31:0] bitcast_ln174_102_fu_2721_p1;
wire   [31:0] bitcast_ln174_101_fu_2717_p1;
wire   [31:0] bitcast_ln174_100_fu_2713_p1;
wire   [31:0] bitcast_ln174_99_fu_2709_p1;
wire   [31:0] bitcast_ln174_98_fu_2705_p1;
wire   [31:0] bitcast_ln174_97_fu_2701_p1;
wire   [31:0] bitcast_ln174_96_fu_2697_p1;
wire   [31:0] bitcast_ln174_95_fu_2693_p1;
wire   [31:0] bitcast_ln174_94_fu_2689_p1;
wire   [31:0] bitcast_ln174_93_fu_2685_p1;
wire   [31:0] bitcast_ln174_92_fu_2681_p1;
wire   [31:0] bitcast_ln174_91_fu_2677_p1;
wire   [31:0] bitcast_ln174_90_fu_2673_p1;
wire   [31:0] bitcast_ln174_89_fu_2669_p1;
wire   [31:0] bitcast_ln174_88_fu_2665_p1;
wire   [31:0] bitcast_ln174_87_fu_2661_p1;
wire   [31:0] bitcast_ln174_86_fu_2657_p1;
wire   [31:0] bitcast_ln174_85_fu_2653_p1;
wire   [31:0] bitcast_ln174_84_fu_2649_p1;
wire   [31:0] bitcast_ln174_83_fu_2645_p1;
wire   [31:0] bitcast_ln174_82_fu_2641_p1;
wire   [31:0] bitcast_ln174_81_fu_2637_p1;
wire   [31:0] bitcast_ln174_80_fu_2633_p1;
wire   [31:0] bitcast_ln174_79_fu_2629_p1;
wire   [31:0] bitcast_ln174_78_fu_2625_p1;
wire   [31:0] bitcast_ln174_77_fu_2621_p1;
wire   [31:0] bitcast_ln174_76_fu_2617_p1;
wire   [31:0] bitcast_ln174_75_fu_2613_p1;
wire   [31:0] bitcast_ln174_74_fu_2609_p1;
wire   [31:0] bitcast_ln174_73_fu_2605_p1;
wire   [31:0] bitcast_ln174_72_fu_2601_p1;
wire   [31:0] bitcast_ln174_71_fu_2597_p1;
wire   [31:0] bitcast_ln174_70_fu_2593_p1;
wire   [31:0] bitcast_ln174_69_fu_2589_p1;
wire   [31:0] bitcast_ln174_68_fu_2585_p1;
wire   [31:0] bitcast_ln174_67_fu_2581_p1;
wire   [31:0] bitcast_ln174_66_fu_2577_p1;
wire   [31:0] bitcast_ln174_65_fu_2573_p1;
wire   [31:0] bitcast_ln174_64_fu_2569_p1;
wire   [31:0] bitcast_ln174_63_fu_2565_p1;
wire   [31:0] bitcast_ln174_62_fu_2561_p1;
wire   [31:0] bitcast_ln174_61_fu_2557_p1;
wire   [31:0] bitcast_ln174_60_fu_2553_p1;
wire   [31:0] bitcast_ln174_59_fu_2549_p1;
wire   [31:0] bitcast_ln174_58_fu_2545_p1;
wire   [31:0] bitcast_ln174_57_fu_2541_p1;
wire   [31:0] bitcast_ln174_56_fu_2537_p1;
wire   [31:0] bitcast_ln174_55_fu_2533_p1;
wire   [31:0] bitcast_ln174_54_fu_2529_p1;
wire   [31:0] bitcast_ln174_53_fu_2525_p1;
wire   [31:0] bitcast_ln174_52_fu_2521_p1;
wire   [31:0] bitcast_ln174_51_fu_2517_p1;
wire   [31:0] bitcast_ln174_50_fu_2513_p1;
wire   [31:0] bitcast_ln174_49_fu_2509_p1;
wire   [31:0] bitcast_ln174_48_fu_2505_p1;
wire   [31:0] bitcast_ln174_47_fu_2501_p1;
wire   [31:0] bitcast_ln174_46_fu_2497_p1;
wire   [31:0] bitcast_ln174_45_fu_2493_p1;
wire   [31:0] bitcast_ln174_44_fu_2489_p1;
wire   [31:0] bitcast_ln174_43_fu_2485_p1;
wire   [31:0] bitcast_ln174_42_fu_2481_p1;
wire   [31:0] bitcast_ln174_41_fu_2477_p1;
wire   [31:0] bitcast_ln174_40_fu_2473_p1;
wire   [31:0] bitcast_ln174_39_fu_2469_p1;
wire   [31:0] bitcast_ln174_38_fu_2465_p1;
wire   [31:0] bitcast_ln174_37_fu_2461_p1;
wire   [31:0] bitcast_ln174_36_fu_2457_p1;
wire   [31:0] bitcast_ln174_35_fu_2453_p1;
wire   [31:0] bitcast_ln174_34_fu_2449_p1;
wire   [31:0] bitcast_ln174_33_fu_2445_p1;
wire   [31:0] bitcast_ln174_32_fu_2441_p1;
wire   [31:0] bitcast_ln174_31_fu_2437_p1;
wire   [31:0] bitcast_ln174_30_fu_2433_p1;
wire   [31:0] bitcast_ln174_29_fu_2429_p1;
wire   [31:0] bitcast_ln174_28_fu_2425_p1;
wire   [31:0] bitcast_ln174_27_fu_2421_p1;
wire   [31:0] bitcast_ln174_26_fu_2417_p1;
wire   [31:0] bitcast_ln174_25_fu_2413_p1;
wire   [31:0] bitcast_ln174_24_fu_2409_p1;
wire   [31:0] bitcast_ln174_23_fu_2405_p1;
wire   [31:0] bitcast_ln174_22_fu_2401_p1;
wire   [31:0] bitcast_ln174_21_fu_2397_p1;
wire   [31:0] bitcast_ln174_20_fu_2393_p1;
wire   [31:0] bitcast_ln174_19_fu_2389_p1;
wire   [31:0] bitcast_ln174_18_fu_2385_p1;
wire   [31:0] bitcast_ln174_17_fu_2381_p1;
wire   [31:0] bitcast_ln174_16_fu_2377_p1;
wire   [31:0] bitcast_ln174_15_fu_2373_p1;
wire   [31:0] bitcast_ln174_14_fu_2369_p1;
wire   [31:0] bitcast_ln174_13_fu_2365_p1;
wire   [31:0] bitcast_ln174_12_fu_2361_p1;
wire   [31:0] bitcast_ln174_11_fu_2357_p1;
wire   [31:0] bitcast_ln174_10_fu_2353_p1;
wire   [31:0] bitcast_ln174_9_fu_2349_p1;
wire   [31:0] bitcast_ln174_8_fu_2345_p1;
wire   [31:0] bitcast_ln174_7_fu_2341_p1;
wire   [31:0] bitcast_ln174_6_fu_2337_p1;
wire   [31:0] bitcast_ln174_5_fu_2333_p1;
wire   [31:0] bitcast_ln174_4_fu_2329_p1;
wire   [31:0] bitcast_ln174_3_fu_2325_p1;
wire   [31:0] bitcast_ln174_2_fu_2321_p1;
wire   [31:0] bitcast_ln174_1_fu_2317_p1;
wire   [31:0] bitcast_ln174_fu_2313_p1;
reg   [77:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 78'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

k_conv2D_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_944_p0),
    .din1(add_ln94_reg_3202),
    .ce(1'b1),
    .dout(grp_fu_944_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state76) & ((icmp_ln61_1_fu_1018_p2 == 1'd1) | (icmp_ln61_fu_948_p2 == 1'd0)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state77) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state77) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state77);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1029_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cpi_reg_824 <= select_ln66_2_fu_1129_p3;
    end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        cpi_reg_824 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_reg_4110 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        cpo_reg_802 <= select_ln65_1_reg_4114;
    end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        cpo_reg_802 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) & (out_read_kernel_full_n == 1'b1))) begin
        i_reg_780 <= i_1_reg_4096;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        i_reg_780 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1029_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten301_reg_791 <= add_ln65_fu_1023_p2;
    end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        indvar_flatten301_reg_791 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1029_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_813 <= select_ln66_3_fu_1149_p3;
    end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        indvar_flatten_reg_813 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1029_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_reg_835 <= add_ln67_fu_1137_p2;
    end else if (((icmp_ln61_1_fu_1018_p2 == 1'd0) & (icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        p_reg_835 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln94_reg_3202 <= add_ln94_fu_938_p2;
        ptr_kernel_read_reg_3192 <= ptr_kernel_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        gmem1_addr_reg_4090 <= sext_ln61_1_fu_998_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        i_1_reg_4096 <= i_1_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln65_reg_4110 <= icmp_ln65_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_100_fu_556 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_101_fu_560 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_102_fu_564 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_103_fu_568 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_104_fu_572 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_105_fu_576 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_106_fu_580 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd3) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_107_fu_584 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_108_fu_588 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_109_fu_592 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_10_fu_196 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_110_fu_596 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_111_fu_600 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_112_fu_604 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_113_fu_608 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_114_fu_612 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_115_fu_616 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd0) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_116_fu_620 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_117_fu_624 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_118_fu_628 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_119_fu_632 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_11_fu_200 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_120_fu_636 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_121_fu_640 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_122_fu_644 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_123_fu_648 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_124_fu_652 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd1) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_125_fu_656 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_126_fu_660 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_127_fu_664 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_128_fu_668 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_129_fu_672 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_12_fu_204 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_130_fu_676 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_131_fu_680 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_132_fu_684 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_133_fu_688 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd2) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_134_fu_692 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_135_fu_696 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_136_fu_700 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_137_fu_704 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_138_fu_708 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_139_fu_712 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_13_fu_208 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_140_fu_716 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_141_fu_720 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_142_fu_724 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd3) & (trunc_ln65_reg_4119 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_143_fu_728 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_14_fu_212 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_15_fu_216 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_16_fu_220 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd1) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_17_fu_224 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_18_fu_228 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_19_fu_232 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_1_fu_160 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_20_fu_236 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_21_fu_240 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_22_fu_244 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_23_fu_248 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_24_fu_252 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_25_fu_256 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd2) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_26_fu_260 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_27_fu_264 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_28_fu_268 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_29_fu_272 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_2_fu_164 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_30_fu_276 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_31_fu_280 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_32_fu_284 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_33_fu_288 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_34_fu_292 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd3) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_35_fu_296 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_36_fu_300 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_37_fu_304 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_38_fu_308 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_39_fu_312 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_3_fu_168 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_40_fu_316 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_41_fu_320 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_42_fu_324 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_43_fu_328 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd0) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_44_fu_332 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_45_fu_336 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_46_fu_340 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_47_fu_344 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_48_fu_348 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_49_fu_352 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_4_fu_172 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_50_fu_356 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_51_fu_360 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_52_fu_364 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd1) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_53_fu_368 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_54_fu_372 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_55_fu_376 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_56_fu_380 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_57_fu_384 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_58_fu_388 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_59_fu_392 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_5_fu_176 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_60_fu_396 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_61_fu_400 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd2) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_62_fu_404 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_63_fu_408 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_64_fu_412 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_65_fu_416 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_66_fu_420 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_67_fu_424 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_68_fu_428 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_69_fu_432 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_6_fu_180 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_70_fu_436 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd3) & (trunc_ln65_reg_4119 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_71_fu_440 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_72_fu_444 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_73_fu_448 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_74_fu_452 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_75_fu_456 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_76_fu_460 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_77_fu_464 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_78_fu_468 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_79_fu_472 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_7_fu_184 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd0) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_80_fu_476 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_81_fu_480 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_82_fu_484 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_83_fu_488 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_84_fu_492 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_85_fu_496 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_86_fu_500 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_87_fu_504 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_88_fu_508 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd1) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_89_fu_512 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd0) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_8_fu_188 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_90_fu_516 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd1) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_91_fu_520 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd2) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_92_fu_524 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd3) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_93_fu_528 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd4) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_94_fu_532 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd5) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_95_fu_536 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd6) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_96_fu_540 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd2) & (select_ln66_reg_4123 == 4'd7) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_97_fu_544 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln66_reg_4123 == 4'd7) & ~(select_ln66_reg_4123 == 4'd6) & ~(select_ln66_reg_4123 == 4'd5) & ~(select_ln66_reg_4123 == 4'd4) & ~(select_ln66_reg_4123 == 4'd3) & ~(select_ln66_reg_4123 == 4'd2) & ~(select_ln66_reg_4123 == 4'd1) & ~(select_ln66_reg_4123 == 4'd0) & (select_ln66_1_reg_4127 == 2'd2) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_98_fu_548 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd3) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_99_fu_552 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd1) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_9_fu_192 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln66_1_reg_4127 == 2'd0) & (select_ln66_reg_4123 == 4'd0) & (trunc_ln65_reg_4119 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        k_pixel_3_3_8_fu_156 <= k_pixel_3_3_0_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln208_reg_3207 <= grp_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1029_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln65_1_reg_4114 <= select_ln65_1_fu_1055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_1029_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln66_1_reg_4127 <= select_ln66_1_fu_1121_p3;
        select_ln66_reg_4123 <= select_ln66_fu_1109_p3;
        trunc_ln65_reg_4119 <= trunc_ln65_fu_1063_p1;
    end
end

always @ (*) begin
    if ((icmp_ln65_fu_1029_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state77 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state77 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & ((icmp_ln61_1_fu_1018_p2 == 1'd1) | (icmp_ln61_fu_948_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_reg_4110 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_cpo_phi_fu_806_p4 = select_ln65_1_reg_4114;
    end else begin
        ap_phi_mux_cpo_phi_fu_806_p4 = cpo_reg_802;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) & ((icmp_ln61_1_fu_1018_p2 == 1'd1) | (icmp_ln61_fu_948_p2 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_reg_4110 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (m_axi_gmem1_ARREADY == 1'b1))) begin
        m_axi_gmem1_ARVALID = 1'b1;
    end else begin
        m_axi_gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_reg_4110 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        m_axi_gmem1_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        o_iter_blk_n = o_iter_empty_n;
    end else begin
        o_iter_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ptr_kernel_empty_n == 1'b0) | (o_iter_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        o_iter_read = 1'b1;
    end else begin
        o_iter_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        out_read_kernel_blk_n = out_read_kernel_full_n;
    end else begin
        out_read_kernel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) & (out_read_kernel_full_n == 1'b1))) begin
        out_read_kernel_write = 1'b1;
    end else begin
        out_read_kernel_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ptr_kernel_blk_n = ptr_kernel_empty_n;
    end else begin
        ptr_kernel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ptr_kernel_empty_n == 1'b0) | (o_iter_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        ptr_kernel_read = 1'b1;
    end else begin
        ptr_kernel_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((ptr_kernel_empty_n == 1'b0) | (o_iter_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln61_fu_948_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (m_axi_gmem1_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & ((icmp_ln61_1_fu_1018_p2 == 1'd1) | (icmp_ln61_fu_948_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln65_fu_1029_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln65_fu_1029_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((1'b1 == ap_CS_fsm_state79) & (out_read_kernel_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln61_fu_965_p2 = ($signed(ptr_kernel_read_reg_3192) + $signed(sext_ln61_fu_961_p1));

assign add_ln65_1_fu_1049_p2 = (ap_phi_mux_cpo_phi_fu_806_p4 + 3'd1);

assign add_ln65_fu_1023_p2 = (indvar_flatten301_reg_791 + 8'd1);

assign add_ln66_1_fu_1143_p2 = (indvar_flatten_reg_813 + 7'd1);

assign add_ln66_fu_1097_p2 = (select_ln65_fu_1041_p3 + 3'd1);

assign add_ln67_fu_1137_p2 = (select_ln66_fu_1109_p3 + 4'd1);

assign add_ln94_fu_938_p2 = (zext_ln90_fu_934_p1 + o_iter_first);

assign and_ln65_fu_1091_p2 = (xor_ln65_fu_1079_p2 & icmp_ln67_fu_1085_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd77];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln65_reg_4110 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln65_reg_4110 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((ptr_kernel_empty_n == 1'b0) | (o_iter_empty_n == 1'b0));
end

assign ap_block_state77_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state78_pp0_stage0_iter1 = ((icmp_ln65_reg_4110 == 1'd0) & (m_axi_gmem1_RVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln174_100_fu_2713_p1 = k_pixel_3_3_8_100_fu_556;

assign bitcast_ln174_101_fu_2717_p1 = k_pixel_3_3_8_101_fu_560;

assign bitcast_ln174_102_fu_2721_p1 = k_pixel_3_3_8_102_fu_564;

assign bitcast_ln174_103_fu_2725_p1 = k_pixel_3_3_8_103_fu_568;

assign bitcast_ln174_104_fu_2729_p1 = k_pixel_3_3_8_104_fu_572;

assign bitcast_ln174_105_fu_2733_p1 = k_pixel_3_3_8_105_fu_576;

assign bitcast_ln174_106_fu_2737_p1 = k_pixel_3_3_8_106_fu_580;

assign bitcast_ln174_107_fu_2741_p1 = k_pixel_3_3_8_107_fu_584;

assign bitcast_ln174_108_fu_2745_p1 = k_pixel_3_3_8_108_fu_588;

assign bitcast_ln174_109_fu_2749_p1 = k_pixel_3_3_8_109_fu_592;

assign bitcast_ln174_10_fu_2353_p1 = k_pixel_3_3_8_10_fu_196;

assign bitcast_ln174_110_fu_2753_p1 = k_pixel_3_3_8_110_fu_596;

assign bitcast_ln174_111_fu_2757_p1 = k_pixel_3_3_8_111_fu_600;

assign bitcast_ln174_112_fu_2761_p1 = k_pixel_3_3_8_112_fu_604;

assign bitcast_ln174_113_fu_2765_p1 = k_pixel_3_3_8_113_fu_608;

assign bitcast_ln174_114_fu_2769_p1 = k_pixel_3_3_8_114_fu_612;

assign bitcast_ln174_115_fu_2773_p1 = k_pixel_3_3_8_115_fu_616;

assign bitcast_ln174_116_fu_2777_p1 = k_pixel_3_3_8_116_fu_620;

assign bitcast_ln174_117_fu_2781_p1 = k_pixel_3_3_8_117_fu_624;

assign bitcast_ln174_118_fu_2785_p1 = k_pixel_3_3_8_118_fu_628;

assign bitcast_ln174_119_fu_2789_p1 = k_pixel_3_3_8_119_fu_632;

assign bitcast_ln174_11_fu_2357_p1 = k_pixel_3_3_8_11_fu_200;

assign bitcast_ln174_120_fu_2793_p1 = k_pixel_3_3_8_120_fu_636;

assign bitcast_ln174_121_fu_2797_p1 = k_pixel_3_3_8_121_fu_640;

assign bitcast_ln174_122_fu_2801_p1 = k_pixel_3_3_8_122_fu_644;

assign bitcast_ln174_123_fu_2805_p1 = k_pixel_3_3_8_123_fu_648;

assign bitcast_ln174_124_fu_2809_p1 = k_pixel_3_3_8_124_fu_652;

assign bitcast_ln174_125_fu_2813_p1 = k_pixel_3_3_8_125_fu_656;

assign bitcast_ln174_126_fu_2817_p1 = k_pixel_3_3_8_126_fu_660;

assign bitcast_ln174_127_fu_2821_p1 = k_pixel_3_3_8_127_fu_664;

assign bitcast_ln174_128_fu_2825_p1 = k_pixel_3_3_8_128_fu_668;

assign bitcast_ln174_129_fu_2829_p1 = k_pixel_3_3_8_129_fu_672;

assign bitcast_ln174_12_fu_2361_p1 = k_pixel_3_3_8_12_fu_204;

assign bitcast_ln174_130_fu_2833_p1 = k_pixel_3_3_8_130_fu_676;

assign bitcast_ln174_131_fu_2837_p1 = k_pixel_3_3_8_131_fu_680;

assign bitcast_ln174_132_fu_2841_p1 = k_pixel_3_3_8_132_fu_684;

assign bitcast_ln174_133_fu_2845_p1 = k_pixel_3_3_8_133_fu_688;

assign bitcast_ln174_134_fu_2849_p1 = k_pixel_3_3_8_134_fu_692;

assign bitcast_ln174_135_fu_2853_p1 = k_pixel_3_3_8_135_fu_696;

assign bitcast_ln174_136_fu_2857_p1 = k_pixel_3_3_8_136_fu_700;

assign bitcast_ln174_137_fu_2861_p1 = k_pixel_3_3_8_137_fu_704;

assign bitcast_ln174_138_fu_2865_p1 = k_pixel_3_3_8_138_fu_708;

assign bitcast_ln174_139_fu_2869_p1 = k_pixel_3_3_8_139_fu_712;

assign bitcast_ln174_13_fu_2365_p1 = k_pixel_3_3_8_13_fu_208;

assign bitcast_ln174_140_fu_2873_p1 = k_pixel_3_3_8_140_fu_716;

assign bitcast_ln174_141_fu_2877_p1 = k_pixel_3_3_8_141_fu_720;

assign bitcast_ln174_142_fu_2881_p1 = k_pixel_3_3_8_142_fu_724;

assign bitcast_ln174_143_fu_2885_p1 = k_pixel_3_3_8_143_fu_728;

assign bitcast_ln174_14_fu_2369_p1 = k_pixel_3_3_8_14_fu_212;

assign bitcast_ln174_15_fu_2373_p1 = k_pixel_3_3_8_15_fu_216;

assign bitcast_ln174_16_fu_2377_p1 = k_pixel_3_3_8_16_fu_220;

assign bitcast_ln174_17_fu_2381_p1 = k_pixel_3_3_8_17_fu_224;

assign bitcast_ln174_18_fu_2385_p1 = k_pixel_3_3_8_18_fu_228;

assign bitcast_ln174_19_fu_2389_p1 = k_pixel_3_3_8_19_fu_232;

assign bitcast_ln174_1_fu_2317_p1 = k_pixel_3_3_8_1_fu_160;

assign bitcast_ln174_20_fu_2393_p1 = k_pixel_3_3_8_20_fu_236;

assign bitcast_ln174_21_fu_2397_p1 = k_pixel_3_3_8_21_fu_240;

assign bitcast_ln174_22_fu_2401_p1 = k_pixel_3_3_8_22_fu_244;

assign bitcast_ln174_23_fu_2405_p1 = k_pixel_3_3_8_23_fu_248;

assign bitcast_ln174_24_fu_2409_p1 = k_pixel_3_3_8_24_fu_252;

assign bitcast_ln174_25_fu_2413_p1 = k_pixel_3_3_8_25_fu_256;

assign bitcast_ln174_26_fu_2417_p1 = k_pixel_3_3_8_26_fu_260;

assign bitcast_ln174_27_fu_2421_p1 = k_pixel_3_3_8_27_fu_264;

assign bitcast_ln174_28_fu_2425_p1 = k_pixel_3_3_8_28_fu_268;

assign bitcast_ln174_29_fu_2429_p1 = k_pixel_3_3_8_29_fu_272;

assign bitcast_ln174_2_fu_2321_p1 = k_pixel_3_3_8_2_fu_164;

assign bitcast_ln174_30_fu_2433_p1 = k_pixel_3_3_8_30_fu_276;

assign bitcast_ln174_31_fu_2437_p1 = k_pixel_3_3_8_31_fu_280;

assign bitcast_ln174_32_fu_2441_p1 = k_pixel_3_3_8_32_fu_284;

assign bitcast_ln174_33_fu_2445_p1 = k_pixel_3_3_8_33_fu_288;

assign bitcast_ln174_34_fu_2449_p1 = k_pixel_3_3_8_34_fu_292;

assign bitcast_ln174_35_fu_2453_p1 = k_pixel_3_3_8_35_fu_296;

assign bitcast_ln174_36_fu_2457_p1 = k_pixel_3_3_8_36_fu_300;

assign bitcast_ln174_37_fu_2461_p1 = k_pixel_3_3_8_37_fu_304;

assign bitcast_ln174_38_fu_2465_p1 = k_pixel_3_3_8_38_fu_308;

assign bitcast_ln174_39_fu_2469_p1 = k_pixel_3_3_8_39_fu_312;

assign bitcast_ln174_3_fu_2325_p1 = k_pixel_3_3_8_3_fu_168;

assign bitcast_ln174_40_fu_2473_p1 = k_pixel_3_3_8_40_fu_316;

assign bitcast_ln174_41_fu_2477_p1 = k_pixel_3_3_8_41_fu_320;

assign bitcast_ln174_42_fu_2481_p1 = k_pixel_3_3_8_42_fu_324;

assign bitcast_ln174_43_fu_2485_p1 = k_pixel_3_3_8_43_fu_328;

assign bitcast_ln174_44_fu_2489_p1 = k_pixel_3_3_8_44_fu_332;

assign bitcast_ln174_45_fu_2493_p1 = k_pixel_3_3_8_45_fu_336;

assign bitcast_ln174_46_fu_2497_p1 = k_pixel_3_3_8_46_fu_340;

assign bitcast_ln174_47_fu_2501_p1 = k_pixel_3_3_8_47_fu_344;

assign bitcast_ln174_48_fu_2505_p1 = k_pixel_3_3_8_48_fu_348;

assign bitcast_ln174_49_fu_2509_p1 = k_pixel_3_3_8_49_fu_352;

assign bitcast_ln174_4_fu_2329_p1 = k_pixel_3_3_8_4_fu_172;

assign bitcast_ln174_50_fu_2513_p1 = k_pixel_3_3_8_50_fu_356;

assign bitcast_ln174_51_fu_2517_p1 = k_pixel_3_3_8_51_fu_360;

assign bitcast_ln174_52_fu_2521_p1 = k_pixel_3_3_8_52_fu_364;

assign bitcast_ln174_53_fu_2525_p1 = k_pixel_3_3_8_53_fu_368;

assign bitcast_ln174_54_fu_2529_p1 = k_pixel_3_3_8_54_fu_372;

assign bitcast_ln174_55_fu_2533_p1 = k_pixel_3_3_8_55_fu_376;

assign bitcast_ln174_56_fu_2537_p1 = k_pixel_3_3_8_56_fu_380;

assign bitcast_ln174_57_fu_2541_p1 = k_pixel_3_3_8_57_fu_384;

assign bitcast_ln174_58_fu_2545_p1 = k_pixel_3_3_8_58_fu_388;

assign bitcast_ln174_59_fu_2549_p1 = k_pixel_3_3_8_59_fu_392;

assign bitcast_ln174_5_fu_2333_p1 = k_pixel_3_3_8_5_fu_176;

assign bitcast_ln174_60_fu_2553_p1 = k_pixel_3_3_8_60_fu_396;

assign bitcast_ln174_61_fu_2557_p1 = k_pixel_3_3_8_61_fu_400;

assign bitcast_ln174_62_fu_2561_p1 = k_pixel_3_3_8_62_fu_404;

assign bitcast_ln174_63_fu_2565_p1 = k_pixel_3_3_8_63_fu_408;

assign bitcast_ln174_64_fu_2569_p1 = k_pixel_3_3_8_64_fu_412;

assign bitcast_ln174_65_fu_2573_p1 = k_pixel_3_3_8_65_fu_416;

assign bitcast_ln174_66_fu_2577_p1 = k_pixel_3_3_8_66_fu_420;

assign bitcast_ln174_67_fu_2581_p1 = k_pixel_3_3_8_67_fu_424;

assign bitcast_ln174_68_fu_2585_p1 = k_pixel_3_3_8_68_fu_428;

assign bitcast_ln174_69_fu_2589_p1 = k_pixel_3_3_8_69_fu_432;

assign bitcast_ln174_6_fu_2337_p1 = k_pixel_3_3_8_6_fu_180;

assign bitcast_ln174_70_fu_2593_p1 = k_pixel_3_3_8_70_fu_436;

assign bitcast_ln174_71_fu_2597_p1 = k_pixel_3_3_8_71_fu_440;

assign bitcast_ln174_72_fu_2601_p1 = k_pixel_3_3_8_72_fu_444;

assign bitcast_ln174_73_fu_2605_p1 = k_pixel_3_3_8_73_fu_448;

assign bitcast_ln174_74_fu_2609_p1 = k_pixel_3_3_8_74_fu_452;

assign bitcast_ln174_75_fu_2613_p1 = k_pixel_3_3_8_75_fu_456;

assign bitcast_ln174_76_fu_2617_p1 = k_pixel_3_3_8_76_fu_460;

assign bitcast_ln174_77_fu_2621_p1 = k_pixel_3_3_8_77_fu_464;

assign bitcast_ln174_78_fu_2625_p1 = k_pixel_3_3_8_78_fu_468;

assign bitcast_ln174_79_fu_2629_p1 = k_pixel_3_3_8_79_fu_472;

assign bitcast_ln174_7_fu_2341_p1 = k_pixel_3_3_8_7_fu_184;

assign bitcast_ln174_80_fu_2633_p1 = k_pixel_3_3_8_80_fu_476;

assign bitcast_ln174_81_fu_2637_p1 = k_pixel_3_3_8_81_fu_480;

assign bitcast_ln174_82_fu_2641_p1 = k_pixel_3_3_8_82_fu_484;

assign bitcast_ln174_83_fu_2645_p1 = k_pixel_3_3_8_83_fu_488;

assign bitcast_ln174_84_fu_2649_p1 = k_pixel_3_3_8_84_fu_492;

assign bitcast_ln174_85_fu_2653_p1 = k_pixel_3_3_8_85_fu_496;

assign bitcast_ln174_86_fu_2657_p1 = k_pixel_3_3_8_86_fu_500;

assign bitcast_ln174_87_fu_2661_p1 = k_pixel_3_3_8_87_fu_504;

assign bitcast_ln174_88_fu_2665_p1 = k_pixel_3_3_8_88_fu_508;

assign bitcast_ln174_89_fu_2669_p1 = k_pixel_3_3_8_89_fu_512;

assign bitcast_ln174_8_fu_2345_p1 = k_pixel_3_3_8_8_fu_188;

assign bitcast_ln174_90_fu_2673_p1 = k_pixel_3_3_8_90_fu_516;

assign bitcast_ln174_91_fu_2677_p1 = k_pixel_3_3_8_91_fu_520;

assign bitcast_ln174_92_fu_2681_p1 = k_pixel_3_3_8_92_fu_524;

assign bitcast_ln174_93_fu_2685_p1 = k_pixel_3_3_8_93_fu_528;

assign bitcast_ln174_94_fu_2689_p1 = k_pixel_3_3_8_94_fu_532;

assign bitcast_ln174_95_fu_2693_p1 = k_pixel_3_3_8_95_fu_536;

assign bitcast_ln174_96_fu_2697_p1 = k_pixel_3_3_8_96_fu_540;

assign bitcast_ln174_97_fu_2701_p1 = k_pixel_3_3_8_97_fu_544;

assign bitcast_ln174_98_fu_2705_p1 = k_pixel_3_3_8_98_fu_548;

assign bitcast_ln174_99_fu_2709_p1 = k_pixel_3_3_8_99_fu_552;

assign bitcast_ln174_9_fu_2349_p1 = k_pixel_3_3_8_9_fu_192;

assign bitcast_ln174_fu_2313_p1 = k_pixel_3_3_8_fu_156;

assign div57_i_fu_902_p3 = ((tmp_fu_852_p3[0:0] == 1'b1) ? p_neg_t_i_fu_880_p2 : p_lshr_f_cast_i_fu_892_p4);

assign empty_fu_860_p1 = I[29:0];

assign grp_fu_944_p0 = (shl_ln_fu_914_p3 + shl_ln208_1_fu_921_p3);

assign i_1_fu_1008_p2 = (i_reg_780 + 31'd1);

assign icmp_ln61_1_fu_1018_p2 = ((zext_ln61_fu_1014_p1 == I_ITER) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_948_p2 = (($signed(I_ITER) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_1029_p2 = ((indvar_flatten301_reg_791 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_1035_p2 = ((indvar_flatten_reg_813 == 7'd36) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1085_p2 = ((p_reg_835 == 4'd9) ? 1'b1 : 1'b0);

assign k_pixel_3_3_0_fu_1157_p1 = m_axi_gmem1_RDATA;

assign m_axi_gmem1_ARADDR = gmem1_addr_reg_4090;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = (shl_ln61_fu_970_p2 + shl_ln61_1_fu_976_p2);

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_WDATA = 32'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 4'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign or_ln66_fu_1103_p2 = (icmp_ln66_fu_1035_p2 | and_ln65_fu_1091_p2);

assign out_read_kernel_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{bitcast_ln174_143_fu_2885_p1}, {bitcast_ln174_142_fu_2881_p1}}, {bitcast_ln174_141_fu_2877_p1}}, {bitcast_ln174_140_fu_2873_p1}}, {bitcast_ln174_139_fu_2869_p1}}, {bitcast_ln174_138_fu_2865_p1}}, {bitcast_ln174_137_fu_2861_p1}}, {bitcast_ln174_136_fu_2857_p1}}, {bitcast_ln174_135_fu_2853_p1}}, {bitcast_ln174_134_fu_2849_p1}}, {bitcast_ln174_133_fu_2845_p1}}, {bitcast_ln174_132_fu_2841_p1}}, {bitcast_ln174_131_fu_2837_p1}}, {bitcast_ln174_130_fu_2833_p1}}, {bitcast_ln174_129_fu_2829_p1}}, {bitcast_ln174_128_fu_2825_p1}}, {bitcast_ln174_127_fu_2821_p1}}, {bitcast_ln174_126_fu_2817_p1}}, {bitcast_ln174_125_fu_2813_p1}}, {bitcast_ln174_124_fu_2809_p1}}, {bitcast_ln174_123_fu_2805_p1}}, {bitcast_ln174_122_fu_2801_p1}}, {bitcast_ln174_121_fu_2797_p1}}, {bitcast_ln174_120_fu_2793_p1}}, {bitcast_ln174_119_fu_2789_p1}}, {bitcast_ln174_118_fu_2785_p1}}, {bitcast_ln174_117_fu_2781_p1}}, {bitcast_ln174_116_fu_2777_p1}}, {bitcast_ln174_115_fu_2773_p1}}, {bitcast_ln174_114_fu_2769_p1}}, {bitcast_ln174_113_fu_2765_p1}}, {bitcast_ln174_112_fu_2761_p1}}, {bitcast_ln174_111_fu_2757_p1}}, {bitcast_ln174_110_fu_2753_p1}}, {bitcast_ln174_109_fu_2749_p1}}, {bitcast_ln174_108_fu_2745_p1}}, {bitcast_ln174_107_fu_2741_p1}}, {bitcast_ln174_106_fu_2737_p1}}, {bitcast_ln174_105_fu_2733_p1}}, {bitcast_ln174_104_fu_2729_p1}}, {bitcast_ln174_103_fu_2725_p1}}, {bitcast_ln174_102_fu_2721_p1}}, {bitcast_ln174_101_fu_2717_p1}}, {bitcast_ln174_100_fu_2713_p1}}, {bitcast_ln174_99_fu_2709_p1}}, {bitcast_ln174_98_fu_2705_p1}}, {bitcast_ln174_97_fu_2701_p1}}, {bitcast_ln174_96_fu_2697_p1}}, {bitcast_ln174_95_fu_2693_p1}}, {bitcast_ln174_94_fu_2689_p1}}, {bitcast_ln174_93_fu_2685_p1}}, {bitcast_ln174_92_fu_2681_p1}}, {bitcast_ln174_91_fu_2677_p1}}, {bitcast_ln174_90_fu_2673_p1}}, {bitcast_ln174_89_fu_2669_p1}}, {bitcast_ln174_88_fu_2665_p1}}, {bitcast_ln174_87_fu_2661_p1}}, {bitcast_ln174_86_fu_2657_p1}}, {bitcast_ln174_85_fu_2653_p1}}, {bitcast_ln174_84_fu_2649_p1}}, {bitcast_ln174_83_fu_2645_p1}}, {bitcast_ln174_82_fu_2641_p1}}, {bitcast_ln174_81_fu_2637_p1}}, {bitcast_ln174_80_fu_2633_p1}}, {bitcast_ln174_79_fu_2629_p1}}, {bitcast_ln174_78_fu_2625_p1}}, {bitcast_ln174_77_fu_2621_p1}}, {bitcast_ln174_76_fu_2617_p1}}, {bitcast_ln174_75_fu_2613_p1}}, {bitcast_ln174_74_fu_2609_p1}}, {bitcast_ln174_73_fu_2605_p1}}, {bitcast_ln174_72_fu_2601_p1}}, {bitcast_ln174_71_fu_2597_p1}}, {bitcast_ln174_70_fu_2593_p1}}, {bitcast_ln174_69_fu_2589_p1}}, {bitcast_ln174_68_fu_2585_p1}}, {bitcast_ln174_67_fu_2581_p1}}, {bitcast_ln174_66_fu_2577_p1}}, {bitcast_ln174_65_fu_2573_p1}}, {bitcast_ln174_64_fu_2569_p1}}, {bitcast_ln174_63_fu_2565_p1}}, {bitcast_ln174_62_fu_2561_p1}}, {bitcast_ln174_61_fu_2557_p1}}, {bitcast_ln174_60_fu_2553_p1}}, {bitcast_ln174_59_fu_2549_p1}}, {bitcast_ln174_58_fu_2545_p1}}, {bitcast_ln174_57_fu_2541_p1}}, {bitcast_ln174_56_fu_2537_p1}}, {bitcast_ln174_55_fu_2533_p1}}, {bitcast_ln174_54_fu_2529_p1}}, {bitcast_ln174_53_fu_2525_p1}}, {bitcast_ln174_52_fu_2521_p1}}, {bitcast_ln174_51_fu_2517_p1}}, {bitcast_ln174_50_fu_2513_p1}}, {bitcast_ln174_49_fu_2509_p1}}, {bitcast_ln174_48_fu_2505_p1}}, {bitcast_ln174_47_fu_2501_p1}}, {bitcast_ln174_46_fu_2497_p1}}, {bitcast_ln174_45_fu_2493_p1}}, {bitcast_ln174_44_fu_2489_p1}}, {bitcast_ln174_43_fu_2485_p1}}, {bitcast_ln174_42_fu_2481_p1}}, {bitcast_ln174_41_fu_2477_p1}}, {bitcast_ln174_40_fu_2473_p1}}, {bitcast_ln174_39_fu_2469_p1}}, {bitcast_ln174_38_fu_2465_p1}}, {bitcast_ln174_37_fu_2461_p1}}, {bitcast_ln174_36_fu_2457_p1}}, {bitcast_ln174_35_fu_2453_p1}}, {bitcast_ln174_34_fu_2449_p1}}, {bitcast_ln174_33_fu_2445_p1}}, {bitcast_ln174_32_fu_2441_p1}}, {bitcast_ln174_31_fu_2437_p1}}, {bitcast_ln174_30_fu_2433_p1}}, {bitcast_ln174_29_fu_2429_p1}}, {bitcast_ln174_28_fu_2425_p1}}, {bitcast_ln174_27_fu_2421_p1}}, {bitcast_ln174_26_fu_2417_p1}}, {bitcast_ln174_25_fu_2413_p1}}, {bitcast_ln174_24_fu_2409_p1}}, {bitcast_ln174_23_fu_2405_p1}}, {bitcast_ln174_22_fu_2401_p1}}, {bitcast_ln174_21_fu_2397_p1}}, {bitcast_ln174_20_fu_2393_p1}}, {bitcast_ln174_19_fu_2389_p1}}, {bitcast_ln174_18_fu_2385_p1}}, {bitcast_ln174_17_fu_2381_p1}}, {bitcast_ln174_16_fu_2377_p1}}, {bitcast_ln174_15_fu_2373_p1}}, {bitcast_ln174_14_fu_2369_p1}}, {bitcast_ln174_13_fu_2365_p1}}, {bitcast_ln174_12_fu_2361_p1}}, {bitcast_ln174_11_fu_2357_p1}}, {bitcast_ln174_10_fu_2353_p1}}, {bitcast_ln174_9_fu_2349_p1}}, {bitcast_ln174_8_fu_2345_p1}}, {bitcast_ln174_7_fu_2341_p1}}, {bitcast_ln174_6_fu_2337_p1}}, {bitcast_ln174_5_fu_2333_p1}}, {bitcast_ln174_4_fu_2329_p1}}, {bitcast_ln174_3_fu_2325_p1}}, {bitcast_ln174_2_fu_2321_p1}}, {bitcast_ln174_1_fu_2317_p1}}, {bitcast_ln174_fu_2313_p1}};

assign p_lshr_cast_i_fu_870_p4 = {{p_neg_i_fu_864_p2[29:2]}};

assign p_lshr_f_cast_i_fu_892_p4 = {{sub56_cast_i_fu_886_p2[29:2]}};

assign p_neg_i_fu_864_p2 = ($signed(30'd1073741821) - $signed(empty_fu_860_p1));

assign p_neg_t_i_fu_880_p2 = (28'd0 - p_lshr_cast_i_fu_870_p4);

assign select_ln65_1_fu_1055_p3 = ((icmp_ln66_fu_1035_p2[0:0] == 1'b1) ? add_ln65_1_fu_1049_p2 : ap_phi_mux_cpo_phi_fu_806_p4);

assign select_ln65_2_fu_1071_p3 = ((icmp_ln66_fu_1035_p2[0:0] == 1'b1) ? 2'd0 : trunc_ln69_fu_1067_p1);

assign select_ln65_fu_1041_p3 = ((icmp_ln66_fu_1035_p2[0:0] == 1'b1) ? 3'd0 : cpi_reg_824);

assign select_ln66_1_fu_1121_p3 = ((and_ln65_fu_1091_p2[0:0] == 1'b1) ? trunc_ln69_1_fu_1117_p1 : select_ln65_2_fu_1071_p3);

assign select_ln66_2_fu_1129_p3 = ((and_ln65_fu_1091_p2[0:0] == 1'b1) ? add_ln66_fu_1097_p2 : select_ln65_fu_1041_p3);

assign select_ln66_3_fu_1149_p3 = ((icmp_ln66_fu_1035_p2[0:0] == 1'b1) ? 7'd1 : add_ln66_1_fu_1143_p2);

assign select_ln66_fu_1109_p3 = ((or_ln66_fu_1103_p2[0:0] == 1'b1) ? 4'd0 : p_reg_835);

assign sext_ln61_1_fu_998_p1 = $signed(trunc_ln_fu_988_p4);

assign sext_ln61_fu_961_p1 = $signed(shl_ln1_fu_954_p3);

assign shl_ln1_fu_954_p3 = {{mul_ln208_reg_3207}, {2'd0}};

assign shl_ln208_1_fu_921_p3 = {{div57_i_fu_902_p3}, {4'd0}};

assign shl_ln61_1_fu_976_p2 = I_ITER << 32'd4;

assign shl_ln61_fu_970_p2 = I_ITER << 32'd7;

assign shl_ln_fu_914_p3 = {{trunc_ln208_fu_910_p1}, {7'd0}};

assign sub56_cast_i_fu_886_p2 = (empty_fu_860_p1 + 30'd3);

assign sub56_i_fu_846_p2 = (I + 32'd3);

assign tmp_fu_852_p3 = sub56_i_fu_846_p2[32'd31];

assign trunc_ln208_fu_910_p1 = div57_i_fu_902_p3[24:0];

assign trunc_ln65_fu_1063_p1 = select_ln65_1_fu_1055_p3[1:0];

assign trunc_ln69_1_fu_1117_p1 = add_ln66_fu_1097_p2[1:0];

assign trunc_ln69_fu_1067_p1 = cpi_reg_824[1:0];

assign trunc_ln_fu_988_p4 = {{add_ln61_fu_965_p2[63:2]}};

assign xor_ln65_fu_1079_p2 = (icmp_ln66_fu_1035_p2 ^ 1'd1);

assign zext_ln61_fu_1014_p1 = i_reg_780;

assign zext_ln90_fu_934_p1 = o_iter_dout;

endmodule //k_conv2D_read_kernel

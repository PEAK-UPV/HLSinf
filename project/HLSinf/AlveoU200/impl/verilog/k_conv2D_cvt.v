// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k_conv2D_cvt (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        H,
        W,
        I_ITER,
        str_pad_cvt_dout,
        str_pad_cvt_empty_n,
        str_pad_cvt_read,
        str_cvt_mul_din,
        str_cvt_mul_full_n,
        str_cvt_mul_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_pp0_stage0 = 7'd32;
parameter    ap_ST_fsm_state44 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] H;
input  [31:0] W;
input  [31:0] I_ITER;
input  [127:0] str_pad_cvt_dout;
input   str_pad_cvt_empty_n;
output   str_pad_cvt_read;
output  [1151:0] str_cvt_mul_din;
input   str_cvt_mul_full_n;
output   str_cvt_mul_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg str_pad_cvt_read;
reg str_cvt_mul_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    str_pad_cvt_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    str_cvt_mul_blk_n;
reg    ap_enable_reg_pp0_iter37;
reg   [0:0] and_ln77_reg_1027;
reg   [0:0] and_ln77_reg_1027_pp0_iter36_reg;
reg   [31:0] p_reg_230;
reg   [30:0] i_iter_reg_241;
wire  signed [31:0] WW_fu_258_p2;
wire  signed [31:0] grp_fu_264_p2;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_268_p2;
wire    ap_CS_fsm_state5;
wire   [30:0] add_ln43_fu_273_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state12_pp0_stage0_iter6;
wire    ap_block_state13_pp0_stage0_iter7;
wire    ap_block_state14_pp0_stage0_iter8;
wire    ap_block_state15_pp0_stage0_iter9;
wire    ap_block_state16_pp0_stage0_iter10;
wire    ap_block_state17_pp0_stage0_iter11;
wire    ap_block_state18_pp0_stage0_iter12;
wire    ap_block_state19_pp0_stage0_iter13;
wire    ap_block_state20_pp0_stage0_iter14;
wire    ap_block_state21_pp0_stage0_iter15;
wire    ap_block_state22_pp0_stage0_iter16;
wire    ap_block_state23_pp0_stage0_iter17;
wire    ap_block_state24_pp0_stage0_iter18;
wire    ap_block_state25_pp0_stage0_iter19;
wire    ap_block_state26_pp0_stage0_iter20;
wire    ap_block_state27_pp0_stage0_iter21;
wire    ap_block_state28_pp0_stage0_iter22;
wire    ap_block_state29_pp0_stage0_iter23;
wire    ap_block_state30_pp0_stage0_iter24;
wire    ap_block_state31_pp0_stage0_iter25;
wire    ap_block_state32_pp0_stage0_iter26;
wire    ap_block_state33_pp0_stage0_iter27;
wire    ap_block_state34_pp0_stage0_iter28;
wire    ap_block_state35_pp0_stage0_iter29;
wire    ap_block_state36_pp0_stage0_iter30;
wire    ap_block_state37_pp0_stage0_iter31;
wire    ap_block_state38_pp0_stage0_iter32;
wire    ap_block_state39_pp0_stage0_iter33;
wire    ap_block_state40_pp0_stage0_iter34;
wire    ap_block_state41_pp0_stage0_iter35;
wire    ap_block_state42_pp0_stage0_iter36;
reg    ap_block_state43_pp0_stage0_iter37;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln43_fu_283_p2;
reg   [0:0] icmp_ln43_reg_966;
wire   [0:0] icmp_ln47_fu_288_p2;
reg   [0:0] icmp_ln47_reg_970;
wire   [31:0] p_2_fu_305_p3;
wire   [31:0] pin_row_9_fu_356_p3;
wire   [0:0] icmp_ln65_fu_363_p2;
reg   [0:0] icmp_ln65_reg_989;
reg   [0:0] icmp_ln65_reg_989_pp0_iter2_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter3_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter4_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter5_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter6_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter7_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter8_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter9_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter10_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter11_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter12_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter13_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter14_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter15_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter16_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter17_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter18_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter19_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter20_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter21_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter22_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter23_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter24_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter25_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter26_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter27_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter28_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter29_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter30_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter31_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter32_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter33_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter34_reg;
reg   [0:0] icmp_ln65_reg_989_pp0_iter35_reg;
wire   [63:0] zext_ln79_fu_381_p1;
reg   [63:0] zext_ln79_reg_998;
reg   [8:0] buffer2_i_addr_reg_1010;
wire   [0:0] and_ln76_fu_422_p2;
reg   [0:0] and_ln76_reg_1015;
reg   [0:0] and_ln76_reg_1015_pp0_iter2_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter3_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter4_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter5_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter6_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter7_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter8_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter9_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter10_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter11_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter12_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter13_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter14_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter15_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter16_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter17_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter18_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter19_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter20_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter21_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter22_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter23_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter24_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter25_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter26_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter27_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter28_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter29_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter30_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter31_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter32_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter33_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter34_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter35_reg;
reg   [0:0] and_ln76_reg_1015_pp0_iter36_reg;
wire   [0:0] and_ln77_fu_444_p2;
reg   [0:0] and_ln77_reg_1027_pp0_iter2_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter3_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter4_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter5_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter6_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter7_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter8_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter9_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter10_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter11_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter12_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter13_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter14_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter15_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter16_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter17_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter18_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter19_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter20_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter21_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter22_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter23_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter24_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter25_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter26_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter27_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter28_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter29_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter30_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter31_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter32_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter33_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter34_reg;
reg   [0:0] and_ln77_reg_1027_pp0_iter35_reg;
wire   [0:0] icmp_ln85_fu_456_p2;
reg   [0:0] icmp_ln85_reg_1031;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter2_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter3_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter4_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter5_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter6_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter7_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter8_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter9_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter10_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter11_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter12_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter13_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter14_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter15_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter16_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter17_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter18_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter19_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter20_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter21_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter22_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter23_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter24_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter25_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter26_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter27_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter28_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter29_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter30_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter31_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter32_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter33_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter34_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter35_reg;
reg   [0:0] icmp_ln85_reg_1031_pp0_iter36_reg;
wire   [0:0] icmp_ln86_fu_462_p2;
reg   [0:0] icmp_ln86_reg_1036;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter2_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter3_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter4_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter5_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter6_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter7_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter8_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter9_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter10_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter11_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter12_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter13_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter14_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter15_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter16_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter17_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter18_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter19_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter20_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter21_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter22_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter23_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter24_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter25_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter26_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter27_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter28_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter29_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter30_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter31_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter32_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter33_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter34_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter35_reg;
reg   [0:0] icmp_ln86_reg_1036_pp0_iter36_reg;
wire   [127:0] buffer0_i_q1;
reg   [127:0] buffer0_i_load_reg_1051;
reg    ap_enable_reg_pp0_iter3;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter4_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter5_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter6_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter7_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter8_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter9_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter10_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter11_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter12_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter13_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter14_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter15_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter16_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter17_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter18_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter19_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter20_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter21_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter22_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter23_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter24_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter25_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter26_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter27_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter28_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter29_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter30_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter31_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter32_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter33_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter34_reg;
reg   [127:0] buffer0_i_load_reg_1051_pp0_iter35_reg;
wire   [127:0] buffer1_i_q1;
reg   [127:0] buffer1_i_load_reg_1058;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter4_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter5_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter6_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter7_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter8_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter9_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter10_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter11_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter12_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter13_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter14_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter15_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter16_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter17_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter18_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter19_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter20_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter21_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter22_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter23_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter24_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter25_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter26_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter27_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter28_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter29_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter30_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter31_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter32_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter33_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter34_reg;
reg   [127:0] buffer1_i_load_reg_1058_pp0_iter35_reg;
wire   [127:0] buffer2_i_q1;
reg   [127:0] buffer2_i_load_reg_1065;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter4_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter5_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter6_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter7_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter8_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter9_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter10_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter11_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter12_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter13_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter14_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter15_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter16_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter17_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter18_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter19_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter20_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter21_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter22_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter23_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter24_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter25_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter26_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter27_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter28_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter29_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter30_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter31_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter32_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter33_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter34_reg;
reg   [127:0] buffer2_i_load_reg_1065_pp0_iter35_reg;
wire   [127:0] p2_4_fu_636_p3;
reg   [127:0] p2_4_reg_1072;
wire   [127:0] p5_2_fu_649_p3;
reg   [127:0] p5_2_reg_1080;
wire   [127:0] p8_2_fu_662_p3;
reg   [127:0] p8_2_reg_1088;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
wire   [8:0] buffer0_i_address0;
reg    buffer0_i_ce0;
reg    buffer0_i_we0;
wire   [8:0] buffer0_i_address1;
reg    buffer0_i_ce1;
wire   [8:0] buffer1_i_address0;
reg    buffer1_i_ce0;
reg    buffer1_i_we0;
wire   [8:0] buffer1_i_address1;
reg    buffer1_i_ce1;
wire   [8:0] buffer2_i_address0;
reg    buffer2_i_ce0;
reg    buffer2_i_we0;
reg    buffer2_i_ce1;
wire   [0:0] icmp_ln69_fu_375_p2;
wire   [0:0] row2_buffer_write_2_fu_388_p2;
reg   [127:0] p0_fu_66;
wire   [127:0] p0_4_fu_707_p3;
reg   [127:0] p1_fu_70;
wire   [127:0] p1_3_fu_725_p3;
reg   [31:0] row2_buffer_write_fu_74;
wire   [31:0] row2_buffer_write_3_fu_507_p3;
reg   [31:0] row1_buffer_write_fu_78;
wire   [31:0] row1_buffer_write_2_fu_519_p3;
reg   [31:0] row0_buffer_write_fu_82;
wire   [31:0] row0_buffer_write_3_fu_535_p3;
reg   [31:0] pin_col_fu_86;
wire   [31:0] pin_col_5_fu_543_p3;
reg   [31:0] pin_row_fu_90;
wire   [31:0] pin_row_12_fu_559_p3;
reg   [127:0] p2_fu_94;
reg   [127:0] p3_fu_98;
wire   [127:0] p3_3_fu_739_p3;
reg   [127:0] p4_fu_102;
wire   [127:0] p4_2_fu_753_p3;
reg   [127:0] p5_fu_106;
reg   [127:0] p6_fu_110;
wire   [127:0] p6_2_fu_767_p3;
reg   [127:0] p7_fu_114;
wire   [127:0] p7_2_fu_781_p3;
reg   [127:0] p8_fu_118;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln71_fu_394_p2;
wire  signed [31:0] grp_fu_264_p1;
wire    ap_CS_fsm_state2;
wire   [31:0] i_iter_cast_fu_279_p1;
wire   [31:0] p_1_fu_294_p2;
wire   [0:0] icmp_ln129_fu_300_p2;
wire   [2:0] grp_fu_369_p1;
wire   [31:0] row0_buffer_write_1_fu_342_p3;
wire   [31:0] pin_col_3_fu_349_p3;
wire   [31:0] row1_buffer_write_1_fu_335_p3;
wire   [31:0] row2_buffer_write_1_fu_328_p3;
wire   [30:0] tmp_11_fu_400_p4;
wire   [0:0] icmp_ln76_fu_410_p2;
wire   [0:0] icmp_ln76_1_fu_416_p2;
wire   [30:0] tmp_12_fu_428_p4;
wire   [0:0] icmp_ln77_fu_438_p2;
wire   [31:0] pin_col_6_fu_450_p2;
wire   [0:0] row0_buffer_write_2_fu_483_p2;
wire   [0:0] icmp_ln113_fu_468_p2;
wire   [31:0] zext_ln123_fu_479_p1;
wire   [0:0] and_ln69_fu_501_p2;
wire   [31:0] select_ln113_fu_493_p3;
wire   [31:0] zext_ln69_fu_515_p1;
wire   [31:0] zext_ln30_fu_489_p1;
wire   [31:0] select_ln113_1_fu_527_p3;
wire   [31:0] pin_row_10_fu_473_p2;
wire   [31:0] pin_row_11_fu_551_p3;
wire   [2:0] grp_fu_369_p2;
wire   [2:0] trunc_ln65_fu_592_p1;
wire   [0:0] icmp_ln65_1_fu_596_p2;
wire   [0:0] or_ln66_fu_607_p2;
wire   [0:0] icmp_ln66_fu_618_p2;
wire   [0:0] xor_ln66_fu_612_p2;
wire   [0:0] and_ln66_fu_624_p2;
wire   [0:0] or_ln65_fu_602_p2;
wire   [127:0] p0_5_fu_630_p3;
wire   [127:0] p3_4_fu_643_p3;
wire   [127:0] p6_3_fu_656_p3;
wire   [0:0] or_ln85_fu_696_p2;
wire   [127:0] select_ln85_fu_700_p3;
wire   [0:0] or_ln86_fu_714_p2;
wire   [127:0] select_ln86_fu_718_p3;
wire   [127:0] select_ln89_fu_732_p3;
wire   [127:0] select_ln90_fu_746_p3;
wire   [127:0] select_ln93_fu_760_p3;
wire   [127:0] select_ln94_fu_774_p3;
reg    grp_fu_369_ce;
wire    ap_CS_fsm_state44;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
end

k_conv2D_cvt_buffer0_i #(
    .DataWidth( 128 ),
    .AddressRange( 258 ),
    .AddressWidth( 9 ))
buffer0_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer0_i_address0),
    .ce0(buffer0_i_ce0),
    .we0(buffer0_i_we0),
    .d0(str_pad_cvt_dout),
    .address1(buffer0_i_address1),
    .ce1(buffer0_i_ce1),
    .q1(buffer0_i_q1)
);

k_conv2D_cvt_buffer0_i #(
    .DataWidth( 128 ),
    .AddressRange( 258 ),
    .AddressWidth( 9 ))
buffer1_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer1_i_address0),
    .ce0(buffer1_i_ce0),
    .we0(buffer1_i_we0),
    .d0(str_pad_cvt_dout),
    .address1(buffer1_i_address1),
    .ce1(buffer1_i_ce1),
    .q1(buffer1_i_q1)
);

k_conv2D_cvt_buffer0_i #(
    .DataWidth( 128 ),
    .AddressRange( 258 ),
    .AddressWidth( 9 ))
buffer2_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer2_i_address0),
    .ce0(buffer2_i_ce0),
    .we0(buffer2_i_we0),
    .d0(str_pad_cvt_dout),
    .address1(buffer2_i_addr_reg_1010),
    .ce1(buffer2_i_ce1),
    .q1(buffer2_i_q1)
);

k_conv2D_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(WW_fu_258_p2),
    .din1(grp_fu_264_p1),
    .ce(1'b1),
    .dout(grp_fu_264_p2)
);

k_conv2D_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_264_p2),
    .din1(I_ITER),
    .ce(1'b1),
    .dout(grp_fu_268_p2)
);

k_conv2D_srem_32ns_3ns_3_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
srem_32ns_3ns_3_36_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pin_row_9_fu_356_p3),
    .din1(grp_fu_369_p1),
    .ce(grp_fu_369_ce),
    .dout(grp_fu_369_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state6))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state6)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_283_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_iter_reg_241 <= add_ln43_fu_273_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_iter_reg_241 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_283_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        p_reg_230 <= p_2_fu_305_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_reg_230 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln76_reg_1015 <= and_ln76_fu_422_p2;
        and_ln77_reg_1027 <= and_ln77_fu_444_p2;
        buffer2_i_addr_reg_1010 <= zext_ln79_fu_381_p1;
        icmp_ln43_reg_966 <= icmp_ln43_fu_283_p2;
        icmp_ln65_reg_989 <= icmp_ln65_fu_363_p2;
        icmp_ln85_reg_1031 <= icmp_ln85_fu_456_p2;
        icmp_ln86_reg_1036 <= icmp_ln86_fu_462_p2;
        zext_ln79_reg_998[31 : 0] <= zext_ln79_fu_381_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln76_reg_1015_pp0_iter10_reg <= and_ln76_reg_1015_pp0_iter9_reg;
        and_ln76_reg_1015_pp0_iter11_reg <= and_ln76_reg_1015_pp0_iter10_reg;
        and_ln76_reg_1015_pp0_iter12_reg <= and_ln76_reg_1015_pp0_iter11_reg;
        and_ln76_reg_1015_pp0_iter13_reg <= and_ln76_reg_1015_pp0_iter12_reg;
        and_ln76_reg_1015_pp0_iter14_reg <= and_ln76_reg_1015_pp0_iter13_reg;
        and_ln76_reg_1015_pp0_iter15_reg <= and_ln76_reg_1015_pp0_iter14_reg;
        and_ln76_reg_1015_pp0_iter16_reg <= and_ln76_reg_1015_pp0_iter15_reg;
        and_ln76_reg_1015_pp0_iter17_reg <= and_ln76_reg_1015_pp0_iter16_reg;
        and_ln76_reg_1015_pp0_iter18_reg <= and_ln76_reg_1015_pp0_iter17_reg;
        and_ln76_reg_1015_pp0_iter19_reg <= and_ln76_reg_1015_pp0_iter18_reg;
        and_ln76_reg_1015_pp0_iter20_reg <= and_ln76_reg_1015_pp0_iter19_reg;
        and_ln76_reg_1015_pp0_iter21_reg <= and_ln76_reg_1015_pp0_iter20_reg;
        and_ln76_reg_1015_pp0_iter22_reg <= and_ln76_reg_1015_pp0_iter21_reg;
        and_ln76_reg_1015_pp0_iter23_reg <= and_ln76_reg_1015_pp0_iter22_reg;
        and_ln76_reg_1015_pp0_iter24_reg <= and_ln76_reg_1015_pp0_iter23_reg;
        and_ln76_reg_1015_pp0_iter25_reg <= and_ln76_reg_1015_pp0_iter24_reg;
        and_ln76_reg_1015_pp0_iter26_reg <= and_ln76_reg_1015_pp0_iter25_reg;
        and_ln76_reg_1015_pp0_iter27_reg <= and_ln76_reg_1015_pp0_iter26_reg;
        and_ln76_reg_1015_pp0_iter28_reg <= and_ln76_reg_1015_pp0_iter27_reg;
        and_ln76_reg_1015_pp0_iter29_reg <= and_ln76_reg_1015_pp0_iter28_reg;
        and_ln76_reg_1015_pp0_iter2_reg <= and_ln76_reg_1015;
        and_ln76_reg_1015_pp0_iter30_reg <= and_ln76_reg_1015_pp0_iter29_reg;
        and_ln76_reg_1015_pp0_iter31_reg <= and_ln76_reg_1015_pp0_iter30_reg;
        and_ln76_reg_1015_pp0_iter32_reg <= and_ln76_reg_1015_pp0_iter31_reg;
        and_ln76_reg_1015_pp0_iter33_reg <= and_ln76_reg_1015_pp0_iter32_reg;
        and_ln76_reg_1015_pp0_iter34_reg <= and_ln76_reg_1015_pp0_iter33_reg;
        and_ln76_reg_1015_pp0_iter35_reg <= and_ln76_reg_1015_pp0_iter34_reg;
        and_ln76_reg_1015_pp0_iter36_reg <= and_ln76_reg_1015_pp0_iter35_reg;
        and_ln76_reg_1015_pp0_iter3_reg <= and_ln76_reg_1015_pp0_iter2_reg;
        and_ln76_reg_1015_pp0_iter4_reg <= and_ln76_reg_1015_pp0_iter3_reg;
        and_ln76_reg_1015_pp0_iter5_reg <= and_ln76_reg_1015_pp0_iter4_reg;
        and_ln76_reg_1015_pp0_iter6_reg <= and_ln76_reg_1015_pp0_iter5_reg;
        and_ln76_reg_1015_pp0_iter7_reg <= and_ln76_reg_1015_pp0_iter6_reg;
        and_ln76_reg_1015_pp0_iter8_reg <= and_ln76_reg_1015_pp0_iter7_reg;
        and_ln76_reg_1015_pp0_iter9_reg <= and_ln76_reg_1015_pp0_iter8_reg;
        and_ln77_reg_1027_pp0_iter10_reg <= and_ln77_reg_1027_pp0_iter9_reg;
        and_ln77_reg_1027_pp0_iter11_reg <= and_ln77_reg_1027_pp0_iter10_reg;
        and_ln77_reg_1027_pp0_iter12_reg <= and_ln77_reg_1027_pp0_iter11_reg;
        and_ln77_reg_1027_pp0_iter13_reg <= and_ln77_reg_1027_pp0_iter12_reg;
        and_ln77_reg_1027_pp0_iter14_reg <= and_ln77_reg_1027_pp0_iter13_reg;
        and_ln77_reg_1027_pp0_iter15_reg <= and_ln77_reg_1027_pp0_iter14_reg;
        and_ln77_reg_1027_pp0_iter16_reg <= and_ln77_reg_1027_pp0_iter15_reg;
        and_ln77_reg_1027_pp0_iter17_reg <= and_ln77_reg_1027_pp0_iter16_reg;
        and_ln77_reg_1027_pp0_iter18_reg <= and_ln77_reg_1027_pp0_iter17_reg;
        and_ln77_reg_1027_pp0_iter19_reg <= and_ln77_reg_1027_pp0_iter18_reg;
        and_ln77_reg_1027_pp0_iter20_reg <= and_ln77_reg_1027_pp0_iter19_reg;
        and_ln77_reg_1027_pp0_iter21_reg <= and_ln77_reg_1027_pp0_iter20_reg;
        and_ln77_reg_1027_pp0_iter22_reg <= and_ln77_reg_1027_pp0_iter21_reg;
        and_ln77_reg_1027_pp0_iter23_reg <= and_ln77_reg_1027_pp0_iter22_reg;
        and_ln77_reg_1027_pp0_iter24_reg <= and_ln77_reg_1027_pp0_iter23_reg;
        and_ln77_reg_1027_pp0_iter25_reg <= and_ln77_reg_1027_pp0_iter24_reg;
        and_ln77_reg_1027_pp0_iter26_reg <= and_ln77_reg_1027_pp0_iter25_reg;
        and_ln77_reg_1027_pp0_iter27_reg <= and_ln77_reg_1027_pp0_iter26_reg;
        and_ln77_reg_1027_pp0_iter28_reg <= and_ln77_reg_1027_pp0_iter27_reg;
        and_ln77_reg_1027_pp0_iter29_reg <= and_ln77_reg_1027_pp0_iter28_reg;
        and_ln77_reg_1027_pp0_iter2_reg <= and_ln77_reg_1027;
        and_ln77_reg_1027_pp0_iter30_reg <= and_ln77_reg_1027_pp0_iter29_reg;
        and_ln77_reg_1027_pp0_iter31_reg <= and_ln77_reg_1027_pp0_iter30_reg;
        and_ln77_reg_1027_pp0_iter32_reg <= and_ln77_reg_1027_pp0_iter31_reg;
        and_ln77_reg_1027_pp0_iter33_reg <= and_ln77_reg_1027_pp0_iter32_reg;
        and_ln77_reg_1027_pp0_iter34_reg <= and_ln77_reg_1027_pp0_iter33_reg;
        and_ln77_reg_1027_pp0_iter35_reg <= and_ln77_reg_1027_pp0_iter34_reg;
        and_ln77_reg_1027_pp0_iter36_reg <= and_ln77_reg_1027_pp0_iter35_reg;
        and_ln77_reg_1027_pp0_iter3_reg <= and_ln77_reg_1027_pp0_iter2_reg;
        and_ln77_reg_1027_pp0_iter4_reg <= and_ln77_reg_1027_pp0_iter3_reg;
        and_ln77_reg_1027_pp0_iter5_reg <= and_ln77_reg_1027_pp0_iter4_reg;
        and_ln77_reg_1027_pp0_iter6_reg <= and_ln77_reg_1027_pp0_iter5_reg;
        and_ln77_reg_1027_pp0_iter7_reg <= and_ln77_reg_1027_pp0_iter6_reg;
        and_ln77_reg_1027_pp0_iter8_reg <= and_ln77_reg_1027_pp0_iter7_reg;
        and_ln77_reg_1027_pp0_iter9_reg <= and_ln77_reg_1027_pp0_iter8_reg;
        buffer0_i_load_reg_1051_pp0_iter10_reg <= buffer0_i_load_reg_1051_pp0_iter9_reg;
        buffer0_i_load_reg_1051_pp0_iter11_reg <= buffer0_i_load_reg_1051_pp0_iter10_reg;
        buffer0_i_load_reg_1051_pp0_iter12_reg <= buffer0_i_load_reg_1051_pp0_iter11_reg;
        buffer0_i_load_reg_1051_pp0_iter13_reg <= buffer0_i_load_reg_1051_pp0_iter12_reg;
        buffer0_i_load_reg_1051_pp0_iter14_reg <= buffer0_i_load_reg_1051_pp0_iter13_reg;
        buffer0_i_load_reg_1051_pp0_iter15_reg <= buffer0_i_load_reg_1051_pp0_iter14_reg;
        buffer0_i_load_reg_1051_pp0_iter16_reg <= buffer0_i_load_reg_1051_pp0_iter15_reg;
        buffer0_i_load_reg_1051_pp0_iter17_reg <= buffer0_i_load_reg_1051_pp0_iter16_reg;
        buffer0_i_load_reg_1051_pp0_iter18_reg <= buffer0_i_load_reg_1051_pp0_iter17_reg;
        buffer0_i_load_reg_1051_pp0_iter19_reg <= buffer0_i_load_reg_1051_pp0_iter18_reg;
        buffer0_i_load_reg_1051_pp0_iter20_reg <= buffer0_i_load_reg_1051_pp0_iter19_reg;
        buffer0_i_load_reg_1051_pp0_iter21_reg <= buffer0_i_load_reg_1051_pp0_iter20_reg;
        buffer0_i_load_reg_1051_pp0_iter22_reg <= buffer0_i_load_reg_1051_pp0_iter21_reg;
        buffer0_i_load_reg_1051_pp0_iter23_reg <= buffer0_i_load_reg_1051_pp0_iter22_reg;
        buffer0_i_load_reg_1051_pp0_iter24_reg <= buffer0_i_load_reg_1051_pp0_iter23_reg;
        buffer0_i_load_reg_1051_pp0_iter25_reg <= buffer0_i_load_reg_1051_pp0_iter24_reg;
        buffer0_i_load_reg_1051_pp0_iter26_reg <= buffer0_i_load_reg_1051_pp0_iter25_reg;
        buffer0_i_load_reg_1051_pp0_iter27_reg <= buffer0_i_load_reg_1051_pp0_iter26_reg;
        buffer0_i_load_reg_1051_pp0_iter28_reg <= buffer0_i_load_reg_1051_pp0_iter27_reg;
        buffer0_i_load_reg_1051_pp0_iter29_reg <= buffer0_i_load_reg_1051_pp0_iter28_reg;
        buffer0_i_load_reg_1051_pp0_iter30_reg <= buffer0_i_load_reg_1051_pp0_iter29_reg;
        buffer0_i_load_reg_1051_pp0_iter31_reg <= buffer0_i_load_reg_1051_pp0_iter30_reg;
        buffer0_i_load_reg_1051_pp0_iter32_reg <= buffer0_i_load_reg_1051_pp0_iter31_reg;
        buffer0_i_load_reg_1051_pp0_iter33_reg <= buffer0_i_load_reg_1051_pp0_iter32_reg;
        buffer0_i_load_reg_1051_pp0_iter34_reg <= buffer0_i_load_reg_1051_pp0_iter33_reg;
        buffer0_i_load_reg_1051_pp0_iter35_reg <= buffer0_i_load_reg_1051_pp0_iter34_reg;
        buffer0_i_load_reg_1051_pp0_iter4_reg <= buffer0_i_load_reg_1051;
        buffer0_i_load_reg_1051_pp0_iter5_reg <= buffer0_i_load_reg_1051_pp0_iter4_reg;
        buffer0_i_load_reg_1051_pp0_iter6_reg <= buffer0_i_load_reg_1051_pp0_iter5_reg;
        buffer0_i_load_reg_1051_pp0_iter7_reg <= buffer0_i_load_reg_1051_pp0_iter6_reg;
        buffer0_i_load_reg_1051_pp0_iter8_reg <= buffer0_i_load_reg_1051_pp0_iter7_reg;
        buffer0_i_load_reg_1051_pp0_iter9_reg <= buffer0_i_load_reg_1051_pp0_iter8_reg;
        buffer1_i_load_reg_1058_pp0_iter10_reg <= buffer1_i_load_reg_1058_pp0_iter9_reg;
        buffer1_i_load_reg_1058_pp0_iter11_reg <= buffer1_i_load_reg_1058_pp0_iter10_reg;
        buffer1_i_load_reg_1058_pp0_iter12_reg <= buffer1_i_load_reg_1058_pp0_iter11_reg;
        buffer1_i_load_reg_1058_pp0_iter13_reg <= buffer1_i_load_reg_1058_pp0_iter12_reg;
        buffer1_i_load_reg_1058_pp0_iter14_reg <= buffer1_i_load_reg_1058_pp0_iter13_reg;
        buffer1_i_load_reg_1058_pp0_iter15_reg <= buffer1_i_load_reg_1058_pp0_iter14_reg;
        buffer1_i_load_reg_1058_pp0_iter16_reg <= buffer1_i_load_reg_1058_pp0_iter15_reg;
        buffer1_i_load_reg_1058_pp0_iter17_reg <= buffer1_i_load_reg_1058_pp0_iter16_reg;
        buffer1_i_load_reg_1058_pp0_iter18_reg <= buffer1_i_load_reg_1058_pp0_iter17_reg;
        buffer1_i_load_reg_1058_pp0_iter19_reg <= buffer1_i_load_reg_1058_pp0_iter18_reg;
        buffer1_i_load_reg_1058_pp0_iter20_reg <= buffer1_i_load_reg_1058_pp0_iter19_reg;
        buffer1_i_load_reg_1058_pp0_iter21_reg <= buffer1_i_load_reg_1058_pp0_iter20_reg;
        buffer1_i_load_reg_1058_pp0_iter22_reg <= buffer1_i_load_reg_1058_pp0_iter21_reg;
        buffer1_i_load_reg_1058_pp0_iter23_reg <= buffer1_i_load_reg_1058_pp0_iter22_reg;
        buffer1_i_load_reg_1058_pp0_iter24_reg <= buffer1_i_load_reg_1058_pp0_iter23_reg;
        buffer1_i_load_reg_1058_pp0_iter25_reg <= buffer1_i_load_reg_1058_pp0_iter24_reg;
        buffer1_i_load_reg_1058_pp0_iter26_reg <= buffer1_i_load_reg_1058_pp0_iter25_reg;
        buffer1_i_load_reg_1058_pp0_iter27_reg <= buffer1_i_load_reg_1058_pp0_iter26_reg;
        buffer1_i_load_reg_1058_pp0_iter28_reg <= buffer1_i_load_reg_1058_pp0_iter27_reg;
        buffer1_i_load_reg_1058_pp0_iter29_reg <= buffer1_i_load_reg_1058_pp0_iter28_reg;
        buffer1_i_load_reg_1058_pp0_iter30_reg <= buffer1_i_load_reg_1058_pp0_iter29_reg;
        buffer1_i_load_reg_1058_pp0_iter31_reg <= buffer1_i_load_reg_1058_pp0_iter30_reg;
        buffer1_i_load_reg_1058_pp0_iter32_reg <= buffer1_i_load_reg_1058_pp0_iter31_reg;
        buffer1_i_load_reg_1058_pp0_iter33_reg <= buffer1_i_load_reg_1058_pp0_iter32_reg;
        buffer1_i_load_reg_1058_pp0_iter34_reg <= buffer1_i_load_reg_1058_pp0_iter33_reg;
        buffer1_i_load_reg_1058_pp0_iter35_reg <= buffer1_i_load_reg_1058_pp0_iter34_reg;
        buffer1_i_load_reg_1058_pp0_iter4_reg <= buffer1_i_load_reg_1058;
        buffer1_i_load_reg_1058_pp0_iter5_reg <= buffer1_i_load_reg_1058_pp0_iter4_reg;
        buffer1_i_load_reg_1058_pp0_iter6_reg <= buffer1_i_load_reg_1058_pp0_iter5_reg;
        buffer1_i_load_reg_1058_pp0_iter7_reg <= buffer1_i_load_reg_1058_pp0_iter6_reg;
        buffer1_i_load_reg_1058_pp0_iter8_reg <= buffer1_i_load_reg_1058_pp0_iter7_reg;
        buffer1_i_load_reg_1058_pp0_iter9_reg <= buffer1_i_load_reg_1058_pp0_iter8_reg;
        buffer2_i_load_reg_1065_pp0_iter10_reg <= buffer2_i_load_reg_1065_pp0_iter9_reg;
        buffer2_i_load_reg_1065_pp0_iter11_reg <= buffer2_i_load_reg_1065_pp0_iter10_reg;
        buffer2_i_load_reg_1065_pp0_iter12_reg <= buffer2_i_load_reg_1065_pp0_iter11_reg;
        buffer2_i_load_reg_1065_pp0_iter13_reg <= buffer2_i_load_reg_1065_pp0_iter12_reg;
        buffer2_i_load_reg_1065_pp0_iter14_reg <= buffer2_i_load_reg_1065_pp0_iter13_reg;
        buffer2_i_load_reg_1065_pp0_iter15_reg <= buffer2_i_load_reg_1065_pp0_iter14_reg;
        buffer2_i_load_reg_1065_pp0_iter16_reg <= buffer2_i_load_reg_1065_pp0_iter15_reg;
        buffer2_i_load_reg_1065_pp0_iter17_reg <= buffer2_i_load_reg_1065_pp0_iter16_reg;
        buffer2_i_load_reg_1065_pp0_iter18_reg <= buffer2_i_load_reg_1065_pp0_iter17_reg;
        buffer2_i_load_reg_1065_pp0_iter19_reg <= buffer2_i_load_reg_1065_pp0_iter18_reg;
        buffer2_i_load_reg_1065_pp0_iter20_reg <= buffer2_i_load_reg_1065_pp0_iter19_reg;
        buffer2_i_load_reg_1065_pp0_iter21_reg <= buffer2_i_load_reg_1065_pp0_iter20_reg;
        buffer2_i_load_reg_1065_pp0_iter22_reg <= buffer2_i_load_reg_1065_pp0_iter21_reg;
        buffer2_i_load_reg_1065_pp0_iter23_reg <= buffer2_i_load_reg_1065_pp0_iter22_reg;
        buffer2_i_load_reg_1065_pp0_iter24_reg <= buffer2_i_load_reg_1065_pp0_iter23_reg;
        buffer2_i_load_reg_1065_pp0_iter25_reg <= buffer2_i_load_reg_1065_pp0_iter24_reg;
        buffer2_i_load_reg_1065_pp0_iter26_reg <= buffer2_i_load_reg_1065_pp0_iter25_reg;
        buffer2_i_load_reg_1065_pp0_iter27_reg <= buffer2_i_load_reg_1065_pp0_iter26_reg;
        buffer2_i_load_reg_1065_pp0_iter28_reg <= buffer2_i_load_reg_1065_pp0_iter27_reg;
        buffer2_i_load_reg_1065_pp0_iter29_reg <= buffer2_i_load_reg_1065_pp0_iter28_reg;
        buffer2_i_load_reg_1065_pp0_iter30_reg <= buffer2_i_load_reg_1065_pp0_iter29_reg;
        buffer2_i_load_reg_1065_pp0_iter31_reg <= buffer2_i_load_reg_1065_pp0_iter30_reg;
        buffer2_i_load_reg_1065_pp0_iter32_reg <= buffer2_i_load_reg_1065_pp0_iter31_reg;
        buffer2_i_load_reg_1065_pp0_iter33_reg <= buffer2_i_load_reg_1065_pp0_iter32_reg;
        buffer2_i_load_reg_1065_pp0_iter34_reg <= buffer2_i_load_reg_1065_pp0_iter33_reg;
        buffer2_i_load_reg_1065_pp0_iter35_reg <= buffer2_i_load_reg_1065_pp0_iter34_reg;
        buffer2_i_load_reg_1065_pp0_iter4_reg <= buffer2_i_load_reg_1065;
        buffer2_i_load_reg_1065_pp0_iter5_reg <= buffer2_i_load_reg_1065_pp0_iter4_reg;
        buffer2_i_load_reg_1065_pp0_iter6_reg <= buffer2_i_load_reg_1065_pp0_iter5_reg;
        buffer2_i_load_reg_1065_pp0_iter7_reg <= buffer2_i_load_reg_1065_pp0_iter6_reg;
        buffer2_i_load_reg_1065_pp0_iter8_reg <= buffer2_i_load_reg_1065_pp0_iter7_reg;
        buffer2_i_load_reg_1065_pp0_iter9_reg <= buffer2_i_load_reg_1065_pp0_iter8_reg;
        icmp_ln65_reg_989_pp0_iter10_reg <= icmp_ln65_reg_989_pp0_iter9_reg;
        icmp_ln65_reg_989_pp0_iter11_reg <= icmp_ln65_reg_989_pp0_iter10_reg;
        icmp_ln65_reg_989_pp0_iter12_reg <= icmp_ln65_reg_989_pp0_iter11_reg;
        icmp_ln65_reg_989_pp0_iter13_reg <= icmp_ln65_reg_989_pp0_iter12_reg;
        icmp_ln65_reg_989_pp0_iter14_reg <= icmp_ln65_reg_989_pp0_iter13_reg;
        icmp_ln65_reg_989_pp0_iter15_reg <= icmp_ln65_reg_989_pp0_iter14_reg;
        icmp_ln65_reg_989_pp0_iter16_reg <= icmp_ln65_reg_989_pp0_iter15_reg;
        icmp_ln65_reg_989_pp0_iter17_reg <= icmp_ln65_reg_989_pp0_iter16_reg;
        icmp_ln65_reg_989_pp0_iter18_reg <= icmp_ln65_reg_989_pp0_iter17_reg;
        icmp_ln65_reg_989_pp0_iter19_reg <= icmp_ln65_reg_989_pp0_iter18_reg;
        icmp_ln65_reg_989_pp0_iter20_reg <= icmp_ln65_reg_989_pp0_iter19_reg;
        icmp_ln65_reg_989_pp0_iter21_reg <= icmp_ln65_reg_989_pp0_iter20_reg;
        icmp_ln65_reg_989_pp0_iter22_reg <= icmp_ln65_reg_989_pp0_iter21_reg;
        icmp_ln65_reg_989_pp0_iter23_reg <= icmp_ln65_reg_989_pp0_iter22_reg;
        icmp_ln65_reg_989_pp0_iter24_reg <= icmp_ln65_reg_989_pp0_iter23_reg;
        icmp_ln65_reg_989_pp0_iter25_reg <= icmp_ln65_reg_989_pp0_iter24_reg;
        icmp_ln65_reg_989_pp0_iter26_reg <= icmp_ln65_reg_989_pp0_iter25_reg;
        icmp_ln65_reg_989_pp0_iter27_reg <= icmp_ln65_reg_989_pp0_iter26_reg;
        icmp_ln65_reg_989_pp0_iter28_reg <= icmp_ln65_reg_989_pp0_iter27_reg;
        icmp_ln65_reg_989_pp0_iter29_reg <= icmp_ln65_reg_989_pp0_iter28_reg;
        icmp_ln65_reg_989_pp0_iter2_reg <= icmp_ln65_reg_989;
        icmp_ln65_reg_989_pp0_iter30_reg <= icmp_ln65_reg_989_pp0_iter29_reg;
        icmp_ln65_reg_989_pp0_iter31_reg <= icmp_ln65_reg_989_pp0_iter30_reg;
        icmp_ln65_reg_989_pp0_iter32_reg <= icmp_ln65_reg_989_pp0_iter31_reg;
        icmp_ln65_reg_989_pp0_iter33_reg <= icmp_ln65_reg_989_pp0_iter32_reg;
        icmp_ln65_reg_989_pp0_iter34_reg <= icmp_ln65_reg_989_pp0_iter33_reg;
        icmp_ln65_reg_989_pp0_iter35_reg <= icmp_ln65_reg_989_pp0_iter34_reg;
        icmp_ln65_reg_989_pp0_iter3_reg <= icmp_ln65_reg_989_pp0_iter2_reg;
        icmp_ln65_reg_989_pp0_iter4_reg <= icmp_ln65_reg_989_pp0_iter3_reg;
        icmp_ln65_reg_989_pp0_iter5_reg <= icmp_ln65_reg_989_pp0_iter4_reg;
        icmp_ln65_reg_989_pp0_iter6_reg <= icmp_ln65_reg_989_pp0_iter5_reg;
        icmp_ln65_reg_989_pp0_iter7_reg <= icmp_ln65_reg_989_pp0_iter6_reg;
        icmp_ln65_reg_989_pp0_iter8_reg <= icmp_ln65_reg_989_pp0_iter7_reg;
        icmp_ln65_reg_989_pp0_iter9_reg <= icmp_ln65_reg_989_pp0_iter8_reg;
        icmp_ln85_reg_1031_pp0_iter10_reg <= icmp_ln85_reg_1031_pp0_iter9_reg;
        icmp_ln85_reg_1031_pp0_iter11_reg <= icmp_ln85_reg_1031_pp0_iter10_reg;
        icmp_ln85_reg_1031_pp0_iter12_reg <= icmp_ln85_reg_1031_pp0_iter11_reg;
        icmp_ln85_reg_1031_pp0_iter13_reg <= icmp_ln85_reg_1031_pp0_iter12_reg;
        icmp_ln85_reg_1031_pp0_iter14_reg <= icmp_ln85_reg_1031_pp0_iter13_reg;
        icmp_ln85_reg_1031_pp0_iter15_reg <= icmp_ln85_reg_1031_pp0_iter14_reg;
        icmp_ln85_reg_1031_pp0_iter16_reg <= icmp_ln85_reg_1031_pp0_iter15_reg;
        icmp_ln85_reg_1031_pp0_iter17_reg <= icmp_ln85_reg_1031_pp0_iter16_reg;
        icmp_ln85_reg_1031_pp0_iter18_reg <= icmp_ln85_reg_1031_pp0_iter17_reg;
        icmp_ln85_reg_1031_pp0_iter19_reg <= icmp_ln85_reg_1031_pp0_iter18_reg;
        icmp_ln85_reg_1031_pp0_iter20_reg <= icmp_ln85_reg_1031_pp0_iter19_reg;
        icmp_ln85_reg_1031_pp0_iter21_reg <= icmp_ln85_reg_1031_pp0_iter20_reg;
        icmp_ln85_reg_1031_pp0_iter22_reg <= icmp_ln85_reg_1031_pp0_iter21_reg;
        icmp_ln85_reg_1031_pp0_iter23_reg <= icmp_ln85_reg_1031_pp0_iter22_reg;
        icmp_ln85_reg_1031_pp0_iter24_reg <= icmp_ln85_reg_1031_pp0_iter23_reg;
        icmp_ln85_reg_1031_pp0_iter25_reg <= icmp_ln85_reg_1031_pp0_iter24_reg;
        icmp_ln85_reg_1031_pp0_iter26_reg <= icmp_ln85_reg_1031_pp0_iter25_reg;
        icmp_ln85_reg_1031_pp0_iter27_reg <= icmp_ln85_reg_1031_pp0_iter26_reg;
        icmp_ln85_reg_1031_pp0_iter28_reg <= icmp_ln85_reg_1031_pp0_iter27_reg;
        icmp_ln85_reg_1031_pp0_iter29_reg <= icmp_ln85_reg_1031_pp0_iter28_reg;
        icmp_ln85_reg_1031_pp0_iter2_reg <= icmp_ln85_reg_1031;
        icmp_ln85_reg_1031_pp0_iter30_reg <= icmp_ln85_reg_1031_pp0_iter29_reg;
        icmp_ln85_reg_1031_pp0_iter31_reg <= icmp_ln85_reg_1031_pp0_iter30_reg;
        icmp_ln85_reg_1031_pp0_iter32_reg <= icmp_ln85_reg_1031_pp0_iter31_reg;
        icmp_ln85_reg_1031_pp0_iter33_reg <= icmp_ln85_reg_1031_pp0_iter32_reg;
        icmp_ln85_reg_1031_pp0_iter34_reg <= icmp_ln85_reg_1031_pp0_iter33_reg;
        icmp_ln85_reg_1031_pp0_iter35_reg <= icmp_ln85_reg_1031_pp0_iter34_reg;
        icmp_ln85_reg_1031_pp0_iter36_reg <= icmp_ln85_reg_1031_pp0_iter35_reg;
        icmp_ln85_reg_1031_pp0_iter3_reg <= icmp_ln85_reg_1031_pp0_iter2_reg;
        icmp_ln85_reg_1031_pp0_iter4_reg <= icmp_ln85_reg_1031_pp0_iter3_reg;
        icmp_ln85_reg_1031_pp0_iter5_reg <= icmp_ln85_reg_1031_pp0_iter4_reg;
        icmp_ln85_reg_1031_pp0_iter6_reg <= icmp_ln85_reg_1031_pp0_iter5_reg;
        icmp_ln85_reg_1031_pp0_iter7_reg <= icmp_ln85_reg_1031_pp0_iter6_reg;
        icmp_ln85_reg_1031_pp0_iter8_reg <= icmp_ln85_reg_1031_pp0_iter7_reg;
        icmp_ln85_reg_1031_pp0_iter9_reg <= icmp_ln85_reg_1031_pp0_iter8_reg;
        icmp_ln86_reg_1036_pp0_iter10_reg <= icmp_ln86_reg_1036_pp0_iter9_reg;
        icmp_ln86_reg_1036_pp0_iter11_reg <= icmp_ln86_reg_1036_pp0_iter10_reg;
        icmp_ln86_reg_1036_pp0_iter12_reg <= icmp_ln86_reg_1036_pp0_iter11_reg;
        icmp_ln86_reg_1036_pp0_iter13_reg <= icmp_ln86_reg_1036_pp0_iter12_reg;
        icmp_ln86_reg_1036_pp0_iter14_reg <= icmp_ln86_reg_1036_pp0_iter13_reg;
        icmp_ln86_reg_1036_pp0_iter15_reg <= icmp_ln86_reg_1036_pp0_iter14_reg;
        icmp_ln86_reg_1036_pp0_iter16_reg <= icmp_ln86_reg_1036_pp0_iter15_reg;
        icmp_ln86_reg_1036_pp0_iter17_reg <= icmp_ln86_reg_1036_pp0_iter16_reg;
        icmp_ln86_reg_1036_pp0_iter18_reg <= icmp_ln86_reg_1036_pp0_iter17_reg;
        icmp_ln86_reg_1036_pp0_iter19_reg <= icmp_ln86_reg_1036_pp0_iter18_reg;
        icmp_ln86_reg_1036_pp0_iter20_reg <= icmp_ln86_reg_1036_pp0_iter19_reg;
        icmp_ln86_reg_1036_pp0_iter21_reg <= icmp_ln86_reg_1036_pp0_iter20_reg;
        icmp_ln86_reg_1036_pp0_iter22_reg <= icmp_ln86_reg_1036_pp0_iter21_reg;
        icmp_ln86_reg_1036_pp0_iter23_reg <= icmp_ln86_reg_1036_pp0_iter22_reg;
        icmp_ln86_reg_1036_pp0_iter24_reg <= icmp_ln86_reg_1036_pp0_iter23_reg;
        icmp_ln86_reg_1036_pp0_iter25_reg <= icmp_ln86_reg_1036_pp0_iter24_reg;
        icmp_ln86_reg_1036_pp0_iter26_reg <= icmp_ln86_reg_1036_pp0_iter25_reg;
        icmp_ln86_reg_1036_pp0_iter27_reg <= icmp_ln86_reg_1036_pp0_iter26_reg;
        icmp_ln86_reg_1036_pp0_iter28_reg <= icmp_ln86_reg_1036_pp0_iter27_reg;
        icmp_ln86_reg_1036_pp0_iter29_reg <= icmp_ln86_reg_1036_pp0_iter28_reg;
        icmp_ln86_reg_1036_pp0_iter2_reg <= icmp_ln86_reg_1036;
        icmp_ln86_reg_1036_pp0_iter30_reg <= icmp_ln86_reg_1036_pp0_iter29_reg;
        icmp_ln86_reg_1036_pp0_iter31_reg <= icmp_ln86_reg_1036_pp0_iter30_reg;
        icmp_ln86_reg_1036_pp0_iter32_reg <= icmp_ln86_reg_1036_pp0_iter31_reg;
        icmp_ln86_reg_1036_pp0_iter33_reg <= icmp_ln86_reg_1036_pp0_iter32_reg;
        icmp_ln86_reg_1036_pp0_iter34_reg <= icmp_ln86_reg_1036_pp0_iter33_reg;
        icmp_ln86_reg_1036_pp0_iter35_reg <= icmp_ln86_reg_1036_pp0_iter34_reg;
        icmp_ln86_reg_1036_pp0_iter36_reg <= icmp_ln86_reg_1036_pp0_iter35_reg;
        icmp_ln86_reg_1036_pp0_iter3_reg <= icmp_ln86_reg_1036_pp0_iter2_reg;
        icmp_ln86_reg_1036_pp0_iter4_reg <= icmp_ln86_reg_1036_pp0_iter3_reg;
        icmp_ln86_reg_1036_pp0_iter5_reg <= icmp_ln86_reg_1036_pp0_iter4_reg;
        icmp_ln86_reg_1036_pp0_iter6_reg <= icmp_ln86_reg_1036_pp0_iter5_reg;
        icmp_ln86_reg_1036_pp0_iter7_reg <= icmp_ln86_reg_1036_pp0_iter6_reg;
        icmp_ln86_reg_1036_pp0_iter8_reg <= icmp_ln86_reg_1036_pp0_iter7_reg;
        icmp_ln86_reg_1036_pp0_iter9_reg <= icmp_ln86_reg_1036_pp0_iter8_reg;
        p2_4_reg_1072 <= p2_4_fu_636_p3;
        p5_2_reg_1080 <= p5_2_fu_649_p3;
        p8_2_reg_1088 <= p8_2_fu_662_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buffer0_i_load_reg_1051 <= buffer0_i_q1;
        buffer1_i_load_reg_1058 <= buffer1_i_q1;
        buffer2_i_load_reg_1065 <= buffer2_i_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_fu_283_p2 == 1'd1))) begin
        icmp_ln47_reg_970 <= icmp_ln47_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p0_fu_66 <= p0_4_fu_707_p3;
        p1_fu_70 <= p1_3_fu_725_p3;
        p2_fu_94 <= p2_4_reg_1072;
        p3_fu_98 <= p3_3_fu_739_p3;
        p4_fu_102 <= p4_2_fu_753_p3;
        p5_fu_106 <= p5_2_reg_1080;
        p6_fu_110 <= p6_2_fu_767_p3;
        p7_fu_114 <= p7_2_fu_781_p3;
        p8_fu_118 <= p8_2_reg_1088;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_reg_966 == 1'd1))) begin
        pin_col_fu_86 <= pin_col_5_fu_543_p3;
        pin_row_fu_90 <= pin_row_12_fu_559_p3;
        row0_buffer_write_fu_82 <= row0_buffer_write_3_fu_535_p3;
        row1_buffer_write_fu_78 <= row1_buffer_write_2_fu_519_p3;
        row2_buffer_write_fu_74 <= row2_buffer_write_3_fu_507_p3;
    end
end

always @ (*) begin
    if ((icmp_ln43_fu_283_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer0_i_ce0 = 1'b1;
    end else begin
        buffer0_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buffer0_i_ce1 = 1'b1;
    end else begin
        buffer0_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_375_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer0_i_we0 = 1'b1;
    end else begin
        buffer0_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer1_i_ce0 = 1'b1;
    end else begin
        buffer1_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buffer1_i_ce1 = 1'b1;
    end else begin
        buffer1_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((row2_buffer_write_2_fu_388_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer1_i_we0 = 1'b1;
    end else begin
        buffer1_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer2_i_ce0 = 1'b1;
    end else begin
        buffer2_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buffer2_i_ce1 = 1'b1;
    end else begin
        buffer2_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_394_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer2_i_we0 = 1'b1;
    end else begin
        buffer2_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_369_ce = 1'b1;
    end else begin
        grp_fu_369_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln77_reg_1027_pp0_iter36_reg) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        str_cvt_mul_blk_n = str_cvt_mul_full_n;
    end else begin
        str_cvt_mul_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln77_reg_1027_pp0_iter36_reg) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        str_cvt_mul_write = 1'b1;
    end else begin
        str_cvt_mul_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        str_pad_cvt_blk_n = str_pad_cvt_empty_n;
    end else begin
        str_pad_cvt_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        str_pad_cvt_read = 1'b1;
    end else begin
        str_pad_cvt_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln43_fu_283_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter37 == 1'b1) & (ap_enable_reg_pp0_iter36 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter37 == 1'b1) & (ap_enable_reg_pp0_iter36 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln43_fu_283_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign WW_fu_258_p2 = (W + 32'd2);

assign add_ln43_fu_273_p2 = (i_iter_reg_241 + 31'd1);

assign and_ln66_fu_624_p2 = (xor_ln66_fu_612_p2 & icmp_ln66_fu_618_p2);

assign and_ln69_fu_501_p2 = (icmp_ln69_fu_375_p2 & icmp_ln113_fu_468_p2);

assign and_ln76_fu_422_p2 = (icmp_ln76_fu_410_p2 & icmp_ln76_1_fu_416_p2);

assign and_ln77_fu_444_p2 = (icmp_ln77_fu_438_p2 & icmp_ln76_fu_410_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln77_reg_1027_pp0_iter36_reg) & (ap_enable_reg_pp0_iter37 == 1'b1) & (str_cvt_mul_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (str_pad_cvt_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln77_reg_1027_pp0_iter36_reg) & (ap_enable_reg_pp0_iter37 == 1'b1) & (str_cvt_mul_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (str_pad_cvt_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln77_reg_1027_pp0_iter36_reg) & (ap_enable_reg_pp0_iter37 == 1'b1) & (str_cvt_mul_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (str_pad_cvt_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state43_pp0_stage0_iter37 = ((1'd1 == and_ln77_reg_1027_pp0_iter36_reg) & (str_cvt_mul_full_n == 1'b0));
end

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (str_pad_cvt_empty_n == 1'b0);
end

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign buffer0_i_address0 = zext_ln79_fu_381_p1;

assign buffer0_i_address1 = zext_ln79_reg_998;

assign buffer1_i_address0 = zext_ln79_fu_381_p1;

assign buffer1_i_address1 = zext_ln79_reg_998;

assign buffer2_i_address0 = zext_ln79_fu_381_p1;

assign grp_fu_264_p1 = (H + 32'd2);

assign grp_fu_369_p1 = 32'd3;

assign i_iter_cast_fu_279_p1 = i_iter_reg_241;

assign icmp_ln113_fu_468_p2 = ((pin_col_6_fu_450_p2 == WW_fu_258_p2) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_300_p2 = ((p_1_fu_294_p2 == grp_fu_264_p2) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_283_p2 = (($signed(i_iter_cast_fu_279_p1) < $signed(grp_fu_268_p2)) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_288_p2 = ((p_reg_230 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_1_fu_596_p2 = ((trunc_ln65_fu_592_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_363_p2 = (($signed(pin_row_9_fu_356_p3) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_618_p2 = ((trunc_ln65_fu_592_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_375_p2 = ((row0_buffer_write_1_fu_342_p3 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_394_p2 = ((row2_buffer_write_1_fu_328_p3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln76_1_fu_416_p2 = (($signed(pin_col_3_fu_349_p3) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_410_p2 = (($signed(tmp_11_fu_400_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_438_p2 = (($signed(tmp_12_fu_428_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_456_p2 = ((pin_col_3_fu_349_p3 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_462_p2 = ((pin_col_3_fu_349_p3 != 32'd1) ? 1'b1 : 1'b0);

assign or_ln65_fu_602_p2 = (icmp_ln65_reg_989_pp0_iter35_reg | icmp_ln65_1_fu_596_p2);

assign or_ln66_fu_607_p2 = (icmp_ln65_reg_989_pp0_iter35_reg | icmp_ln65_1_fu_596_p2);

assign or_ln85_fu_696_p2 = (icmp_ln85_reg_1031_pp0_iter36_reg | and_ln76_reg_1015_pp0_iter36_reg);

assign or_ln86_fu_714_p2 = (icmp_ln86_reg_1036_pp0_iter36_reg | and_ln76_reg_1015_pp0_iter36_reg);

assign p0_4_fu_707_p3 = ((or_ln85_fu_696_p2[0:0] == 1'b1) ? select_ln85_fu_700_p3 : p2_4_reg_1072);

assign p0_5_fu_630_p3 = ((and_ln66_fu_624_p2[0:0] == 1'b1) ? buffer1_i_load_reg_1058_pp0_iter35_reg : buffer2_i_load_reg_1065_pp0_iter35_reg);

assign p1_3_fu_725_p3 = ((or_ln86_fu_714_p2[0:0] == 1'b1) ? select_ln86_fu_718_p3 : p2_4_reg_1072);

assign p2_4_fu_636_p3 = ((or_ln65_fu_602_p2[0:0] == 1'b1) ? buffer0_i_load_reg_1051_pp0_iter35_reg : p0_5_fu_630_p3);

assign p3_3_fu_739_p3 = ((or_ln85_fu_696_p2[0:0] == 1'b1) ? select_ln89_fu_732_p3 : p5_2_reg_1080);

assign p3_4_fu_643_p3 = ((and_ln66_fu_624_p2[0:0] == 1'b1) ? buffer2_i_load_reg_1065_pp0_iter35_reg : buffer0_i_load_reg_1051_pp0_iter35_reg);

assign p4_2_fu_753_p3 = ((or_ln86_fu_714_p2[0:0] == 1'b1) ? select_ln90_fu_746_p3 : p5_2_reg_1080);

assign p5_2_fu_649_p3 = ((or_ln65_fu_602_p2[0:0] == 1'b1) ? buffer1_i_load_reg_1058_pp0_iter35_reg : p3_4_fu_643_p3);

assign p6_2_fu_767_p3 = ((or_ln85_fu_696_p2[0:0] == 1'b1) ? select_ln93_fu_760_p3 : p8_2_reg_1088);

assign p6_3_fu_656_p3 = ((and_ln66_fu_624_p2[0:0] == 1'b1) ? buffer0_i_load_reg_1051_pp0_iter35_reg : buffer1_i_load_reg_1058_pp0_iter35_reg);

assign p7_2_fu_781_p3 = ((or_ln86_fu_714_p2[0:0] == 1'b1) ? select_ln94_fu_774_p3 : p8_2_reg_1088);

assign p8_2_fu_662_p3 = ((or_ln65_fu_602_p2[0:0] == 1'b1) ? buffer2_i_load_reg_1065_pp0_iter35_reg : p6_3_fu_656_p3);

assign p_1_fu_294_p2 = (p_reg_230 + 32'd1);

assign p_2_fu_305_p3 = ((icmp_ln129_fu_300_p2[0:0] == 1'b1) ? 32'd0 : p_1_fu_294_p2);

assign pin_col_3_fu_349_p3 = ((icmp_ln47_reg_970[0:0] == 1'b1) ? 32'd0 : pin_col_fu_86);

assign pin_col_5_fu_543_p3 = ((icmp_ln113_fu_468_p2[0:0] == 1'b1) ? 32'd0 : pin_col_6_fu_450_p2);

assign pin_col_6_fu_450_p2 = (pin_col_3_fu_349_p3 + 32'd1);

assign pin_row_10_fu_473_p2 = (pin_row_9_fu_356_p3 + 32'd1);

assign pin_row_11_fu_551_p3 = ((icmp_ln113_fu_468_p2[0:0] == 1'b1) ? pin_row_10_fu_473_p2 : pin_row_9_fu_356_p3);

assign pin_row_12_fu_559_p3 = ((and_ln69_fu_501_p2[0:0] == 1'b1) ? pin_row_10_fu_473_p2 : pin_row_11_fu_551_p3);

assign pin_row_9_fu_356_p3 = ((icmp_ln47_reg_970[0:0] == 1'b1) ? 32'd0 : pin_row_fu_90);

assign row0_buffer_write_1_fu_342_p3 = ((icmp_ln47_reg_970[0:0] == 1'b1) ? 32'd1 : row0_buffer_write_fu_82);

assign row0_buffer_write_2_fu_483_p2 = (row2_buffer_write_2_fu_388_p2 ^ 1'd1);

assign row0_buffer_write_3_fu_535_p3 = ((and_ln69_fu_501_p2[0:0] == 1'b1) ? 32'd0 : select_ln113_1_fu_527_p3);

assign row1_buffer_write_1_fu_335_p3 = ((icmp_ln47_reg_970[0:0] == 1'b1) ? 32'd0 : row1_buffer_write_fu_78);

assign row1_buffer_write_2_fu_519_p3 = ((icmp_ln113_fu_468_p2[0:0] == 1'b1) ? zext_ln69_fu_515_p1 : row1_buffer_write_1_fu_335_p3);

assign row2_buffer_write_1_fu_328_p3 = ((icmp_ln47_reg_970[0:0] == 1'b1) ? 32'd0 : row2_buffer_write_fu_74);

assign row2_buffer_write_2_fu_388_p2 = ((row1_buffer_write_1_fu_335_p3 != 32'd0) ? 1'b1 : 1'b0);

assign row2_buffer_write_3_fu_507_p3 = ((and_ln69_fu_501_p2[0:0] == 1'b1) ? row2_buffer_write_1_fu_328_p3 : select_ln113_fu_493_p3);

assign select_ln113_1_fu_527_p3 = ((icmp_ln113_fu_468_p2[0:0] == 1'b1) ? zext_ln30_fu_489_p1 : row0_buffer_write_1_fu_342_p3);

assign select_ln113_fu_493_p3 = ((icmp_ln113_fu_468_p2[0:0] == 1'b1) ? zext_ln123_fu_479_p1 : row2_buffer_write_1_fu_328_p3);

assign select_ln85_fu_700_p3 = ((and_ln76_reg_1015_pp0_iter36_reg[0:0] == 1'b1) ? p1_fu_70 : p0_fu_66);

assign select_ln86_fu_718_p3 = ((and_ln76_reg_1015_pp0_iter36_reg[0:0] == 1'b1) ? p2_fu_94 : p1_fu_70);

assign select_ln89_fu_732_p3 = ((and_ln76_reg_1015_pp0_iter36_reg[0:0] == 1'b1) ? p4_fu_102 : p3_fu_98);

assign select_ln90_fu_746_p3 = ((and_ln76_reg_1015_pp0_iter36_reg[0:0] == 1'b1) ? p5_fu_106 : p4_fu_102);

assign select_ln93_fu_760_p3 = ((and_ln76_reg_1015_pp0_iter36_reg[0:0] == 1'b1) ? p7_fu_114 : p6_fu_110);

assign select_ln94_fu_774_p3 = ((and_ln76_reg_1015_pp0_iter36_reg[0:0] == 1'b1) ? p8_fu_118 : p7_fu_114);

assign start_out = real_start;

assign str_cvt_mul_din = {{{{{{{{{p8_2_reg_1088}, {p7_2_fu_781_p3}}, {p6_2_fu_767_p3}}, {p5_2_reg_1080}}, {p4_2_fu_753_p3}}, {p3_3_fu_739_p3}}, {p2_4_reg_1072}}, {p1_3_fu_725_p3}}, {p0_4_fu_707_p3}};

assign tmp_11_fu_400_p4 = {{pin_row_9_fu_356_p3[31:1]}};

assign tmp_12_fu_428_p4 = {{pin_col_3_fu_349_p3[31:1]}};

assign trunc_ln65_fu_592_p1 = grp_fu_369_p2[2:0];

assign xor_ln66_fu_612_p2 = (or_ln66_fu_607_p2 ^ 1'd1);

assign zext_ln123_fu_479_p1 = row2_buffer_write_2_fu_388_p2;

assign zext_ln30_fu_489_p1 = row0_buffer_write_2_fu_483_p2;

assign zext_ln69_fu_515_p1 = and_ln69_fu_501_p2;

assign zext_ln79_fu_381_p1 = pin_col_3_fu_349_p3;

always @ (posedge ap_clk) begin
    zext_ln79_reg_998[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //k_conv2D_cvt

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_mul_1_2_8_9_128_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_w_V_V_dout,
        in_w_V_V_empty_n,
        in_w_V_V_read,
        in_x_V_V_dout,
        in_x_V_V_empty_n,
        in_x_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_pp0_stage1 = 7'd8;
parameter    ap_ST_fsm_pp0_stage2 = 7'd16;
parameter    ap_ST_fsm_pp0_stage3 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_w_V_V_dout;
input   in_w_V_V_empty_n;
output   in_w_V_V_read;
input  [15:0] in_x_V_V_dout;
input   in_x_V_V_empty_n;
output   in_x_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_w_V_V_read;
reg in_x_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_w_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln176_fu_308_p2;
reg    in_x_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_phi_ln213_phi_fu_196_p4;
wire   [0:0] icmp_ln216_fu_318_p2;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] phi_ln213_reg_192;
reg   [0:0] phi_ln213_reg_192_pp0_iter1_reg;
reg   [0:0] icmp_ln241_reg_530;
reg   [0:0] icmp_ln241_reg_530_pp0_iter1_reg;
reg   [0:0] icmp_ln233_reg_526;
reg   [0:0] icmp_ln233_reg_526_pp0_iter1_reg;
reg   [31:0] free_slots_reg_180;
reg    ap_predicate_op36_read_state3;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
reg    ap_predicate_op93_write_state11;
reg    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] num_reads_reg_204;
reg   [31:0] swap_reg_216;
reg   [31:0] free_slots_1_reg_228;
reg   [31:0] num_reads_1_reg_241;
reg   [31:0] swap_1_reg_253;
reg   [31:0] swap_1_reg_253_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] free_slots_2165_reg_276;
wire   [3:0] p_1_fu_302_p2;
reg   [3:0] p_1_reg_469;
reg    ap_block_state2;
wire   [15:0] zext_ln213_fu_314_p1;
reg   [15:0] zext_ln213_reg_478;
reg   [0:0] icmp_ln216_reg_483;
wire   [7:0] x_V_0_fu_324_p1;
reg   [7:0] x_V_0_reg_487;
reg   [7:0] x_V_1_reg_492;
wire   [31:0] zext_ln200_fu_338_p1;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] num_reads_2_fu_342_p2;
wire   [0:0] icmp_ln225_fu_348_p2;
reg   [0:0] icmp_ln225_reg_507;
wire   [0:0] icmp_ln247_fu_365_p2;
reg   [0:0] icmp_ln247_reg_516;
wire   [7:0] xs_V_q0;
reg   [7:0] op1_V_1_reg_521;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln233_fu_399_p2;
wire   [0:0] icmp_ln241_fu_412_p2;
wire   [0:0] xor_ln213_fu_423_p2;
reg   [0:0] xor_ln213_reg_534;
wire   [15:0] ret_fu_432_p2;
reg   [15:0] ret_reg_539;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] xs_V_address0;
reg    xs_V_ce0;
reg    xs_V_we0;
reg   [0:0] xs_V_address1;
reg    xs_V_ce1;
reg    xs_V_we1;
wire   [7:0] xs_V_q1;
reg   [0:0] ys_V_address0;
reg    ys_V_ce0;
reg    ys_V_we0;
reg   [15:0] ys_V_d0;
wire   [15:0] ys_V_q0;
reg    ys_V_ce1;
wire   [15:0] ys_V_q1;
wire    grp_last_swap_8_s_fu_288_ap_start;
wire    grp_last_swap_8_s_fu_288_ap_done;
wire    grp_last_swap_8_s_fu_288_ap_idle;
wire    grp_last_swap_8_s_fu_288_ap_ready;
reg    grp_last_swap_8_s_fu_288_ap_ce;
wire   [0:0] grp_last_swap_8_s_fu_288_input_r_address0;
wire    grp_last_swap_8_s_fu_288_input_r_ce0;
wire   [0:0] grp_last_swap_8_s_fu_288_input_r_address1;
wire    grp_last_swap_8_s_fu_288_input_r_ce1;
wire   [15:0] grp_last_swap_8_s_fu_288_ap_return_0;
wire   [15:0] grp_last_swap_8_s_fu_288_ap_return_1;
reg    ap_predicate_op88_call_state10;
reg    ap_predicate_op89_call_state11;
wire    ap_block_state6_pp0_stage3_iter0_ignore_call0;
wire    ap_block_state10_pp0_stage3_iter1_ignore_call0;
wire    ap_block_pp0_stage3_11001_ignoreCallOp88;
reg    ap_block_state3_pp0_stage0_iter0_ignore_call0;
wire    ap_block_state7_pp0_stage0_iter1_ignore_call0;
reg    ap_block_state11_pp0_stage0_iter2_ignore_call0;
reg    ap_block_pp0_stage0_11001_ignoreCallOp89;
wire    swap_2_first_swap_8_s_fu_295_ap_start;
wire    swap_2_first_swap_8_s_fu_295_ap_ready;
wire   [0:0] swap_2_first_swap_8_s_fu_295_output_r_address0;
wire    swap_2_first_swap_8_s_fu_295_output_r_ce0;
wire    swap_2_first_swap_8_s_fu_295_output_r_we0;
wire   [7:0] swap_2_first_swap_8_s_fu_295_output_r_d0;
wire   [0:0] swap_2_first_swap_8_s_fu_295_output_r_address1;
wire    swap_2_first_swap_8_s_fu_295_output_r_ce1;
wire    swap_2_first_swap_8_s_fu_295_output_r_we1;
wire   [7:0] swap_2_first_swap_8_s_fu_295_output_r_d1;
wire   [0:0] swap_2_first_swap_8_s_fu_295_ap_return;
reg   [3:0] p_reg_169;
reg    ap_block_state1;
wire    ap_CS_fsm_state12;
reg   [31:0] ap_phi_mux_free_slots_phi_fu_184_p4;
reg   [31:0] ap_phi_mux_num_reads_phi_fu_208_p4;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_mux_swap_phi_fu_220_p4;
reg   [31:0] ap_phi_reg_pp0_iter0_free_slots_1_reg_228;
reg   [31:0] ap_phi_reg_pp0_iter0_num_reads_1_reg_241;
reg   [31:0] ap_phi_reg_pp0_iter0_swap_1_reg_253;
reg   [0:0] ap_phi_mux_cmp51167_phi_fu_268_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_cmp51167_reg_265;
wire   [31:0] ap_phi_reg_pp0_iter0_free_slots_2165_reg_276;
wire   [31:0] free_slots_3_fu_405_p2;
reg    grp_last_swap_8_s_fu_288_ap_start_reg;
reg    ap_predicate_op88_call_state10_state9;
wire    ap_block_pp0_stage3;
reg    swap_2_first_swap_8_s_fu_295_ap_start_reg;
reg    ap_predicate_op45_call_state4_state3;
wire   [63:0] select_ln225_cast_fu_360_p1;
wire    ap_block_pp0_stage2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] xor_ln225_fu_354_p2;
wire   [7:0] trunc_ln233_fu_371_p1;
wire   [23:0] tmp_2_fu_381_p4;
wire   [7:0] or_ln233_fu_375_p2;
wire   [31:0] or_ln_fu_391_p3;
wire   [0:0] and_ln247_fu_418_p2;
wire   [7:0] ret_fu_432_p0;
wire   [7:0] ret_fu_432_p1;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] ret_fu_432_p00;
reg    ap_condition_583;
reg    ap_condition_385;
reg    ap_condition_388;
reg    ap_condition_215;
reg    ap_condition_595;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_last_swap_8_s_fu_288_ap_start_reg = 1'b0;
#0 swap_2_first_swap_8_s_fu_295_ap_start_reg = 1'b0;
end

top_mul_1_2_8_9_128_s_xs_V #(
    .DataWidth( 8 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
xs_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xs_V_address0),
    .ce0(xs_V_ce0),
    .we0(xs_V_we0),
    .d0(swap_2_first_swap_8_s_fu_295_output_r_d0),
    .q0(xs_V_q0),
    .address1(xs_V_address1),
    .ce1(xs_V_ce1),
    .we1(xs_V_we1),
    .d1(swap_2_first_swap_8_s_fu_295_output_r_d1),
    .q1(xs_V_q1)
);

top_mul_1_2_8_9_128_s_ys_V #(
    .DataWidth( 16 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
ys_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ys_V_address0),
    .ce0(ys_V_ce0),
    .we0(ys_V_we0),
    .d0(ys_V_d0),
    .q0(ys_V_q0),
    .address1(grp_last_swap_8_s_fu_288_input_r_address1),
    .ce1(ys_V_ce1),
    .q1(ys_V_q1)
);

top_last_swap_8_s grp_last_swap_8_s_fu_288(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_last_swap_8_s_fu_288_ap_start),
    .ap_done(grp_last_swap_8_s_fu_288_ap_done),
    .ap_idle(grp_last_swap_8_s_fu_288_ap_idle),
    .ap_ready(grp_last_swap_8_s_fu_288_ap_ready),
    .ap_ce(grp_last_swap_8_s_fu_288_ap_ce),
    .swap(swap_1_reg_253_pp0_iter1_reg),
    .input_r_address0(grp_last_swap_8_s_fu_288_input_r_address0),
    .input_r_ce0(grp_last_swap_8_s_fu_288_input_r_ce0),
    .input_r_q0(ys_V_q0),
    .input_r_address1(grp_last_swap_8_s_fu_288_input_r_address1),
    .input_r_ce1(grp_last_swap_8_s_fu_288_input_r_ce1),
    .input_r_q1(ys_V_q1),
    .ap_return_0(grp_last_swap_8_s_fu_288_ap_return_0),
    .ap_return_1(grp_last_swap_8_s_fu_288_ap_return_1)
);

top_first_swap_8_s swap_2_first_swap_8_s_fu_295(
    .ap_start(swap_2_first_swap_8_s_fu_295_ap_start),
    .ap_ready(swap_2_first_swap_8_s_fu_295_ap_ready),
    .p_read(x_V_0_reg_487),
    .p_read1(x_V_1_reg_492),
    .output_r_address0(swap_2_first_swap_8_s_fu_295_output_r_address0),
    .output_r_ce0(swap_2_first_swap_8_s_fu_295_output_r_ce0),
    .output_r_we0(swap_2_first_swap_8_s_fu_295_output_r_we0),
    .output_r_d0(swap_2_first_swap_8_s_fu_295_output_r_d0),
    .output_r_address1(swap_2_first_swap_8_s_fu_295_output_r_address1),
    .output_r_ce1(swap_2_first_swap_8_s_fu_295_output_r_ce1),
    .output_r_we1(swap_2_first_swap_8_s_fu_295_output_r_we1),
    .output_r_d1(swap_2_first_swap_8_s_fu_295_output_r_d1),
    .ap_return(swap_2_first_swap_8_s_fu_295_ap_return)
);

top_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U22(
    .din0(ret_fu_432_p0),
    .din1(ret_fu_432_p1),
    .dout(ret_fu_432_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_last_swap_8_s_fu_288_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op88_call_state10_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_last_swap_8_s_fu_288_ap_start_reg <= 1'b1;
        end else if ((grp_last_swap_8_s_fu_288_ap_ready == 1'b1)) begin
            grp_last_swap_8_s_fu_288_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        swap_2_first_swap_8_s_fu_295_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op45_call_state4_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            swap_2_first_swap_8_s_fu_295_ap_start_reg <= 1'b1;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (swap_2_first_swap_8_s_fu_295_ap_ready == 1'b1))) begin
            swap_2_first_swap_8_s_fu_295_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_583)) begin
        if ((icmp_ln216_reg_483 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_free_slots_1_reg_228 <= free_slots_reg_180;
        end else if ((icmp_ln216_reg_483 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_free_slots_1_reg_228 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_583)) begin
        if ((icmp_ln216_reg_483 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_num_reads_1_reg_241 <= ap_phi_mux_num_reads_phi_fu_208_p4;
        end else if ((icmp_ln216_reg_483 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_num_reads_1_reg_241 <= num_reads_2_fu_342_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_583)) begin
        if ((icmp_ln216_reg_483 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_swap_1_reg_253 <= ap_phi_mux_swap_phi_fu_220_p4;
        end else if ((icmp_ln216_reg_483 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_swap_1_reg_253 <= zext_ln200_fu_338_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_215)) begin
        if ((1'b1 == ap_condition_388)) begin
            free_slots_2165_reg_276 <= free_slots_3_fu_405_p2;
        end else if ((1'b1 == ap_condition_385)) begin
            free_slots_2165_reg_276 <= 32'd2;
        end else if ((1'b1 == 1'b1)) begin
            free_slots_2165_reg_276 <= ap_phi_reg_pp0_iter0_free_slots_2165_reg_276;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        free_slots_reg_180 <= free_slots_2165_reg_276;
    end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        free_slots_reg_180 <= 32'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        num_reads_reg_204 <= num_reads_1_reg_241;
    end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        num_reads_reg_204 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_reg_169 <= p_1_reg_469;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_reg_169 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln213_reg_192 <= xor_ln213_reg_534;
    end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln213_reg_192 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        swap_reg_216 <= swap_1_reg_253;
    end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        swap_reg_216 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        free_slots_1_reg_228 <= ap_phi_reg_pp0_iter0_free_slots_1_reg_228;
        num_reads_1_reg_241 <= ap_phi_reg_pp0_iter0_num_reads_1_reg_241;
        swap_1_reg_253 <= ap_phi_reg_pp0_iter0_swap_1_reg_253;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_phi_ln213_phi_fu_196_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln216_reg_483 <= icmp_ln216_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln225_reg_507 <= icmp_ln225_fu_348_p2;
        icmp_ln247_reg_516 <= icmp_ln247_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln233_reg_526 <= icmp_ln233_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln233_reg_526_pp0_iter1_reg <= icmp_ln233_reg_526;
        icmp_ln241_reg_530_pp0_iter1_reg <= icmp_ln241_reg_530;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln233_fu_399_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln241_reg_530 <= icmp_ln241_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        op1_V_1_reg_521 <= xs_V_q0;
        xor_ln213_reg_534 <= xor_ln213_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_1_reg_469 <= p_1_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln213_reg_192_pp0_iter1_reg <= phi_ln213_reg_192;
        ret_reg_539 <= ret_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        swap_1_reg_253_pp0_iter1_reg <= swap_1_reg_253;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_318_p2 == 1'd1) & (ap_phi_mux_phi_ln213_phi_fu_196_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_0_reg_487 <= x_V_0_fu_324_p1;
        x_V_1_reg_492 <= {{in_x_V_V_dout[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln213_reg_478[7 : 0] <= zext_ln213_fu_314_p1[7 : 0];
    end
end

always @ (*) begin
    if ((phi_ln213_reg_192 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192 == 1'd1) & (icmp_ln241_fu_412_p2 == 1'd0) & (icmp_ln233_fu_399_p2 == 1'd0))) begin
        ap_phi_mux_cmp51167_phi_fu_268_p4 = 1'd0;
    end else if ((((phi_ln213_reg_192 == 1'd1) & (icmp_ln233_fu_399_p2 == 1'd1)) | ((phi_ln213_reg_192 == 1'd1) & (icmp_ln241_fu_412_p2 == 1'd1)))) begin
        ap_phi_mux_cmp51167_phi_fu_268_p4 = 1'd1;
    end else begin
        ap_phi_mux_cmp51167_phi_fu_268_p4 = ap_phi_reg_pp0_iter0_cmp51167_reg_265;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_free_slots_phi_fu_184_p4 = free_slots_2165_reg_276;
    end else begin
        ap_phi_mux_free_slots_phi_fu_184_p4 = free_slots_reg_180;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_num_reads_phi_fu_208_p4 = num_reads_1_reg_241;
    end else begin
        ap_phi_mux_num_reads_phi_fu_208_p4 = num_reads_reg_204;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_phi_ln213_phi_fu_196_p4 = xor_ln213_reg_534;
    end else begin
        ap_phi_mux_phi_ln213_phi_fu_196_p4 = phi_ln213_reg_192;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_swap_phi_fu_220_p4 = swap_1_reg_253;
    end else begin
        ap_phi_mux_swap_phi_fu_220_p4 = swap_reg_216;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp89) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp88) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_last_swap_8_s_fu_288_ap_ce = 1'b1;
    end else begin
        grp_last_swap_8_s_fu_288_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_w_V_V_blk_n = in_w_V_V_empty_n;
    end else begin
        in_w_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_w_V_V_read = 1'b1;
    end else begin
        in_w_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_fu_318_p2 == 1'd1) & (ap_phi_mux_phi_ln213_phi_fu_196_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_x_V_V_blk_n = in_x_V_V_empty_n;
    end else begin
        in_x_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_read_state3 == 1'b1))) begin
        in_x_V_V_read = 1'b1;
    end else begin
        in_x_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln241_reg_530_pp0_iter1_reg == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)) | ((icmp_ln233_reg_526_pp0_iter1_reg == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1))))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op93_write_state11 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            xs_V_address0 = select_ln225_cast_fu_360_p1;
        end else if ((1'b1 == ap_condition_595)) begin
            xs_V_address0 = swap_2_first_swap_8_s_fu_295_output_r_address0;
        end else begin
            xs_V_address0 = 'bx;
        end
    end else begin
        xs_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            xs_V_address1 = 64'd1;
        end else if ((1'b1 == ap_condition_595)) begin
            xs_V_address1 = swap_2_first_swap_8_s_fu_295_output_r_address1;
        end else begin
            xs_V_address1 = 'bx;
        end
    end else begin
        xs_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            xs_V_ce0 = 1'b1;
        end else if ((1'b1 == ap_condition_595)) begin
            xs_V_ce0 = swap_2_first_swap_8_s_fu_295_output_r_ce0;
        end else begin
            xs_V_ce0 = 1'b0;
        end
    end else begin
        xs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            xs_V_ce1 = 1'b1;
        end else if ((1'b1 == ap_condition_595)) begin
            xs_V_ce1 = swap_2_first_swap_8_s_fu_295_output_r_ce1;
        end else begin
            xs_V_ce1 = 1'b0;
        end
    end else begin
        xs_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln216_reg_483 == 1'd1))) begin
        xs_V_we0 = swap_2_first_swap_8_s_fu_295_output_r_we0;
    end else begin
        xs_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln216_reg_483 == 1'd1))) begin
        xs_V_we1 = swap_2_first_swap_8_s_fu_295_output_r_we1;
    end else begin
        xs_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd1))) begin
        ys_V_address0 = 64'd0;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd0)))) begin
        ys_V_address0 = 64'd1;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op89_call_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_predicate_op88_call_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        ys_V_address0 = grp_last_swap_8_s_fu_288_input_r_address0;
    end else begin
        ys_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        ys_V_ce0 = 1'b1;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op89_call_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_predicate_op88_call_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        ys_V_ce0 = grp_last_swap_8_s_fu_288_input_r_ce0;
    end else begin
        ys_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op89_call_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_predicate_op88_call_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        ys_V_ce1 = grp_last_swap_8_s_fu_288_input_r_ce1;
    end else begin
        ys_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ys_V_d0 = 16'd0;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd0)))) begin
        ys_V_d0 = ret_reg_539;
    end else begin
        ys_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln233_reg_526 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln225_reg_507 == 1'd0)))) begin
        ys_V_we0 = 1'b1;
    end else begin
        ys_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0)) & (icmp_ln176_fu_308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((phi_ln213_reg_192 == 1'd0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((phi_ln213_reg_192 == 1'd0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln247_fu_418_p2 = (icmp_ln247_reg_516 & ap_phi_mux_cmp51167_phi_fu_268_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (out_V_V_full_n == 1'b0) & (ap_predicate_op93_write_state11 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (in_x_V_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (out_V_V_full_n == 1'b0) & (ap_predicate_op93_write_state11 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (in_x_V_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp89 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (out_V_V_full_n == 1'b0) & (ap_predicate_op93_write_state11 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (in_x_V_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (out_V_V_full_n == 1'b0) & (ap_predicate_op93_write_state11 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (in_x_V_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp88 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter2 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op93_write_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter2_ignore_call0 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op93_write_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln176_fu_308_p2 == 1'd0) & (in_w_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = ((in_x_V_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0_ignore_call0 = ((in_x_V_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_215 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_385 = (((phi_ln213_reg_192 == 1'd1) & (icmp_ln233_fu_399_p2 == 1'd1)) | ((phi_ln213_reg_192 == 1'd1) & (icmp_ln241_fu_412_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_388 = ((phi_ln213_reg_192 == 1'd1) & (icmp_ln241_fu_412_p2 == 1'd0) & (icmp_ln233_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_583 = ((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_595 = ((phi_ln213_reg_192 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln216_reg_483 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_cmp51167_reg_265 = 'bx;

assign ap_phi_reg_pp0_iter0_free_slots_2165_reg_276 = 'bx;

always @ (*) begin
    ap_predicate_op36_read_state3 = ((icmp_ln216_fu_318_p2 == 1'd1) & (ap_phi_mux_phi_ln213_phi_fu_196_p4 == 1'd1));
end

always @ (*) begin
    ap_predicate_op45_call_state4_state3 = ((icmp_ln216_fu_318_p2 == 1'd1) & (ap_phi_mux_phi_ln213_phi_fu_196_p4 == 1'd1));
end

always @ (*) begin
    ap_predicate_op88_call_state10 = (((icmp_ln233_reg_526 == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)) | ((icmp_ln241_reg_530 == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op88_call_state10_state9 = (((icmp_ln233_reg_526 == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)) | ((icmp_ln241_reg_530 == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op89_call_state11 = (((icmp_ln241_reg_530_pp0_iter1_reg == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)) | ((icmp_ln233_reg_526_pp0_iter1_reg == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)));
end

always @ (*) begin
    ap_predicate_op93_write_state11 = (((icmp_ln241_reg_530_pp0_iter1_reg == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)) | ((icmp_ln233_reg_526_pp0_iter1_reg == 1'd1) & (phi_ln213_reg_192_pp0_iter1_reg == 1'd1)));
end

assign ap_ready = internal_ap_ready;

assign free_slots_3_fu_405_p2 = (free_slots_1_reg_228 + 32'd1);

assign grp_last_swap_8_s_fu_288_ap_start = grp_last_swap_8_s_fu_288_ap_start_reg;

assign icmp_ln176_fu_308_p2 = ((p_reg_169 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_318_p2 = ((ap_phi_mux_free_slots_phi_fu_184_p4 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_348_p2 = ((ap_phi_reg_pp0_iter0_free_slots_1_reg_228 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_399_p2 = ((or_ln_fu_391_p3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_412_p2 = ((free_slots_3_fu_405_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln247_fu_365_p2 = ((ap_phi_reg_pp0_iter0_num_reads_1_reg_241 == 32'd128) ? 1'b1 : 1'b0);

assign num_reads_2_fu_342_p2 = (ap_phi_mux_num_reads_phi_fu_208_p4 + 32'd1);

assign or_ln233_fu_375_p2 = (xs_V_q1 | trunc_ln233_fu_371_p1);

assign or_ln_fu_391_p3 = {{tmp_2_fu_381_p4}, {or_ln233_fu_375_p2}};

assign out_V_V_din = {{grp_last_swap_8_s_fu_288_ap_return_1}, {grp_last_swap_8_s_fu_288_ap_return_0}};

assign p_1_fu_302_p2 = (p_reg_169 + 4'd1);

assign ret_fu_432_p0 = ret_fu_432_p00;

assign ret_fu_432_p00 = op1_V_1_reg_521;

assign ret_fu_432_p1 = zext_ln213_reg_478;

assign select_ln225_cast_fu_360_p1 = xor_ln225_fu_354_p2;

assign start_out = real_start;

assign swap_2_first_swap_8_s_fu_295_ap_start = swap_2_first_swap_8_s_fu_295_ap_start_reg;

assign tmp_2_fu_381_p4 = {{free_slots_1_reg_228[31:8]}};

assign trunc_ln233_fu_371_p1 = free_slots_1_reg_228[7:0];

assign x_V_0_fu_324_p1 = in_x_V_V_dout[7:0];

assign xor_ln213_fu_423_p2 = (1'd1 ^ and_ln247_fu_418_p2);

assign xor_ln225_fu_354_p2 = (icmp_ln225_fu_348_p2 ^ 1'd1);

assign zext_ln200_fu_338_p1 = swap_2_first_swap_8_s_fu_295_ap_return;

assign zext_ln213_fu_314_p1 = in_w_V_V_dout;

always @ (posedge ap_clk) begin
    zext_ln213_reg_478[15:8] <= 8'b00000000;
end

endmodule //top_mul_1_2_8_9_128_s

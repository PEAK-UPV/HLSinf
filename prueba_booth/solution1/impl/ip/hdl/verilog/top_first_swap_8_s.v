// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_first_swap_8_s (
        ap_start,
        ap_ready,
        p_read,
        p_read1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_address1,
        output_r_ce1,
        output_r_we1,
        output_r_d1,
        ap_return
);


input   ap_start;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
output  [0:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [7:0] output_r_d0;
output  [0:0] output_r_address1;
output   output_r_ce1;
output   output_r_we1;
output  [7:0] output_r_d1;
output  [0:0] ap_return;

reg output_r_ce0;
reg output_r_we0;
reg output_r_ce1;
reg output_r_we1;

wire   [0:0] icmp_ln870_fu_53_p2;
wire    ap_ce_reg;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        output_r_ce1 = 1'b1;
    end else begin
        output_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        output_r_we1 = 1'b1;
    end else begin
        output_r_we1 = 1'b0;
    end
end

assign ap_ready = ap_start;

assign ap_return = icmp_ln870_fu_53_p2;

assign icmp_ln870_fu_53_p2 = ((p_read == 8'd0) ? 1'b1 : 1'b0);

assign output_r_address0 = 64'd1;

assign output_r_address1 = 64'd0;

assign output_r_d0 = ((icmp_ln870_fu_53_p2[0:0] == 1'b1) ? 8'd0 : p_read1);

assign output_r_d1 = ((icmp_ln870_fu_53_p2[0:0] == 1'b1) ? p_read1 : p_read);

endmodule //top_first_swap_8_s

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_top,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.430900,HLS_SYN_LAT=4499,HLS_SYN_TPT=3521,HLS_SYN_MEM=34,HLS_SYN_DSP=0,HLS_SYN_FF=6924,HLS_SYN_LUT=13658,HLS_VERSION=2020_2}" *)

module top (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        m_axi_gmem4_AWVALID,
        m_axi_gmem4_AWREADY,
        m_axi_gmem4_AWADDR,
        m_axi_gmem4_AWID,
        m_axi_gmem4_AWLEN,
        m_axi_gmem4_AWSIZE,
        m_axi_gmem4_AWBURST,
        m_axi_gmem4_AWLOCK,
        m_axi_gmem4_AWCACHE,
        m_axi_gmem4_AWPROT,
        m_axi_gmem4_AWQOS,
        m_axi_gmem4_AWREGION,
        m_axi_gmem4_AWUSER,
        m_axi_gmem4_WVALID,
        m_axi_gmem4_WREADY,
        m_axi_gmem4_WDATA,
        m_axi_gmem4_WSTRB,
        m_axi_gmem4_WLAST,
        m_axi_gmem4_WID,
        m_axi_gmem4_WUSER,
        m_axi_gmem4_ARVALID,
        m_axi_gmem4_ARREADY,
        m_axi_gmem4_ARADDR,
        m_axi_gmem4_ARID,
        m_axi_gmem4_ARLEN,
        m_axi_gmem4_ARSIZE,
        m_axi_gmem4_ARBURST,
        m_axi_gmem4_ARLOCK,
        m_axi_gmem4_ARCACHE,
        m_axi_gmem4_ARPROT,
        m_axi_gmem4_ARQOS,
        m_axi_gmem4_ARREGION,
        m_axi_gmem4_ARUSER,
        m_axi_gmem4_RVALID,
        m_axi_gmem4_RREADY,
        m_axi_gmem4_RDATA,
        m_axi_gmem4_RLAST,
        m_axi_gmem4_RID,
        m_axi_gmem4_RUSER,
        m_axi_gmem4_RRESP,
        m_axi_gmem4_BVALID,
        m_axi_gmem4_BREADY,
        m_axi_gmem4_BRESP,
        m_axi_gmem4_BID,
        m_axi_gmem4_BUSER,
        m_axi_gmem5_AWVALID,
        m_axi_gmem5_AWREADY,
        m_axi_gmem5_AWADDR,
        m_axi_gmem5_AWID,
        m_axi_gmem5_AWLEN,
        m_axi_gmem5_AWSIZE,
        m_axi_gmem5_AWBURST,
        m_axi_gmem5_AWLOCK,
        m_axi_gmem5_AWCACHE,
        m_axi_gmem5_AWPROT,
        m_axi_gmem5_AWQOS,
        m_axi_gmem5_AWREGION,
        m_axi_gmem5_AWUSER,
        m_axi_gmem5_WVALID,
        m_axi_gmem5_WREADY,
        m_axi_gmem5_WDATA,
        m_axi_gmem5_WSTRB,
        m_axi_gmem5_WLAST,
        m_axi_gmem5_WID,
        m_axi_gmem5_WUSER,
        m_axi_gmem5_ARVALID,
        m_axi_gmem5_ARREADY,
        m_axi_gmem5_ARADDR,
        m_axi_gmem5_ARID,
        m_axi_gmem5_ARLEN,
        m_axi_gmem5_ARSIZE,
        m_axi_gmem5_ARBURST,
        m_axi_gmem5_ARLOCK,
        m_axi_gmem5_ARCACHE,
        m_axi_gmem5_ARPROT,
        m_axi_gmem5_ARQOS,
        m_axi_gmem5_ARREGION,
        m_axi_gmem5_ARUSER,
        m_axi_gmem5_RVALID,
        m_axi_gmem5_RREADY,
        m_axi_gmem5_RDATA,
        m_axi_gmem5_RLAST,
        m_axi_gmem5_RID,
        m_axi_gmem5_RUSER,
        m_axi_gmem5_RRESP,
        m_axi_gmem5_BVALID,
        m_axi_gmem5_BREADY,
        m_axi_gmem5_BRESP,
        m_axi_gmem5_BID,
        m_axi_gmem5_BUSER,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM3_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_USER_VALUE = 0;
parameter    C_M_AXI_GMEM3_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM3_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM4_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM4_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM4_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM4_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_USER_VALUE = 0;
parameter    C_M_AXI_GMEM4_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM4_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM5_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM5_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM5_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM5_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM5_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM5_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM5_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM5_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM5_USER_VALUE = 0;
parameter    C_M_AXI_GMEM5_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM5_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM3_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM4_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM5_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (512 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_AWADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_AWID;
output  [7:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [C_M_AXI_GMEM3_AWUSER_WIDTH - 1:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_WDATA;
output  [C_M_AXI_GMEM3_WSTRB_WIDTH - 1:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_WID;
output  [C_M_AXI_GMEM3_WUSER_WIDTH - 1:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_ARADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_ARID;
output  [7:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [C_M_AXI_GMEM3_ARUSER_WIDTH - 1:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_RID;
input  [C_M_AXI_GMEM3_RUSER_WIDTH - 1:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_BID;
input  [C_M_AXI_GMEM3_BUSER_WIDTH - 1:0] m_axi_gmem3_BUSER;
output   m_axi_gmem4_AWVALID;
input   m_axi_gmem4_AWREADY;
output  [C_M_AXI_GMEM4_ADDR_WIDTH - 1:0] m_axi_gmem4_AWADDR;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_AWID;
output  [7:0] m_axi_gmem4_AWLEN;
output  [2:0] m_axi_gmem4_AWSIZE;
output  [1:0] m_axi_gmem4_AWBURST;
output  [1:0] m_axi_gmem4_AWLOCK;
output  [3:0] m_axi_gmem4_AWCACHE;
output  [2:0] m_axi_gmem4_AWPROT;
output  [3:0] m_axi_gmem4_AWQOS;
output  [3:0] m_axi_gmem4_AWREGION;
output  [C_M_AXI_GMEM4_AWUSER_WIDTH - 1:0] m_axi_gmem4_AWUSER;
output   m_axi_gmem4_WVALID;
input   m_axi_gmem4_WREADY;
output  [C_M_AXI_GMEM4_DATA_WIDTH - 1:0] m_axi_gmem4_WDATA;
output  [C_M_AXI_GMEM4_WSTRB_WIDTH - 1:0] m_axi_gmem4_WSTRB;
output   m_axi_gmem4_WLAST;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_WID;
output  [C_M_AXI_GMEM4_WUSER_WIDTH - 1:0] m_axi_gmem4_WUSER;
output   m_axi_gmem4_ARVALID;
input   m_axi_gmem4_ARREADY;
output  [C_M_AXI_GMEM4_ADDR_WIDTH - 1:0] m_axi_gmem4_ARADDR;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_ARID;
output  [7:0] m_axi_gmem4_ARLEN;
output  [2:0] m_axi_gmem4_ARSIZE;
output  [1:0] m_axi_gmem4_ARBURST;
output  [1:0] m_axi_gmem4_ARLOCK;
output  [3:0] m_axi_gmem4_ARCACHE;
output  [2:0] m_axi_gmem4_ARPROT;
output  [3:0] m_axi_gmem4_ARQOS;
output  [3:0] m_axi_gmem4_ARREGION;
output  [C_M_AXI_GMEM4_ARUSER_WIDTH - 1:0] m_axi_gmem4_ARUSER;
input   m_axi_gmem4_RVALID;
output   m_axi_gmem4_RREADY;
input  [C_M_AXI_GMEM4_DATA_WIDTH - 1:0] m_axi_gmem4_RDATA;
input   m_axi_gmem4_RLAST;
input  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_RID;
input  [C_M_AXI_GMEM4_RUSER_WIDTH - 1:0] m_axi_gmem4_RUSER;
input  [1:0] m_axi_gmem4_RRESP;
input   m_axi_gmem4_BVALID;
output   m_axi_gmem4_BREADY;
input  [1:0] m_axi_gmem4_BRESP;
input  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_BID;
input  [C_M_AXI_GMEM4_BUSER_WIDTH - 1:0] m_axi_gmem4_BUSER;
output   m_axi_gmem5_AWVALID;
input   m_axi_gmem5_AWREADY;
output  [C_M_AXI_GMEM5_ADDR_WIDTH - 1:0] m_axi_gmem5_AWADDR;
output  [C_M_AXI_GMEM5_ID_WIDTH - 1:0] m_axi_gmem5_AWID;
output  [7:0] m_axi_gmem5_AWLEN;
output  [2:0] m_axi_gmem5_AWSIZE;
output  [1:0] m_axi_gmem5_AWBURST;
output  [1:0] m_axi_gmem5_AWLOCK;
output  [3:0] m_axi_gmem5_AWCACHE;
output  [2:0] m_axi_gmem5_AWPROT;
output  [3:0] m_axi_gmem5_AWQOS;
output  [3:0] m_axi_gmem5_AWREGION;
output  [C_M_AXI_GMEM5_AWUSER_WIDTH - 1:0] m_axi_gmem5_AWUSER;
output   m_axi_gmem5_WVALID;
input   m_axi_gmem5_WREADY;
output  [C_M_AXI_GMEM5_DATA_WIDTH - 1:0] m_axi_gmem5_WDATA;
output  [C_M_AXI_GMEM5_WSTRB_WIDTH - 1:0] m_axi_gmem5_WSTRB;
output   m_axi_gmem5_WLAST;
output  [C_M_AXI_GMEM5_ID_WIDTH - 1:0] m_axi_gmem5_WID;
output  [C_M_AXI_GMEM5_WUSER_WIDTH - 1:0] m_axi_gmem5_WUSER;
output   m_axi_gmem5_ARVALID;
input   m_axi_gmem5_ARREADY;
output  [C_M_AXI_GMEM5_ADDR_WIDTH - 1:0] m_axi_gmem5_ARADDR;
output  [C_M_AXI_GMEM5_ID_WIDTH - 1:0] m_axi_gmem5_ARID;
output  [7:0] m_axi_gmem5_ARLEN;
output  [2:0] m_axi_gmem5_ARSIZE;
output  [1:0] m_axi_gmem5_ARBURST;
output  [1:0] m_axi_gmem5_ARLOCK;
output  [3:0] m_axi_gmem5_ARCACHE;
output  [2:0] m_axi_gmem5_ARPROT;
output  [3:0] m_axi_gmem5_ARQOS;
output  [3:0] m_axi_gmem5_ARREGION;
output  [C_M_AXI_GMEM5_ARUSER_WIDTH - 1:0] m_axi_gmem5_ARUSER;
input   m_axi_gmem5_RVALID;
output   m_axi_gmem5_RREADY;
input  [C_M_AXI_GMEM5_DATA_WIDTH - 1:0] m_axi_gmem5_RDATA;
input   m_axi_gmem5_RLAST;
input  [C_M_AXI_GMEM5_ID_WIDTH - 1:0] m_axi_gmem5_RID;
input  [C_M_AXI_GMEM5_RUSER_WIDTH - 1:0] m_axi_gmem5_RUSER;
input  [1:0] m_axi_gmem5_RRESP;
input   m_axi_gmem5_BVALID;
output   m_axi_gmem5_BREADY;
input  [1:0] m_axi_gmem5_BRESP;
input  [C_M_AXI_GMEM5_ID_WIDTH - 1:0] m_axi_gmem5_BID;
input  [C_M_AXI_GMEM5_BUSER_WIDTH - 1:0] m_axi_gmem5_BUSER;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [63:0] x0;
wire   [63:0] x1;
wire   [63:0] x2;
wire   [63:0] x3;
wire   [63:0] w;
wire   [63:0] y;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    gmem2_AWREADY;
wire    gmem2_WREADY;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
wire   [15:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
wire    gmem_AWREADY;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [511:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
wire    top_entry64_U0_ap_start;
wire    top_entry64_U0_ap_done;
wire    top_entry64_U0_ap_continue;
wire    top_entry64_U0_ap_idle;
wire    top_entry64_U0_ap_ready;
wire    top_entry64_U0_start_out;
wire    top_entry64_U0_start_write;
wire   [63:0] top_entry64_U0_x0_out_din;
wire    top_entry64_U0_x0_out_write;
wire   [63:0] top_entry64_U0_w_out_din;
wire    top_entry64_U0_w_out_write;
wire   [63:0] top_entry64_U0_y_out_din;
wire    top_entry64_U0_y_out_write;
wire    read_w_1_8_U0_ap_start;
wire    read_w_1_8_U0_ap_done;
wire    read_w_1_8_U0_ap_continue;
wire    read_w_1_8_U0_ap_idle;
wire    read_w_1_8_U0_ap_ready;
wire    read_w_1_8_U0_start_out;
wire    read_w_1_8_U0_start_write;
wire    read_w_1_8_U0_m_axi_gmem_AWVALID;
wire   [63:0] read_w_1_8_U0_m_axi_gmem_AWADDR;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_AWID;
wire   [31:0] read_w_1_8_U0_m_axi_gmem_AWLEN;
wire   [2:0] read_w_1_8_U0_m_axi_gmem_AWSIZE;
wire   [1:0] read_w_1_8_U0_m_axi_gmem_AWBURST;
wire   [1:0] read_w_1_8_U0_m_axi_gmem_AWLOCK;
wire   [3:0] read_w_1_8_U0_m_axi_gmem_AWCACHE;
wire   [2:0] read_w_1_8_U0_m_axi_gmem_AWPROT;
wire   [3:0] read_w_1_8_U0_m_axi_gmem_AWQOS;
wire   [3:0] read_w_1_8_U0_m_axi_gmem_AWREGION;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_AWUSER;
wire    read_w_1_8_U0_m_axi_gmem_WVALID;
wire   [7:0] read_w_1_8_U0_m_axi_gmem_WDATA;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_WSTRB;
wire    read_w_1_8_U0_m_axi_gmem_WLAST;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_WID;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_WUSER;
wire    read_w_1_8_U0_m_axi_gmem_ARVALID;
wire   [63:0] read_w_1_8_U0_m_axi_gmem_ARADDR;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_ARID;
wire   [31:0] read_w_1_8_U0_m_axi_gmem_ARLEN;
wire   [2:0] read_w_1_8_U0_m_axi_gmem_ARSIZE;
wire   [1:0] read_w_1_8_U0_m_axi_gmem_ARBURST;
wire   [1:0] read_w_1_8_U0_m_axi_gmem_ARLOCK;
wire   [3:0] read_w_1_8_U0_m_axi_gmem_ARCACHE;
wire   [2:0] read_w_1_8_U0_m_axi_gmem_ARPROT;
wire   [3:0] read_w_1_8_U0_m_axi_gmem_ARQOS;
wire   [3:0] read_w_1_8_U0_m_axi_gmem_ARREGION;
wire   [0:0] read_w_1_8_U0_m_axi_gmem_ARUSER;
wire    read_w_1_8_U0_m_axi_gmem_RREADY;
wire    read_w_1_8_U0_m_axi_gmem_BREADY;
wire   [7:0] read_w_1_8_U0_out_r_din;
wire    read_w_1_8_U0_out_r_write;
wire    read_w_1_8_U0_ptr_read;
wire    split_1_1_8_9_U0_ap_start;
wire    split_1_1_8_9_U0_ap_done;
wire    split_1_1_8_9_U0_ap_continue;
wire    split_1_1_8_9_U0_ap_idle;
wire    split_1_1_8_9_U0_ap_ready;
wire    split_1_1_8_9_U0_start_out;
wire    split_1_1_8_9_U0_start_write;
wire    split_1_1_8_9_U0_in_r_read;
wire   [7:0] split_1_1_8_9_U0_out_V_V_din;
wire    split_1_1_8_9_U0_out_V_V_write;
wire    read_x_2_8_U0_ap_start;
wire    read_x_2_8_U0_ap_done;
wire    read_x_2_8_U0_ap_continue;
wire    read_x_2_8_U0_ap_idle;
wire    read_x_2_8_U0_ap_ready;
wire    read_x_2_8_U0_start_out;
wire    read_x_2_8_U0_start_write;
wire    read_x_2_8_U0_m_axi_gmem2_AWVALID;
wire   [63:0] read_x_2_8_U0_m_axi_gmem2_AWADDR;
wire   [0:0] read_x_2_8_U0_m_axi_gmem2_AWID;
wire   [31:0] read_x_2_8_U0_m_axi_gmem2_AWLEN;
wire   [2:0] read_x_2_8_U0_m_axi_gmem2_AWSIZE;
wire   [1:0] read_x_2_8_U0_m_axi_gmem2_AWBURST;
wire   [1:0] read_x_2_8_U0_m_axi_gmem2_AWLOCK;
wire   [3:0] read_x_2_8_U0_m_axi_gmem2_AWCACHE;
wire   [2:0] read_x_2_8_U0_m_axi_gmem2_AWPROT;
wire   [3:0] read_x_2_8_U0_m_axi_gmem2_AWQOS;
wire   [3:0] read_x_2_8_U0_m_axi_gmem2_AWREGION;
wire   [0:0] read_x_2_8_U0_m_axi_gmem2_AWUSER;
wire    read_x_2_8_U0_m_axi_gmem2_WVALID;
wire   [15:0] read_x_2_8_U0_m_axi_gmem2_WDATA;
wire   [1:0] read_x_2_8_U0_m_axi_gmem2_WSTRB;
wire    read_x_2_8_U0_m_axi_gmem2_WLAST;
wire   [0:0] read_x_2_8_U0_m_axi_gmem2_WID;
wire   [0:0] read_x_2_8_U0_m_axi_gmem2_WUSER;
wire    read_x_2_8_U0_m_axi_gmem2_ARVALID;
wire   [63:0] read_x_2_8_U0_m_axi_gmem2_ARADDR;
wire   [0:0] read_x_2_8_U0_m_axi_gmem2_ARID;
wire   [31:0] read_x_2_8_U0_m_axi_gmem2_ARLEN;
wire   [2:0] read_x_2_8_U0_m_axi_gmem2_ARSIZE;
wire   [1:0] read_x_2_8_U0_m_axi_gmem2_ARBURST;
wire   [1:0] read_x_2_8_U0_m_axi_gmem2_ARLOCK;
wire   [3:0] read_x_2_8_U0_m_axi_gmem2_ARCACHE;
wire   [2:0] read_x_2_8_U0_m_axi_gmem2_ARPROT;
wire   [3:0] read_x_2_8_U0_m_axi_gmem2_ARQOS;
wire   [3:0] read_x_2_8_U0_m_axi_gmem2_ARREGION;
wire   [0:0] read_x_2_8_U0_m_axi_gmem2_ARUSER;
wire    read_x_2_8_U0_m_axi_gmem2_RREADY;
wire    read_x_2_8_U0_m_axi_gmem2_BREADY;
wire    read_x_2_8_U0_ptr_read;
wire   [15:0] read_x_2_8_U0_out_V_V_din;
wire    read_x_2_8_U0_out_V_V_write;
wire    broadcast_1_1_2_8_1152_U0_ap_start;
wire    broadcast_1_1_2_8_1152_U0_ap_done;
wire    broadcast_1_1_2_8_1152_U0_ap_continue;
wire    broadcast_1_1_2_8_1152_U0_ap_idle;
wire    broadcast_1_1_2_8_1152_U0_ap_ready;
wire    broadcast_1_1_2_8_1152_U0_in_V_V_read;
wire   [15:0] broadcast_1_1_2_8_1152_U0_out_V_V_din;
wire    broadcast_1_1_2_8_1152_U0_out_V_V_write;
wire    mul_1_2_8_9_128_U0_ap_start;
wire    mul_1_2_8_9_128_U0_ap_done;
wire    mul_1_2_8_9_128_U0_ap_continue;
wire    mul_1_2_8_9_128_U0_ap_idle;
wire    mul_1_2_8_9_128_U0_ap_ready;
wire    mul_1_2_8_9_128_U0_start_out;
wire    mul_1_2_8_9_128_U0_start_write;
wire    mul_1_2_8_9_128_U0_in_w_V_V_read;
wire    mul_1_2_8_9_128_U0_in_x_V_V_read;
wire   [31:0] mul_1_2_8_9_128_U0_out_V_V_din;
wire    mul_1_2_8_9_128_U0_out_V_V_write;
wire    add_2_16_9_128_U0_ap_start;
wire    add_2_16_9_128_U0_ap_done;
wire    add_2_16_9_128_U0_ap_continue;
wire    add_2_16_9_128_U0_ap_idle;
wire    add_2_16_9_128_U0_ap_ready;
wire    add_2_16_9_128_U0_start_out;
wire    add_2_16_9_128_U0_start_write;
wire    add_2_16_9_128_U0_in_V_V_read;
wire   [31:0] add_2_16_9_128_U0_out_V_V_din;
wire    add_2_16_9_128_U0_out_V_V_write;
wire    merge_1_2_16_128_U0_ap_start;
wire    merge_1_2_16_128_U0_ap_done;
wire    merge_1_2_16_128_U0_ap_continue;
wire    merge_1_2_16_128_U0_ap_idle;
wire    merge_1_2_16_128_U0_ap_ready;
wire    merge_1_2_16_128_U0_start_out;
wire    merge_1_2_16_128_U0_start_write;
wire   [31:0] merge_1_2_16_128_U0_out_r_din;
wire    merge_1_2_16_128_U0_out_r_write;
wire    merge_1_2_16_128_U0_in_V_V_read;
wire    serialize_2_16_128_U0_ap_start;
wire    serialize_2_16_128_U0_ap_done;
wire    serialize_2_16_128_U0_ap_continue;
wire    serialize_2_16_128_U0_ap_idle;
wire    serialize_2_16_128_U0_ap_ready;
wire    serialize_2_16_128_U0_in_r_read;
wire   [511:0] serialize_2_16_128_U0_out_r_din;
wire    serialize_2_16_128_U0_out_r_write;
wire    write_8_U0_ap_start;
wire    write_8_U0_ap_done;
wire    write_8_U0_ap_continue;
wire    write_8_U0_ap_idle;
wire    write_8_U0_ap_ready;
wire    write_8_U0_m_axi_gmem1_AWVALID;
wire   [63:0] write_8_U0_m_axi_gmem1_AWADDR;
wire   [0:0] write_8_U0_m_axi_gmem1_AWID;
wire   [31:0] write_8_U0_m_axi_gmem1_AWLEN;
wire   [2:0] write_8_U0_m_axi_gmem1_AWSIZE;
wire   [1:0] write_8_U0_m_axi_gmem1_AWBURST;
wire   [1:0] write_8_U0_m_axi_gmem1_AWLOCK;
wire   [3:0] write_8_U0_m_axi_gmem1_AWCACHE;
wire   [2:0] write_8_U0_m_axi_gmem1_AWPROT;
wire   [3:0] write_8_U0_m_axi_gmem1_AWQOS;
wire   [3:0] write_8_U0_m_axi_gmem1_AWREGION;
wire   [0:0] write_8_U0_m_axi_gmem1_AWUSER;
wire    write_8_U0_m_axi_gmem1_WVALID;
wire   [511:0] write_8_U0_m_axi_gmem1_WDATA;
wire   [63:0] write_8_U0_m_axi_gmem1_WSTRB;
wire    write_8_U0_m_axi_gmem1_WLAST;
wire   [0:0] write_8_U0_m_axi_gmem1_WID;
wire   [0:0] write_8_U0_m_axi_gmem1_WUSER;
wire    write_8_U0_m_axi_gmem1_ARVALID;
wire   [63:0] write_8_U0_m_axi_gmem1_ARADDR;
wire   [0:0] write_8_U0_m_axi_gmem1_ARID;
wire   [31:0] write_8_U0_m_axi_gmem1_ARLEN;
wire   [2:0] write_8_U0_m_axi_gmem1_ARSIZE;
wire   [1:0] write_8_U0_m_axi_gmem1_ARBURST;
wire   [1:0] write_8_U0_m_axi_gmem1_ARLOCK;
wire   [3:0] write_8_U0_m_axi_gmem1_ARCACHE;
wire   [2:0] write_8_U0_m_axi_gmem1_ARPROT;
wire   [3:0] write_8_U0_m_axi_gmem1_ARQOS;
wire   [3:0] write_8_U0_m_axi_gmem1_ARREGION;
wire   [0:0] write_8_U0_m_axi_gmem1_ARUSER;
wire    write_8_U0_m_axi_gmem1_RREADY;
wire    write_8_U0_m_axi_gmem1_BREADY;
wire    write_8_U0_in_r_read;
wire    write_8_U0_ptr_read;
wire    ap_sync_continue;
wire    x0_c_full_n;
wire   [63:0] x0_c_dout;
wire    x0_c_empty_n;
wire    w_c_full_n;
wire   [63:0] w_c_dout;
wire    w_c_empty_n;
wire    y_c_full_n;
wire   [63:0] y_c_dout;
wire    y_c_empty_n;
wire    st_read_w_full_n;
wire   [7:0] st_read_w_dout;
wire    st_read_w_empty_n;
wire    st_w1_0_V_V_full_n;
wire   [7:0] st_w1_0_V_V_dout;
wire    st_w1_0_V_V_empty_n;
wire    st_read_x_0_V_V_full_n;
wire   [15:0] st_read_x_0_V_V_dout;
wire    st_read_x_0_V_V_empty_n;
wire    st_x1_0_V_V_full_n;
wire   [15:0] st_x1_0_V_V_dout;
wire    st_x1_0_V_V_empty_n;
wire    st_mul_0_V_V_full_n;
wire   [31:0] st_mul_0_V_V_dout;
wire    st_mul_0_V_V_empty_n;
wire    st_add_0_V_V_full_n;
wire   [31:0] st_add_0_V_V_dout;
wire    st_add_0_V_V_empty_n;
wire    st_merge_full_n;
wire   [31:0] st_merge_dout;
wire    st_merge_empty_n;
wire    st_serialize_full_n;
wire   [511:0] st_serialize_dout;
wire    st_serialize_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_top_entry64_U0_ap_ready;
wire    ap_sync_top_entry64_U0_ap_ready;
reg    ap_sync_reg_read_w_1_8_U0_ap_ready;
wire    ap_sync_read_w_1_8_U0_ap_ready;
reg    ap_sync_reg_read_x_2_8_U0_ap_ready;
wire    ap_sync_read_x_2_8_U0_ap_ready;
wire   [0:0] start_for_write_8_U0_din;
wire    start_for_write_8_U0_full_n;
wire   [0:0] start_for_write_8_U0_dout;
wire    start_for_write_8_U0_empty_n;
wire   [0:0] start_for_split_1_1_8_9_U0_din;
wire    start_for_split_1_1_8_9_U0_full_n;
wire   [0:0] start_for_split_1_1_8_9_U0_dout;
wire    start_for_split_1_1_8_9_U0_empty_n;
wire   [0:0] start_for_mul_1_2_8_9_128_U0_din;
wire    start_for_mul_1_2_8_9_128_U0_full_n;
wire   [0:0] start_for_mul_1_2_8_9_128_U0_dout;
wire    start_for_mul_1_2_8_9_128_U0_empty_n;
wire   [0:0] start_for_broadcast_1_1_2_8_1152_U0_din;
wire    start_for_broadcast_1_1_2_8_1152_U0_full_n;
wire   [0:0] start_for_broadcast_1_1_2_8_1152_U0_dout;
wire    start_for_broadcast_1_1_2_8_1152_U0_empty_n;
wire    broadcast_1_1_2_8_1152_U0_start_full_n;
wire    broadcast_1_1_2_8_1152_U0_start_write;
wire   [0:0] start_for_add_2_16_9_128_U0_din;
wire    start_for_add_2_16_9_128_U0_full_n;
wire   [0:0] start_for_add_2_16_9_128_U0_dout;
wire    start_for_add_2_16_9_128_U0_empty_n;
wire   [0:0] start_for_merge_1_2_16_128_U0_din;
wire    start_for_merge_1_2_16_128_U0_full_n;
wire   [0:0] start_for_merge_1_2_16_128_U0_dout;
wire    start_for_merge_1_2_16_128_U0_empty_n;
wire   [0:0] start_for_serialize_2_16_128_U0_din;
wire    start_for_serialize_2_16_128_U0_full_n;
wire   [0:0] start_for_serialize_2_16_128_U0_dout;
wire    start_for_serialize_2_16_128_U0_empty_n;
wire    serialize_2_16_128_U0_start_full_n;
wire    serialize_2_16_128_U0_start_write;
wire    write_8_U0_start_full_n;
wire    write_8_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_top_entry64_U0_ap_ready = 1'b0;
#0 ap_sync_reg_read_w_1_8_U0_ap_ready = 1'b0;
#0 ap_sync_reg_read_x_2_8_U0_ap_ready = 1'b0;
end

top_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .x0(x0),
    .x1(x1),
    .x2(x2),
    .x3(x3),
    .w(w),
    .y(y),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

top_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(read_x_2_8_U0_m_axi_gmem2_ARVALID),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(read_x_2_8_U0_m_axi_gmem2_ARADDR),
    .I_ARID(read_x_2_8_U0_m_axi_gmem2_ARID),
    .I_ARLEN(read_x_2_8_U0_m_axi_gmem2_ARLEN),
    .I_ARSIZE(read_x_2_8_U0_m_axi_gmem2_ARSIZE),
    .I_ARLOCK(read_x_2_8_U0_m_axi_gmem2_ARLOCK),
    .I_ARCACHE(read_x_2_8_U0_m_axi_gmem2_ARCACHE),
    .I_ARQOS(read_x_2_8_U0_m_axi_gmem2_ARQOS),
    .I_ARPROT(read_x_2_8_U0_m_axi_gmem2_ARPROT),
    .I_ARUSER(read_x_2_8_U0_m_axi_gmem2_ARUSER),
    .I_ARBURST(read_x_2_8_U0_m_axi_gmem2_ARBURST),
    .I_ARREGION(read_x_2_8_U0_m_axi_gmem2_ARREGION),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(read_x_2_8_U0_m_axi_gmem2_RREADY),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

top_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(read_w_1_8_U0_m_axi_gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(read_w_1_8_U0_m_axi_gmem_ARADDR),
    .I_ARID(read_w_1_8_U0_m_axi_gmem_ARID),
    .I_ARLEN(read_w_1_8_U0_m_axi_gmem_ARLEN),
    .I_ARSIZE(read_w_1_8_U0_m_axi_gmem_ARSIZE),
    .I_ARLOCK(read_w_1_8_U0_m_axi_gmem_ARLOCK),
    .I_ARCACHE(read_w_1_8_U0_m_axi_gmem_ARCACHE),
    .I_ARQOS(read_w_1_8_U0_m_axi_gmem_ARQOS),
    .I_ARPROT(read_w_1_8_U0_m_axi_gmem_ARPROT),
    .I_ARUSER(read_w_1_8_U0_m_axi_gmem_ARUSER),
    .I_ARBURST(read_w_1_8_U0_m_axi_gmem_ARBURST),
    .I_ARREGION(read_w_1_8_U0_m_axi_gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(read_w_1_8_U0_m_axi_gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

top_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(write_8_U0_m_axi_gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(write_8_U0_m_axi_gmem1_AWADDR),
    .I_AWID(write_8_U0_m_axi_gmem1_AWID),
    .I_AWLEN(write_8_U0_m_axi_gmem1_AWLEN),
    .I_AWSIZE(write_8_U0_m_axi_gmem1_AWSIZE),
    .I_AWLOCK(write_8_U0_m_axi_gmem1_AWLOCK),
    .I_AWCACHE(write_8_U0_m_axi_gmem1_AWCACHE),
    .I_AWQOS(write_8_U0_m_axi_gmem1_AWQOS),
    .I_AWPROT(write_8_U0_m_axi_gmem1_AWPROT),
    .I_AWUSER(write_8_U0_m_axi_gmem1_AWUSER),
    .I_AWBURST(write_8_U0_m_axi_gmem1_AWBURST),
    .I_AWREGION(write_8_U0_m_axi_gmem1_AWREGION),
    .I_WVALID(write_8_U0_m_axi_gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(write_8_U0_m_axi_gmem1_WDATA),
    .I_WID(write_8_U0_m_axi_gmem1_WID),
    .I_WUSER(write_8_U0_m_axi_gmem1_WUSER),
    .I_WLAST(write_8_U0_m_axi_gmem1_WLAST),
    .I_WSTRB(write_8_U0_m_axi_gmem1_WSTRB),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(write_8_U0_m_axi_gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

top_top_entry64 top_entry64_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(top_entry64_U0_ap_start),
    .start_full_n(start_for_write_8_U0_full_n),
    .ap_done(top_entry64_U0_ap_done),
    .ap_continue(top_entry64_U0_ap_continue),
    .ap_idle(top_entry64_U0_ap_idle),
    .ap_ready(top_entry64_U0_ap_ready),
    .start_out(top_entry64_U0_start_out),
    .start_write(top_entry64_U0_start_write),
    .x0(x0),
    .w(w),
    .y(y),
    .x0_out_din(top_entry64_U0_x0_out_din),
    .x0_out_full_n(x0_c_full_n),
    .x0_out_write(top_entry64_U0_x0_out_write),
    .w_out_din(top_entry64_U0_w_out_din),
    .w_out_full_n(w_c_full_n),
    .w_out_write(top_entry64_U0_w_out_write),
    .y_out_din(top_entry64_U0_y_out_din),
    .y_out_full_n(y_c_full_n),
    .y_out_write(top_entry64_U0_y_out_write)
);

top_read_w_1_8_s read_w_1_8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_w_1_8_U0_ap_start),
    .start_full_n(start_for_split_1_1_8_9_U0_full_n),
    .ap_done(read_w_1_8_U0_ap_done),
    .ap_continue(read_w_1_8_U0_ap_continue),
    .ap_idle(read_w_1_8_U0_ap_idle),
    .ap_ready(read_w_1_8_U0_ap_ready),
    .start_out(read_w_1_8_U0_start_out),
    .start_write(read_w_1_8_U0_start_write),
    .m_axi_gmem_AWVALID(read_w_1_8_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(read_w_1_8_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(read_w_1_8_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(read_w_1_8_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(read_w_1_8_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(read_w_1_8_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(read_w_1_8_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(read_w_1_8_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(read_w_1_8_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(read_w_1_8_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(read_w_1_8_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(read_w_1_8_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(read_w_1_8_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(read_w_1_8_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(read_w_1_8_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(read_w_1_8_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(read_w_1_8_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(read_w_1_8_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(read_w_1_8_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(read_w_1_8_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(read_w_1_8_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(read_w_1_8_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(read_w_1_8_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(read_w_1_8_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(read_w_1_8_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(read_w_1_8_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(read_w_1_8_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(read_w_1_8_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(read_w_1_8_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(read_w_1_8_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(read_w_1_8_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(read_w_1_8_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .out_r_din(read_w_1_8_U0_out_r_din),
    .out_r_full_n(st_read_w_full_n),
    .out_r_write(read_w_1_8_U0_out_r_write),
    .ptr_dout(w_c_dout),
    .ptr_empty_n(w_c_empty_n),
    .ptr_read(read_w_1_8_U0_ptr_read)
);

top_split_1_1_8_9_s split_1_1_8_9_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(split_1_1_8_9_U0_ap_start),
    .start_full_n(start_for_mul_1_2_8_9_128_U0_full_n),
    .ap_done(split_1_1_8_9_U0_ap_done),
    .ap_continue(split_1_1_8_9_U0_ap_continue),
    .ap_idle(split_1_1_8_9_U0_ap_idle),
    .ap_ready(split_1_1_8_9_U0_ap_ready),
    .start_out(split_1_1_8_9_U0_start_out),
    .start_write(split_1_1_8_9_U0_start_write),
    .in_r_dout(st_read_w_dout),
    .in_r_empty_n(st_read_w_empty_n),
    .in_r_read(split_1_1_8_9_U0_in_r_read),
    .out_V_V_din(split_1_1_8_9_U0_out_V_V_din),
    .out_V_V_full_n(st_w1_0_V_V_full_n),
    .out_V_V_write(split_1_1_8_9_U0_out_V_V_write)
);

top_read_x_2_8_s read_x_2_8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_x_2_8_U0_ap_start),
    .start_full_n(start_for_broadcast_1_1_2_8_1152_U0_full_n),
    .ap_done(read_x_2_8_U0_ap_done),
    .ap_continue(read_x_2_8_U0_ap_continue),
    .ap_idle(read_x_2_8_U0_ap_idle),
    .ap_ready(read_x_2_8_U0_ap_ready),
    .start_out(read_x_2_8_U0_start_out),
    .start_write(read_x_2_8_U0_start_write),
    .m_axi_gmem2_AWVALID(read_x_2_8_U0_m_axi_gmem2_AWVALID),
    .m_axi_gmem2_AWREADY(1'b0),
    .m_axi_gmem2_AWADDR(read_x_2_8_U0_m_axi_gmem2_AWADDR),
    .m_axi_gmem2_AWID(read_x_2_8_U0_m_axi_gmem2_AWID),
    .m_axi_gmem2_AWLEN(read_x_2_8_U0_m_axi_gmem2_AWLEN),
    .m_axi_gmem2_AWSIZE(read_x_2_8_U0_m_axi_gmem2_AWSIZE),
    .m_axi_gmem2_AWBURST(read_x_2_8_U0_m_axi_gmem2_AWBURST),
    .m_axi_gmem2_AWLOCK(read_x_2_8_U0_m_axi_gmem2_AWLOCK),
    .m_axi_gmem2_AWCACHE(read_x_2_8_U0_m_axi_gmem2_AWCACHE),
    .m_axi_gmem2_AWPROT(read_x_2_8_U0_m_axi_gmem2_AWPROT),
    .m_axi_gmem2_AWQOS(read_x_2_8_U0_m_axi_gmem2_AWQOS),
    .m_axi_gmem2_AWREGION(read_x_2_8_U0_m_axi_gmem2_AWREGION),
    .m_axi_gmem2_AWUSER(read_x_2_8_U0_m_axi_gmem2_AWUSER),
    .m_axi_gmem2_WVALID(read_x_2_8_U0_m_axi_gmem2_WVALID),
    .m_axi_gmem2_WREADY(1'b0),
    .m_axi_gmem2_WDATA(read_x_2_8_U0_m_axi_gmem2_WDATA),
    .m_axi_gmem2_WSTRB(read_x_2_8_U0_m_axi_gmem2_WSTRB),
    .m_axi_gmem2_WLAST(read_x_2_8_U0_m_axi_gmem2_WLAST),
    .m_axi_gmem2_WID(read_x_2_8_U0_m_axi_gmem2_WID),
    .m_axi_gmem2_WUSER(read_x_2_8_U0_m_axi_gmem2_WUSER),
    .m_axi_gmem2_ARVALID(read_x_2_8_U0_m_axi_gmem2_ARVALID),
    .m_axi_gmem2_ARREADY(gmem2_ARREADY),
    .m_axi_gmem2_ARADDR(read_x_2_8_U0_m_axi_gmem2_ARADDR),
    .m_axi_gmem2_ARID(read_x_2_8_U0_m_axi_gmem2_ARID),
    .m_axi_gmem2_ARLEN(read_x_2_8_U0_m_axi_gmem2_ARLEN),
    .m_axi_gmem2_ARSIZE(read_x_2_8_U0_m_axi_gmem2_ARSIZE),
    .m_axi_gmem2_ARBURST(read_x_2_8_U0_m_axi_gmem2_ARBURST),
    .m_axi_gmem2_ARLOCK(read_x_2_8_U0_m_axi_gmem2_ARLOCK),
    .m_axi_gmem2_ARCACHE(read_x_2_8_U0_m_axi_gmem2_ARCACHE),
    .m_axi_gmem2_ARPROT(read_x_2_8_U0_m_axi_gmem2_ARPROT),
    .m_axi_gmem2_ARQOS(read_x_2_8_U0_m_axi_gmem2_ARQOS),
    .m_axi_gmem2_ARREGION(read_x_2_8_U0_m_axi_gmem2_ARREGION),
    .m_axi_gmem2_ARUSER(read_x_2_8_U0_m_axi_gmem2_ARUSER),
    .m_axi_gmem2_RVALID(gmem2_RVALID),
    .m_axi_gmem2_RREADY(read_x_2_8_U0_m_axi_gmem2_RREADY),
    .m_axi_gmem2_RDATA(gmem2_RDATA),
    .m_axi_gmem2_RLAST(gmem2_RLAST),
    .m_axi_gmem2_RID(gmem2_RID),
    .m_axi_gmem2_RUSER(gmem2_RUSER),
    .m_axi_gmem2_RRESP(gmem2_RRESP),
    .m_axi_gmem2_BVALID(1'b0),
    .m_axi_gmem2_BREADY(read_x_2_8_U0_m_axi_gmem2_BREADY),
    .m_axi_gmem2_BRESP(2'd0),
    .m_axi_gmem2_BID(1'd0),
    .m_axi_gmem2_BUSER(1'd0),
    .ptr_dout(x0_c_dout),
    .ptr_empty_n(x0_c_empty_n),
    .ptr_read(read_x_2_8_U0_ptr_read),
    .out_V_V_din(read_x_2_8_U0_out_V_V_din),
    .out_V_V_full_n(st_read_x_0_V_V_full_n),
    .out_V_V_write(read_x_2_8_U0_out_V_V_write)
);

top_broadcast_1_1_2_8_1152_s broadcast_1_1_2_8_1152_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(broadcast_1_1_2_8_1152_U0_ap_start),
    .ap_done(broadcast_1_1_2_8_1152_U0_ap_done),
    .ap_continue(broadcast_1_1_2_8_1152_U0_ap_continue),
    .ap_idle(broadcast_1_1_2_8_1152_U0_ap_idle),
    .ap_ready(broadcast_1_1_2_8_1152_U0_ap_ready),
    .in_V_V_dout(st_read_x_0_V_V_dout),
    .in_V_V_empty_n(st_read_x_0_V_V_empty_n),
    .in_V_V_read(broadcast_1_1_2_8_1152_U0_in_V_V_read),
    .out_V_V_din(broadcast_1_1_2_8_1152_U0_out_V_V_din),
    .out_V_V_full_n(st_x1_0_V_V_full_n),
    .out_V_V_write(broadcast_1_1_2_8_1152_U0_out_V_V_write)
);

top_mul_1_2_8_9_128_s mul_1_2_8_9_128_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(mul_1_2_8_9_128_U0_ap_start),
    .start_full_n(start_for_add_2_16_9_128_U0_full_n),
    .ap_done(mul_1_2_8_9_128_U0_ap_done),
    .ap_continue(mul_1_2_8_9_128_U0_ap_continue),
    .ap_idle(mul_1_2_8_9_128_U0_ap_idle),
    .ap_ready(mul_1_2_8_9_128_U0_ap_ready),
    .start_out(mul_1_2_8_9_128_U0_start_out),
    .start_write(mul_1_2_8_9_128_U0_start_write),
    .in_w_V_V_dout(st_w1_0_V_V_dout),
    .in_w_V_V_empty_n(st_w1_0_V_V_empty_n),
    .in_w_V_V_read(mul_1_2_8_9_128_U0_in_w_V_V_read),
    .in_x_V_V_dout(st_x1_0_V_V_dout),
    .in_x_V_V_empty_n(st_x1_0_V_V_empty_n),
    .in_x_V_V_read(mul_1_2_8_9_128_U0_in_x_V_V_read),
    .out_V_V_din(mul_1_2_8_9_128_U0_out_V_V_din),
    .out_V_V_full_n(st_mul_0_V_V_full_n),
    .out_V_V_write(mul_1_2_8_9_128_U0_out_V_V_write)
);

top_add_2_16_9_128_s add_2_16_9_128_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(add_2_16_9_128_U0_ap_start),
    .start_full_n(start_for_merge_1_2_16_128_U0_full_n),
    .ap_done(add_2_16_9_128_U0_ap_done),
    .ap_continue(add_2_16_9_128_U0_ap_continue),
    .ap_idle(add_2_16_9_128_U0_ap_idle),
    .ap_ready(add_2_16_9_128_U0_ap_ready),
    .start_out(add_2_16_9_128_U0_start_out),
    .start_write(add_2_16_9_128_U0_start_write),
    .in_V_V_dout(st_mul_0_V_V_dout),
    .in_V_V_empty_n(st_mul_0_V_V_empty_n),
    .in_V_V_read(add_2_16_9_128_U0_in_V_V_read),
    .out_V_V_din(add_2_16_9_128_U0_out_V_V_din),
    .out_V_V_full_n(st_add_0_V_V_full_n),
    .out_V_V_write(add_2_16_9_128_U0_out_V_V_write)
);

top_merge_1_2_16_128_s merge_1_2_16_128_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(merge_1_2_16_128_U0_ap_start),
    .start_full_n(start_for_serialize_2_16_128_U0_full_n),
    .ap_done(merge_1_2_16_128_U0_ap_done),
    .ap_continue(merge_1_2_16_128_U0_ap_continue),
    .ap_idle(merge_1_2_16_128_U0_ap_idle),
    .ap_ready(merge_1_2_16_128_U0_ap_ready),
    .start_out(merge_1_2_16_128_U0_start_out),
    .start_write(merge_1_2_16_128_U0_start_write),
    .out_r_din(merge_1_2_16_128_U0_out_r_din),
    .out_r_full_n(st_merge_full_n),
    .out_r_write(merge_1_2_16_128_U0_out_r_write),
    .in_V_V_dout(st_add_0_V_V_dout),
    .in_V_V_empty_n(st_add_0_V_V_empty_n),
    .in_V_V_read(merge_1_2_16_128_U0_in_V_V_read)
);

top_serialize_2_16_128_s serialize_2_16_128_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(serialize_2_16_128_U0_ap_start),
    .ap_done(serialize_2_16_128_U0_ap_done),
    .ap_continue(serialize_2_16_128_U0_ap_continue),
    .ap_idle(serialize_2_16_128_U0_ap_idle),
    .ap_ready(serialize_2_16_128_U0_ap_ready),
    .in_r_dout(st_merge_dout),
    .in_r_empty_n(st_merge_empty_n),
    .in_r_read(serialize_2_16_128_U0_in_r_read),
    .out_r_din(serialize_2_16_128_U0_out_r_din),
    .out_r_full_n(st_serialize_full_n),
    .out_r_write(serialize_2_16_128_U0_out_r_write)
);

top_write_8_s write_8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_8_U0_ap_start),
    .ap_done(write_8_U0_ap_done),
    .ap_continue(write_8_U0_ap_continue),
    .ap_idle(write_8_U0_ap_idle),
    .ap_ready(write_8_U0_ap_ready),
    .m_axi_gmem1_AWVALID(write_8_U0_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(gmem1_AWREADY),
    .m_axi_gmem1_AWADDR(write_8_U0_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(write_8_U0_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(write_8_U0_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(write_8_U0_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(write_8_U0_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(write_8_U0_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(write_8_U0_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(write_8_U0_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(write_8_U0_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(write_8_U0_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(write_8_U0_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(write_8_U0_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(gmem1_WREADY),
    .m_axi_gmem1_WDATA(write_8_U0_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(write_8_U0_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(write_8_U0_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(write_8_U0_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(write_8_U0_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(write_8_U0_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(1'b0),
    .m_axi_gmem1_ARADDR(write_8_U0_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(write_8_U0_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(write_8_U0_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(write_8_U0_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(write_8_U0_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(write_8_U0_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(write_8_U0_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(write_8_U0_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(write_8_U0_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(write_8_U0_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(write_8_U0_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(1'b0),
    .m_axi_gmem1_RREADY(write_8_U0_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(512'd0),
    .m_axi_gmem1_RLAST(1'b0),
    .m_axi_gmem1_RID(1'd0),
    .m_axi_gmem1_RUSER(1'd0),
    .m_axi_gmem1_RRESP(2'd0),
    .m_axi_gmem1_BVALID(gmem1_BVALID),
    .m_axi_gmem1_BREADY(write_8_U0_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(gmem1_BRESP),
    .m_axi_gmem1_BID(gmem1_BID),
    .m_axi_gmem1_BUSER(gmem1_BUSER),
    .in_r_dout(st_serialize_dout),
    .in_r_empty_n(st_serialize_empty_n),
    .in_r_read(write_8_U0_in_r_read),
    .ptr_dout(y_c_dout),
    .ptr_empty_n(y_c_empty_n),
    .ptr_read(write_8_U0_ptr_read)
);

top_fifo_w64_d2_S x0_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(top_entry64_U0_x0_out_din),
    .if_full_n(x0_c_full_n),
    .if_write(top_entry64_U0_x0_out_write),
    .if_dout(x0_c_dout),
    .if_empty_n(x0_c_empty_n),
    .if_read(read_x_2_8_U0_ptr_read)
);

top_fifo_w64_d2_S w_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(top_entry64_U0_w_out_din),
    .if_full_n(w_c_full_n),
    .if_write(top_entry64_U0_w_out_write),
    .if_dout(w_c_dout),
    .if_empty_n(w_c_empty_n),
    .if_read(read_w_1_8_U0_ptr_read)
);

top_fifo_w64_d8_S y_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(top_entry64_U0_y_out_din),
    .if_full_n(y_c_full_n),
    .if_write(top_entry64_U0_y_out_write),
    .if_dout(y_c_dout),
    .if_empty_n(y_c_empty_n),
    .if_read(write_8_U0_ptr_read)
);

top_fifo_w8_d2_S st_read_w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_w_1_8_U0_out_r_din),
    .if_full_n(st_read_w_full_n),
    .if_write(read_w_1_8_U0_out_r_write),
    .if_dout(st_read_w_dout),
    .if_empty_n(st_read_w_empty_n),
    .if_read(split_1_1_8_9_U0_in_r_read)
);

top_fifo_w8_d2_S st_w1_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_1_1_8_9_U0_out_V_V_din),
    .if_full_n(st_w1_0_V_V_full_n),
    .if_write(split_1_1_8_9_U0_out_V_V_write),
    .if_dout(st_w1_0_V_V_dout),
    .if_empty_n(st_w1_0_V_V_empty_n),
    .if_read(mul_1_2_8_9_128_U0_in_w_V_V_read)
);

top_fifo_w16_d2_S st_read_x_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_x_2_8_U0_out_V_V_din),
    .if_full_n(st_read_x_0_V_V_full_n),
    .if_write(read_x_2_8_U0_out_V_V_write),
    .if_dout(st_read_x_0_V_V_dout),
    .if_empty_n(st_read_x_0_V_V_empty_n),
    .if_read(broadcast_1_1_2_8_1152_U0_in_V_V_read)
);

top_fifo_w16_d2_S st_x1_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(broadcast_1_1_2_8_1152_U0_out_V_V_din),
    .if_full_n(st_x1_0_V_V_full_n),
    .if_write(broadcast_1_1_2_8_1152_U0_out_V_V_write),
    .if_dout(st_x1_0_V_V_dout),
    .if_empty_n(st_x1_0_V_V_empty_n),
    .if_read(mul_1_2_8_9_128_U0_in_x_V_V_read)
);

top_fifo_w32_d2_S st_mul_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(mul_1_2_8_9_128_U0_out_V_V_din),
    .if_full_n(st_mul_0_V_V_full_n),
    .if_write(mul_1_2_8_9_128_U0_out_V_V_write),
    .if_dout(st_mul_0_V_V_dout),
    .if_empty_n(st_mul_0_V_V_empty_n),
    .if_read(add_2_16_9_128_U0_in_V_V_read)
);

top_fifo_w32_d2_S st_add_0_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(add_2_16_9_128_U0_out_V_V_din),
    .if_full_n(st_add_0_V_V_full_n),
    .if_write(add_2_16_9_128_U0_out_V_V_write),
    .if_dout(st_add_0_V_V_dout),
    .if_empty_n(st_add_0_V_V_empty_n),
    .if_read(merge_1_2_16_128_U0_in_V_V_read)
);

top_fifo_w32_d2_S st_merge_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(merge_1_2_16_128_U0_out_r_din),
    .if_full_n(st_merge_full_n),
    .if_write(merge_1_2_16_128_U0_out_r_write),
    .if_dout(st_merge_dout),
    .if_empty_n(st_merge_empty_n),
    .if_read(serialize_2_16_128_U0_in_r_read)
);

top_fifo_w512_d2_S st_serialize_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(serialize_2_16_128_U0_out_r_din),
    .if_full_n(st_serialize_full_n),
    .if_write(serialize_2_16_128_U0_out_r_write),
    .if_dout(st_serialize_dout),
    .if_empty_n(st_serialize_empty_n),
    .if_read(write_8_U0_in_r_read)
);

top_start_for_write_8_U0 start_for_write_8_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_write_8_U0_din),
    .if_full_n(start_for_write_8_U0_full_n),
    .if_write(top_entry64_U0_start_write),
    .if_dout(start_for_write_8_U0_dout),
    .if_empty_n(start_for_write_8_U0_empty_n),
    .if_read(write_8_U0_ap_ready)
);

top_start_for_split_1_1_8_9_U0 start_for_split_1_1_8_9_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_split_1_1_8_9_U0_din),
    .if_full_n(start_for_split_1_1_8_9_U0_full_n),
    .if_write(read_w_1_8_U0_start_write),
    .if_dout(start_for_split_1_1_8_9_U0_dout),
    .if_empty_n(start_for_split_1_1_8_9_U0_empty_n),
    .if_read(split_1_1_8_9_U0_ap_ready)
);

top_start_for_mul_1_2_8_9_128_U0 start_for_mul_1_2_8_9_128_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_mul_1_2_8_9_128_U0_din),
    .if_full_n(start_for_mul_1_2_8_9_128_U0_full_n),
    .if_write(split_1_1_8_9_U0_start_write),
    .if_dout(start_for_mul_1_2_8_9_128_U0_dout),
    .if_empty_n(start_for_mul_1_2_8_9_128_U0_empty_n),
    .if_read(mul_1_2_8_9_128_U0_ap_ready)
);

top_start_for_broadcast_1_1_2_8_1152_U0 start_for_broadcast_1_1_2_8_1152_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_broadcast_1_1_2_8_1152_U0_din),
    .if_full_n(start_for_broadcast_1_1_2_8_1152_U0_full_n),
    .if_write(read_x_2_8_U0_start_write),
    .if_dout(start_for_broadcast_1_1_2_8_1152_U0_dout),
    .if_empty_n(start_for_broadcast_1_1_2_8_1152_U0_empty_n),
    .if_read(broadcast_1_1_2_8_1152_U0_ap_ready)
);

top_start_for_add_2_16_9_128_U0 start_for_add_2_16_9_128_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_add_2_16_9_128_U0_din),
    .if_full_n(start_for_add_2_16_9_128_U0_full_n),
    .if_write(mul_1_2_8_9_128_U0_start_write),
    .if_dout(start_for_add_2_16_9_128_U0_dout),
    .if_empty_n(start_for_add_2_16_9_128_U0_empty_n),
    .if_read(add_2_16_9_128_U0_ap_ready)
);

top_start_for_merge_1_2_16_128_U0 start_for_merge_1_2_16_128_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_merge_1_2_16_128_U0_din),
    .if_full_n(start_for_merge_1_2_16_128_U0_full_n),
    .if_write(add_2_16_9_128_U0_start_write),
    .if_dout(start_for_merge_1_2_16_128_U0_dout),
    .if_empty_n(start_for_merge_1_2_16_128_U0_empty_n),
    .if_read(merge_1_2_16_128_U0_ap_ready)
);

top_start_for_serialize_2_16_128_U0 start_for_serialize_2_16_128_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_serialize_2_16_128_U0_din),
    .if_full_n(start_for_serialize_2_16_128_U0_full_n),
    .if_write(merge_1_2_16_128_U0_start_write),
    .if_dout(start_for_serialize_2_16_128_U0_dout),
    .if_empty_n(start_for_serialize_2_16_128_U0_empty_n),
    .if_read(serialize_2_16_128_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_read_w_1_8_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_w_1_8_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_w_1_8_U0_ap_ready <= ap_sync_read_w_1_8_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_read_x_2_8_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_x_2_8_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_x_2_8_U0_ap_ready <= ap_sync_read_x_2_8_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_top_entry64_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_top_entry64_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_top_entry64_U0_ap_ready <= ap_sync_top_entry64_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign add_2_16_9_128_U0_ap_continue = 1'b1;

assign add_2_16_9_128_U0_ap_start = start_for_add_2_16_9_128_U0_empty_n;

assign ap_done = write_8_U0_ap_done;

assign ap_idle = (write_8_U0_ap_idle & top_entry64_U0_ap_idle & split_1_1_8_9_U0_ap_idle & serialize_2_16_128_U0_ap_idle & read_x_2_8_U0_ap_idle & read_w_1_8_U0_ap_idle & mul_1_2_8_9_128_U0_ap_idle & merge_1_2_16_128_U0_ap_idle & broadcast_1_1_2_8_1152_U0_ap_idle & add_2_16_9_128_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = write_8_U0_ap_done;

assign ap_sync_read_w_1_8_U0_ap_ready = (read_w_1_8_U0_ap_ready | ap_sync_reg_read_w_1_8_U0_ap_ready);

assign ap_sync_read_x_2_8_U0_ap_ready = (read_x_2_8_U0_ap_ready | ap_sync_reg_read_x_2_8_U0_ap_ready);

assign ap_sync_ready = (ap_sync_top_entry64_U0_ap_ready & ap_sync_read_x_2_8_U0_ap_ready & ap_sync_read_w_1_8_U0_ap_ready);

assign ap_sync_top_entry64_U0_ap_ready = (top_entry64_U0_ap_ready | ap_sync_reg_top_entry64_U0_ap_ready);

assign broadcast_1_1_2_8_1152_U0_ap_continue = 1'b1;

assign broadcast_1_1_2_8_1152_U0_ap_start = start_for_broadcast_1_1_2_8_1152_U0_empty_n;

assign broadcast_1_1_2_8_1152_U0_start_full_n = 1'b1;

assign broadcast_1_1_2_8_1152_U0_start_write = 1'b0;

assign m_axi_gmem3_ARADDR = 64'd0;

assign m_axi_gmem3_ARBURST = 2'd0;

assign m_axi_gmem3_ARCACHE = 4'd0;

assign m_axi_gmem3_ARID = 1'd0;

assign m_axi_gmem3_ARLEN = 8'd0;

assign m_axi_gmem3_ARLOCK = 2'd0;

assign m_axi_gmem3_ARPROT = 3'd0;

assign m_axi_gmem3_ARQOS = 4'd0;

assign m_axi_gmem3_ARREGION = 4'd0;

assign m_axi_gmem3_ARSIZE = 3'd0;

assign m_axi_gmem3_ARUSER = 1'd0;

assign m_axi_gmem3_ARVALID = 1'b0;

assign m_axi_gmem3_AWADDR = 64'd0;

assign m_axi_gmem3_AWBURST = 2'd0;

assign m_axi_gmem3_AWCACHE = 4'd0;

assign m_axi_gmem3_AWID = 1'd0;

assign m_axi_gmem3_AWLEN = 8'd0;

assign m_axi_gmem3_AWLOCK = 2'd0;

assign m_axi_gmem3_AWPROT = 3'd0;

assign m_axi_gmem3_AWQOS = 4'd0;

assign m_axi_gmem3_AWREGION = 4'd0;

assign m_axi_gmem3_AWSIZE = 3'd0;

assign m_axi_gmem3_AWUSER = 1'd0;

assign m_axi_gmem3_AWVALID = 1'b0;

assign m_axi_gmem3_BREADY = 1'b0;

assign m_axi_gmem3_RREADY = 1'b0;

assign m_axi_gmem3_WDATA = 32'd0;

assign m_axi_gmem3_WID = 1'd0;

assign m_axi_gmem3_WLAST = 1'b0;

assign m_axi_gmem3_WSTRB = 4'd0;

assign m_axi_gmem3_WUSER = 1'd0;

assign m_axi_gmem3_WVALID = 1'b0;

assign m_axi_gmem4_ARADDR = 64'd0;

assign m_axi_gmem4_ARBURST = 2'd0;

assign m_axi_gmem4_ARCACHE = 4'd0;

assign m_axi_gmem4_ARID = 1'd0;

assign m_axi_gmem4_ARLEN = 8'd0;

assign m_axi_gmem4_ARLOCK = 2'd0;

assign m_axi_gmem4_ARPROT = 3'd0;

assign m_axi_gmem4_ARQOS = 4'd0;

assign m_axi_gmem4_ARREGION = 4'd0;

assign m_axi_gmem4_ARSIZE = 3'd0;

assign m_axi_gmem4_ARUSER = 1'd0;

assign m_axi_gmem4_ARVALID = 1'b0;

assign m_axi_gmem4_AWADDR = 64'd0;

assign m_axi_gmem4_AWBURST = 2'd0;

assign m_axi_gmem4_AWCACHE = 4'd0;

assign m_axi_gmem4_AWID = 1'd0;

assign m_axi_gmem4_AWLEN = 8'd0;

assign m_axi_gmem4_AWLOCK = 2'd0;

assign m_axi_gmem4_AWPROT = 3'd0;

assign m_axi_gmem4_AWQOS = 4'd0;

assign m_axi_gmem4_AWREGION = 4'd0;

assign m_axi_gmem4_AWSIZE = 3'd0;

assign m_axi_gmem4_AWUSER = 1'd0;

assign m_axi_gmem4_AWVALID = 1'b0;

assign m_axi_gmem4_BREADY = 1'b0;

assign m_axi_gmem4_RREADY = 1'b0;

assign m_axi_gmem4_WDATA = 32'd0;

assign m_axi_gmem4_WID = 1'd0;

assign m_axi_gmem4_WLAST = 1'b0;

assign m_axi_gmem4_WSTRB = 4'd0;

assign m_axi_gmem4_WUSER = 1'd0;

assign m_axi_gmem4_WVALID = 1'b0;

assign m_axi_gmem5_ARADDR = 64'd0;

assign m_axi_gmem5_ARBURST = 2'd0;

assign m_axi_gmem5_ARCACHE = 4'd0;

assign m_axi_gmem5_ARID = 1'd0;

assign m_axi_gmem5_ARLEN = 8'd0;

assign m_axi_gmem5_ARLOCK = 2'd0;

assign m_axi_gmem5_ARPROT = 3'd0;

assign m_axi_gmem5_ARQOS = 4'd0;

assign m_axi_gmem5_ARREGION = 4'd0;

assign m_axi_gmem5_ARSIZE = 3'd0;

assign m_axi_gmem5_ARUSER = 1'd0;

assign m_axi_gmem5_ARVALID = 1'b0;

assign m_axi_gmem5_AWADDR = 64'd0;

assign m_axi_gmem5_AWBURST = 2'd0;

assign m_axi_gmem5_AWCACHE = 4'd0;

assign m_axi_gmem5_AWID = 1'd0;

assign m_axi_gmem5_AWLEN = 8'd0;

assign m_axi_gmem5_AWLOCK = 2'd0;

assign m_axi_gmem5_AWPROT = 3'd0;

assign m_axi_gmem5_AWQOS = 4'd0;

assign m_axi_gmem5_AWREGION = 4'd0;

assign m_axi_gmem5_AWSIZE = 3'd0;

assign m_axi_gmem5_AWUSER = 1'd0;

assign m_axi_gmem5_AWVALID = 1'b0;

assign m_axi_gmem5_BREADY = 1'b0;

assign m_axi_gmem5_RREADY = 1'b0;

assign m_axi_gmem5_WDATA = 32'd0;

assign m_axi_gmem5_WID = 1'd0;

assign m_axi_gmem5_WLAST = 1'b0;

assign m_axi_gmem5_WSTRB = 4'd0;

assign m_axi_gmem5_WUSER = 1'd0;

assign m_axi_gmem5_WVALID = 1'b0;

assign merge_1_2_16_128_U0_ap_continue = 1'b1;

assign merge_1_2_16_128_U0_ap_start = start_for_merge_1_2_16_128_U0_empty_n;

assign mul_1_2_8_9_128_U0_ap_continue = 1'b1;

assign mul_1_2_8_9_128_U0_ap_start = start_for_mul_1_2_8_9_128_U0_empty_n;

assign read_w_1_8_U0_ap_continue = 1'b1;

assign read_w_1_8_U0_ap_start = ((ap_sync_reg_read_w_1_8_U0_ap_ready ^ 1'b1) & ap_start);

assign read_x_2_8_U0_ap_continue = 1'b1;

assign read_x_2_8_U0_ap_start = ((ap_sync_reg_read_x_2_8_U0_ap_ready ^ 1'b1) & ap_start);

assign serialize_2_16_128_U0_ap_continue = 1'b1;

assign serialize_2_16_128_U0_ap_start = start_for_serialize_2_16_128_U0_empty_n;

assign serialize_2_16_128_U0_start_full_n = 1'b1;

assign serialize_2_16_128_U0_start_write = 1'b0;

assign split_1_1_8_9_U0_ap_continue = 1'b1;

assign split_1_1_8_9_U0_ap_start = start_for_split_1_1_8_9_U0_empty_n;

assign start_for_add_2_16_9_128_U0_din = 1'b1;

assign start_for_broadcast_1_1_2_8_1152_U0_din = 1'b1;

assign start_for_merge_1_2_16_128_U0_din = 1'b1;

assign start_for_mul_1_2_8_9_128_U0_din = 1'b1;

assign start_for_serialize_2_16_128_U0_din = 1'b1;

assign start_for_split_1_1_8_9_U0_din = 1'b1;

assign start_for_write_8_U0_din = 1'b1;

assign top_entry64_U0_ap_continue = 1'b1;

assign top_entry64_U0_ap_start = ((ap_sync_reg_top_entry64_U0_ap_ready ^ 1'b1) & ap_start);

assign write_8_U0_ap_continue = ap_continue;

assign write_8_U0_ap_start = start_for_write_8_U0_empty_n;

assign write_8_U0_start_full_n = 1'b1;

assign write_8_U0_start_write = 1'b0;


// synthesis translate_off
`include "top_hls_deadlock_detector.vh"
// synthesis translate_on


// synthesis translate_off
`include "top_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //top


